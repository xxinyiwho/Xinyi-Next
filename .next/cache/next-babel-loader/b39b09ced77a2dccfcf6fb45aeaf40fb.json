{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/close/components/close.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Close\n */\n// React\nimport { func, oneOf, string } from 'prop-types'; // UI\n\nimport { Button } from \"../../../atoms/button\";\nimport { CONTEXT, Icon } from \"../../../\"; // Style\n\nimport styled from 'styled-components';\nexport const Close = ({\n  className,\n  click,\n  context,\n  icon,\n  iconPrefix\n}) => {\n  return __jsx(StyledButton, {\n    className: className,\n    context: context,\n    onClick: click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Icon, {\n    \"aria-hidden\": \"true\",\n    context: context,\n    icon: icon,\n    prefix: iconPrefix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"close__StyledButton\",\n  componentId: \"sc-14l375b-0\"\n})([\"background-color:transparent;border:0;color:\", \";cursor:pointer;float:right;font-size:1.5rem;font-weight:700;line-height:1;opacity:0.6;padding:0 0.25rem;text-shadow:0 1px 0 #fff;margin:-1rem -1rem -1rem auto;z-index:10000;&:hover{background-color:transparent;color:#000;opacity:0.8;text-decoration:none;}\"], props => props.theme.COLOUR[props.context]);\nClose.propTypes = {\n  click: func.isRequired,\n  context: oneOf(_Object$values(CONTEXT)),\n  icon: string,\n  iconPrefix: string\n};\nClose.defaultProps = {\n  context: 'danger',\n  icon: 'times-circle'\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/close/components/close.js"],"names":["func","oneOf","string","Button","CONTEXT","Icon","styled","Close","className","click","context","icon","iconPrefix","StyledButton","props","theme","COLOUR","propTypes","isRequired","defaultProps"],"mappings":";;;;;AAAA;;;AAIA;AACA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,YAApC,C,CAEA;;AACA,SAASC,MAAT;AACA,SAASC,OAAT,EAAkBC,IAAlB,oB,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA,IAA7B;AAAmCC,EAAAA;AAAnC,CAAD,KAAqD;AACxE,SACE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAEJ,SAAzB;AAAoC,IAAA,OAAO,EAAEE,OAA7C;AAAsD,IAAA,OAAO,EAAED,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,mBAAY,MAAlB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAA2C,IAAA,IAAI,EAAEC,IAAjD;AAAuD,IAAA,MAAM,EAAEC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CANM;AAQP,MAAMC,YAAY,GAAGP,MAAM,CAACH,MAAD,CAAT;AAAA;AAAA;AAAA,yTAGPW,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBF,KAAK,CAACJ,OAAzB,CAHF,CAAlB;AAuBAH,KAAK,CAACU,SAAN,GAAkB;AAChBR,EAAAA,KAAK,EAAET,IAAI,CAACkB,UADI;AAEhBR,EAAAA,OAAO,EAAET,KAAK,CAAC,eAAcG,OAAd,CAAD,CAFE;AAGhBO,EAAAA,IAAI,EAAET,MAHU;AAIhBU,EAAAA,UAAU,EAAEV;AAJI,CAAlB;AAOAK,KAAK,CAACY,YAAN,GAAqB;AACnBT,EAAAA,OAAO,EAAE,QADU;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB","sourcesContent":["/**\n * Close\n */\n\n// React\nimport { func, oneOf, string } from 'prop-types'\n\n// UI\nimport { Button } from '../../../atoms/button'\nimport { CONTEXT, Icon } from '../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const Close = ({ className, click, context, icon, iconPrefix }) => {\n  return (\n    <StyledButton className={className} context={context} onClick={click}>\n      <Icon aria-hidden='true' context={context} icon={icon} prefix={iconPrefix} />\n    </StyledButton>\n  )\n}\n\nconst StyledButton = styled(Button)`\n  background-color: transparent;\n  border: 0;\n  color: ${props => props.theme.COLOUR[props.context]};\n  cursor: pointer;\n  float: right;\n  font-size: 1.5rem;\n  font-weight: 700;\n  line-height: 1;\n  opacity: 0.6;\n  padding: 0 0.25rem;\n  text-shadow: 0 1px 0 #fff;\n  margin: -1rem -1rem -1rem auto;\n  z-index: 10000;\n\n  &:hover {\n    background-color: transparent;\n    color: #000;\n    opacity: 0.8;\n    text-decoration: none;\n  }\n`\n\nClose.propTypes = {\n  click: func.isRequired,\n  context: oneOf(Object.values(CONTEXT)),\n  icon: string,\n  iconPrefix: string\n}\n\nClose.defaultProps = {\n  context: 'danger',\n  icon: 'times-circle'\n}\n"]},"metadata":{},"sourceType":"module"}