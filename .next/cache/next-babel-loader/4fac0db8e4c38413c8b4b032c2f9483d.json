{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/form/search/components/search.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Search\n */\n// React\nimport { bool, func, string, oneOf } from 'prop-types'; // UI\n\nimport { Button, Form, Icon, Input, InputGroup, InputGroupAddon, useForm } from \"../../../../\";\nexport const Search = ({\n  appendSearchButton,\n  appendSearchIcon,\n  className,\n  label,\n  onSearch,\n  placeholder,\n  prependSearchIcon,\n  type,\n  value\n}) => {\n  const initialState = {\n    query: value || ''\n  };\n  const {\n    change,\n    form,\n    clear\n  } = useForm(initialState);\n  const {\n    query\n  } = form;\n\n  const handleClear = id => {\n    clear(id);\n    onSearch('');\n  };\n\n  return __jsx(Form, {\n    className: className,\n    submit: () => onSearch(query),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, prependSearchIcon && __jsx(InputGroupAddon, {\n    addonType: \"prepend\",\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), __jsx(Input, {\n    change: change,\n    clear: handleClear,\n    id: \"query\",\n    placeholder: placeholder,\n    required: false,\n    type: type,\n    value: query,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), appendSearchIcon && __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), appendSearchButton && __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Button, {\n    content: label || 'Search',\n    context: \"dark\",\n    size: \"lg\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n};\nSearch.propTypes = {\n  appendSearchButton: bool,\n  appendSearchIcon: bool,\n  className: string,\n  label: string,\n  onSearch: func.isRequired,\n  placeholder: string,\n  prependSearchIcon: bool,\n  type: oneOf(['search', 'text']),\n  value: string\n};\nSearch.defaultProps = {\n  showReset: true,\n  type: 'search'\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/form/search/components/search.js"],"names":["bool","func","string","oneOf","Button","Form","Icon","Input","InputGroup","InputGroupAddon","useForm","Search","appendSearchButton","appendSearchIcon","className","label","onSearch","placeholder","prependSearchIcon","type","value","initialState","query","change","form","clear","handleClear","id","propTypes","isRequired","defaultProps","showReset"],"mappings":"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","sourcesContent":["/**\n * Search\n */\n\n// React\nimport { bool, func, string, oneOf } from 'prop-types'\n\n// UI\nimport { Button, Form, Icon, Input, InputGroup, InputGroupAddon, useForm } from '../../../../'\n\nexport const Search = ({\n  appendSearchButton,\n  appendSearchIcon,\n  className,\n  label,\n  onSearch,\n  placeholder,\n  prependSearchIcon,\n  type,\n  value\n}) => {\n  const initialState = {\n    query: value || ''\n  }\n\n  const { change, form, clear } = useForm(initialState)\n  const { query } = form\n\n  const handleClear = id => {\n    clear(id)\n    onSearch('')\n  }\n\n  return (\n    <Form className={className} submit={() => onSearch(query)}>\n      <InputGroup>\n        {prependSearchIcon && (\n          <InputGroupAddon addonType='prepend' text>\n            <Icon icon='search' />\n          </InputGroupAddon>\n        )}\n\n        <Input\n          change={change}\n          clear={handleClear}\n          id='query'\n          placeholder={placeholder}\n          required={false}\n          type={type}\n          value={query}\n        />\n\n        {appendSearchIcon && (\n          <InputGroupAddon addonType='append' text>\n            <Icon icon='search' />\n          </InputGroupAddon>\n        )}\n\n        {appendSearchButton && (\n          <InputGroupAddon addonType='append'>\n            <Button content={label || 'Search'} context='dark' size='lg' type='submit' />\n          </InputGroupAddon>\n        )}\n      </InputGroup>\n    </Form>\n  )\n}\n\nSearch.propTypes = {\n  appendSearchButton: bool,\n  appendSearchIcon: bool,\n  className: string,\n  label: string,\n  onSearch: func.isRequired,\n  placeholder: string,\n  prependSearchIcon: bool,\n  type: oneOf(['search', 'text']),\n  value: string\n}\n\nSearch.defaultProps = {\n  showReset: true,\n  type: 'search'\n}\n"]},"metadata":{},"sourceType":"module"}