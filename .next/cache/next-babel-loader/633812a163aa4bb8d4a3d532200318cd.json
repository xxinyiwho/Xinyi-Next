{"ast":null,"code":"/**\n * Progress Bar Div\n */\n// React\nimport { number, string, bool } from 'prop-types'; // UI\n\nimport { BACKGROUND } from \"../../../\"; // Style\n\nimport styled, { css, keyframes } from 'styled-components';\nconst ProgressBarStripesAnimation = keyframes([\"0%{background-position:1rem 0;}100%{background-position:0 0;}\"]);\nexport const ProgressBarDiv = styled.div.withConfig({\n  displayName: \"progressBarDiv__ProgressBarDiv\",\n  componentId: \"sib3q-0\"\n})([\"\", \" animation:\", \";background-image:\", \";background-size:\", \";color:\", \";display:flex;flex-direction:column;justify-content:center;overflow:hidden;text-align:center;transition:\", \";white-space:nowrap;width:\", \";\"], props => BACKGROUND(props), ({\n  animated\n}) => animated ? css([\"\", \" 1s linear infinite\"], ProgressBarStripesAnimation) : 'none 0 ease 0 1 normal none running', ({\n  striped,\n  theme: {\n    PROGRESSBAR: {\n      bgImage\n    }\n  }\n}) => striped ? bgImage : 'none', ({\n  striped,\n  theme: {\n    PROGRESSBAR: {\n      bgSize\n    }\n  }\n}) => striped ? bgSize : 'auto', ({\n  color,\n  context,\n  theme\n}) => color || (context === 'white' ? theme.COLOUR.primary : theme.COLOUR.white), ({\n  theme: {\n    PROGRESSBAR: {\n      transition\n    }\n  }\n}) => transition, ({\n  now\n}) => now + '%');\nProgressBarDiv.propTypes = {\n  animated: bool,\n  bgImage: string,\n  bgSize: string,\n  now: number,\n  striped: bool,\n  transition: string\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/progress/components/progressBarDiv.js"],"names":["number","string","bool","BACKGROUND","styled","css","keyframes","ProgressBarStripesAnimation","ProgressBarDiv","div","props","animated","striped","theme","PROGRESSBAR","bgImage","bgSize","color","context","COLOUR","primary","white","transition","now","propTypes"],"mappings":"AAAA;;;AAIA;AACA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,QAAqC,YAArC,C,CAEA;;AACA,SAASC,UAAT,oB,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,mBAAvC;AAEA,MAAMC,2BAA2B,GAAGD,SAAH,mEAAjC;AASA,OAAO,MAAME,cAAc,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,6NACvBC,KAAK,IAAIP,UAAU,CAACO,KAAD,CADI,EAEZ,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACXA,QAAQ,GACJN,GADI,8BAEAE,2BAFA,IAIJ,qCAPmB,EAQL,CAAC;AACnBK,EAAAA,OADmB;AAEnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AAAEC,MAAAA;AAAF;AADR;AAFY,CAAD,KAKbH,OAAO,GAAGG,OAAH,GAAa,MAbF,EAcN,CAAC;AAClBH,EAAAA,OADkB;AAElBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AAAEE,MAAAA;AAAF;AADR;AAFW,CAAD,KAKZJ,OAAO,GAAGI,MAAH,GAAY,MAnBD,EAoBhB,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBL,EAAAA;AAAlB,CAAD,KACPI,KAAK,KAAKC,OAAO,KAAK,OAAZ,GAAsBL,KAAK,CAACM,MAAN,CAAaC,OAAnC,GAA6CP,KAAK,CAACM,MAAN,CAAaE,KAA/D,CArBkB,EA2BX,CAAC;AACbR,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AAAEQ,MAAAA;AAAF;AADR;AADM,CAAD,KAIRA,UA/BmB,EAiChB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAaA,GAAG,GAAG,GAjCH,CAApB;AAoCPf,cAAc,CAACgB,SAAf,GAA2B;AACzBb,EAAAA,QAAQ,EAAET,IADe;AAEzBa,EAAAA,OAAO,EAAEd,MAFgB;AAGzBe,EAAAA,MAAM,EAAEf,MAHiB;AAIzBsB,EAAAA,GAAG,EAAEvB,MAJoB;AAKzBY,EAAAA,OAAO,EAAEV,IALgB;AAMzBoB,EAAAA,UAAU,EAAErB;AANa,CAA3B","sourcesContent":["/**\n * Progress Bar Div\n */\n\n// React\nimport { number, string, bool } from 'prop-types'\n\n// UI\nimport { BACKGROUND } from '../../../'\n\n// Style\nimport styled, { css, keyframes } from 'styled-components'\n\nconst ProgressBarStripesAnimation = keyframes`\n  0% {\n    background-position: 1rem 0;\n  }\n  100% {\n    background-position: 0 0;\n  }\n`\n\nexport const ProgressBarDiv = styled.div`\n  ${props => BACKGROUND(props)}\n  animation: ${({ animated }) =>\n    animated\n      ? css`\n          ${ProgressBarStripesAnimation} 1s linear infinite\n        `\n      : 'none 0 ease 0 1 normal none running'};\n  background-image: ${({\n    striped,\n    theme: {\n      PROGRESSBAR: { bgImage }\n    }\n  }) => (striped ? bgImage : 'none')};\n  background-size: ${({\n    striped,\n    theme: {\n      PROGRESSBAR: { bgSize }\n    }\n  }) => (striped ? bgSize : 'auto')};\n  color: ${({ color, context, theme }) =>\n    color || (context === 'white' ? theme.COLOUR.primary : theme.COLOUR.white)};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n  text-align: center;\n  transition: ${({\n    theme: {\n      PROGRESSBAR: { transition }\n    }\n  }) => transition};\n  white-space: nowrap;\n  width: ${({ now }) => now + '%'};\n`\n\nProgressBarDiv.propTypes = {\n  animated: bool,\n  bgImage: string,\n  bgSize: string,\n  now: number,\n  striped: bool,\n  transition: string\n}\n"]},"metadata":{},"sourceType":"module"}