{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\n/**\n * Colour\n */\nexport const COLOUR = ({\n  context,\n  outline,\n  theme\n}) => {\n  return `color: ${outline && theme.COLOUR[context] || context === 'light' && theme.COLOUR.dark || context === 'white' && theme.COLOUR.primary || context && theme.COLOUR[context] || theme.COLOUR[context]};`;\n};\n/**\n * Useful for hover effects to give a percentage difference\n */\n\nexport const SHADE_COLOUR = (colour, percent) => {\n  if (colour === '#fff') {\n    return '#ecf0f3';\n  }\n\n  var R = _parseInt(colour.substring(1, 3), 16);\n\n  var G = _parseInt(colour.substring(3, 5), 16);\n\n  var B = _parseInt(colour.substring(5, 7), 16);\n\n  R = _parseInt(R * (100 + percent) / 100);\n  G = _parseInt(G * (100 + percent) / 100);\n  B = _parseInt(B * (100 + percent) / 100);\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n  var RR = R.toString(16).length === 1 ? '0' + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length === 1 ? '0' + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length === 1 ? '0' + B.toString(16) : B.toString(16);\n  return '#' + RR + GG + BB;\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/theme/utils/colour.js"],"names":["COLOUR","context","outline","theme","dark","primary","SHADE_COLOUR","colour","percent","R","substring","G","B","RR","toString","length","GG","BB"],"mappings":";;AAAA;;;AAGA,OAAO,MAAMA,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAiC;AACrD,SAAQ,UAAUD,OAAO,IAAIC,KAAK,CAACH,MAAN,CAAaC,OAAb,CAAZ,IACdA,OAAO,KAAK,OAAZ,IAAuBE,KAAK,CAACH,MAAN,CAAaI,IADtB,IAEdH,OAAO,KAAK,OAAZ,IAAuBE,KAAK,CAACH,MAAN,CAAaK,OAFtB,IAGdJ,OAAO,IAAIE,KAAK,CAACH,MAAN,CAAaC,OAAb,CAHG,IAIfE,KAAK,CAACH,MAAN,CAAaC,OAAb,CAAsB,GAJxB;AAKD,CANM;AAQP;;;;AAGA,OAAO,MAAMK,YAAY,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AAC/C,MAAID,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAO,SAAP;AACD;;AAED,MAAIE,CAAC,GAAG,UAASF,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAT,EAAiC,EAAjC,CAAR;;AACA,MAAIC,CAAC,GAAG,UAASJ,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAT,EAAiC,EAAjC,CAAR;;AACA,MAAIE,CAAC,GAAG,UAASL,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAT,EAAiC,EAAjC,CAAR;;AAEAD,EAAAA,CAAC,GAAG,UAAUA,CAAC,IAAI,MAAMD,OAAV,CAAF,GAAwB,GAAjC,CAAJ;AACAG,EAAAA,CAAC,GAAG,UAAUA,CAAC,IAAI,MAAMH,OAAV,CAAF,GAAwB,GAAjC,CAAJ;AACAI,EAAAA,CAAC,GAAG,UAAUA,CAAC,IAAI,MAAMJ,OAAV,CAAF,GAAwB,GAAjC,CAAJ;AAEAC,EAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAUA,CAAV,GAAc,GAAlB;AACAE,EAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAUA,CAAV,GAAc,GAAlB;AACAC,EAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAUA,CAAV,GAAc,GAAlB;AAEA,MAAIC,EAAE,GAAGJ,CAAC,CAACK,QAAF,CAAW,EAAX,EAAeC,MAAf,KAA0B,CAA1B,GAA8B,MAAMN,CAAC,CAACK,QAAF,CAAW,EAAX,CAApC,GAAqDL,CAAC,CAACK,QAAF,CAAW,EAAX,CAA9D;AACA,MAAIE,EAAE,GAAGL,CAAC,CAACG,QAAF,CAAW,EAAX,EAAeC,MAAf,KAA0B,CAA1B,GAA8B,MAAMJ,CAAC,CAACG,QAAF,CAAW,EAAX,CAApC,GAAqDH,CAAC,CAACG,QAAF,CAAW,EAAX,CAA9D;AACA,MAAIG,EAAE,GAAGL,CAAC,CAACE,QAAF,CAAW,EAAX,EAAeC,MAAf,KAA0B,CAA1B,GAA8B,MAAMH,CAAC,CAACE,QAAF,CAAW,EAAX,CAApC,GAAqDF,CAAC,CAACE,QAAF,CAAW,EAAX,CAA9D;AAEA,SAAO,MAAMD,EAAN,GAAWG,EAAX,GAAgBC,EAAvB;AACD,CAtBM","sourcesContent":["/**\n * Colour\n */\nexport const COLOUR = ({ context, outline, theme }) => {\n  return `color: ${(outline && theme.COLOUR[context]) ||\n    (context === 'light' && theme.COLOUR.dark) ||\n    (context === 'white' && theme.COLOUR.primary) ||\n    (context && theme.COLOUR[context]) ||\n    theme.COLOUR[context]};`\n}\n\n/**\n * Useful for hover effects to give a percentage difference\n */\nexport const SHADE_COLOUR = (colour, percent) => {\n  if (colour === '#fff') {\n    return '#ecf0f3'\n  }\n\n  var R = parseInt(colour.substring(1, 3), 16)\n  var G = parseInt(colour.substring(3, 5), 16)\n  var B = parseInt(colour.substring(5, 7), 16)\n\n  R = parseInt((R * (100 + percent)) / 100)\n  G = parseInt((G * (100 + percent)) / 100)\n  B = parseInt((B * (100 + percent)) / 100)\n\n  R = R < 255 ? R : 255\n  G = G < 255 ? G : 255\n  B = B < 255 ? B : 255\n\n  var RR = R.toString(16).length === 1 ? '0' + R.toString(16) : R.toString(16)\n  var GG = G.toString(16).length === 1 ? '0' + G.toString(16) : G.toString(16)\n  var BB = B.toString(16).length === 1 ? '0' + B.toString(16) : B.toString(16)\n\n  return '#' + RR + GG + BB\n}\n"]},"metadata":{},"sourceType":"module"}