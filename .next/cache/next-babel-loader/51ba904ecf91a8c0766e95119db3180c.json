{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/table/components/table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Table\n */\n// React\nimport { array, bool, func, string } from 'prop-types'; // UI\n\nimport { BACKGROUND } from \"../../../\"; // Style\n\nimport styled, { css } from 'styled-components';\nexport const Table = ({\n  align,\n  caption,\n  className,\n  columns,\n  hover,\n  responsive,\n  rowClick,\n  rows,\n  striped\n}) => {\n  const handleClick = e => {\n    e.preventDefault();\n    const row = e.currentTarget.getAttribute('data-item');\n    rowClick(JSON.parse(row));\n  };\n\n  const renderColumns = () => {\n    return columns.map(({\n      hidden,\n      text\n    }, index) => {\n      if (hidden) {\n        return;\n      }\n\n      return __jsx(StyledTh, {\n        align: align,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, text);\n    });\n  };\n\n  const renderRows = () => {\n    const clickable = typeof rowClick === 'function';\n    return rows.map((row, index) => {\n      const context = row.context;\n      delete row.context;\n      return __jsx(StyledTr, {\n        context: context,\n        key: index,\n        \"data-item\": _JSON$stringify(row),\n        hover: hover,\n        onClick: clickable ? handleClick : null,\n        pointer: clickable,\n        striped: striped,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, _Object$entries(row).map(([key, value], index) => {\n        const length = columns.length;\n        const column = columns[index];\n\n        if (length && column.hidden) {\n          return;\n        }\n\n        return __jsx(StyledTd, {\n          align: align,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, length > 0 && column.formatter ? column.formatter({\n          row\n        }, column.formatterData) : value && value.__html ? __jsx(\"span\", {\n          dangerouslySetInnerHTML: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }) : value);\n      }));\n    });\n  };\n\n  const renderTable = () => __jsx(StyledTable, {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, caption && __jsx(StyledCaption, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, caption), __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, columns && renderColumns())), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, renderRows()));\n\n  return __jsx(React.Fragment, null, responsive && __jsx(StyledResponsive, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, renderTable()), !responsive && renderTable());\n};\nconst StyledResponsive = styled.div.withConfig({\n  displayName: \"table__StyledResponsive\",\n  componentId: \"sc-5j4ltz-0\"\n})([\"background-color:#fff;display:block;width:100%;overflow-x:auto;\"]);\nconst StyledTable = styled.table.withConfig({\n  displayName: \"table__StyledTable\",\n  componentId: \"sc-5j4ltz-1\"\n})([\"background-color:\", \";border-collapse:collapse;font-size:\", \";width:100%;\"], ({\n  theme\n}) => theme.COLOUR.transparent, ({\n  theme\n}) => theme.TABLE.fontSize);\nconst StyledTr = styled.tr.withConfig({\n  displayName: \"table__StyledTr\",\n  componentId: \"sc-5j4ltz-2\"\n})([\"cursor:\", \";\", \" \", \" \", \" \", \"\"], ({\n  pointer\n}) => pointer ? 'pointer' : 'initial', ({\n  context,\n  striped,\n  theme\n}) => !context && striped && css([\":nth-child(odd){background-color:\", \";}\"], theme.COLOUR.light), props => props.context && BACKGROUND(props), props => props.context && css([\"color:white;\"]), ({\n  hover\n}) => hover && css([\":hover{background-color:#eee;}\"]));\nconst StyledTh = styled.th.withConfig({\n  displayName: \"table__StyledTh\",\n  componentId: \"sc-5j4ltz-3\"\n})([\"border-bottom:2px solid \", \";border-top:1px solid \", \";padding:\", \";text-align:\", \";\"], ({\n  theme\n}) => theme.COLOUR.dark, ({\n  theme\n}) => theme.COLOUR.dark, ({\n  theme\n}) => theme.TABLE.padding, ({\n  align\n}) => align ? 'center' : 'left');\nconst StyledTd = styled.td.withConfig({\n  displayName: \"table__StyledTd\",\n  componentId: \"sc-5j4ltz-4\"\n})([\"border-top:1px solid \", \";padding:\", \";text-align:\", \";\"], ({\n  theme\n}) => theme.COLOUR.dark, ({\n  theme\n}) => theme.TABLE.padding, ({\n  align\n}) => align && 'center');\nconst StyledCaption = styled.caption.withConfig({\n  displayName: \"table__StyledCaption\",\n  componentId: \"sc-5j4ltz-5\"\n})([\"caption-side:bottom;color:#6c757d;padding:\", \" 0;text-align:left;\"], ({\n  theme\n}) => theme.TABLE.padding);\nTable.propTypes = {\n  align: bool,\n  caption: string,\n  classname: string,\n  columns: array,\n  hover: bool,\n  responsive: bool,\n  rowClick: func,\n  rows: array.isRequired,\n  striped: bool\n};\nTable.defaultProps = {\n  align: false,\n  columns: [],\n  className: 'Table',\n  hover: true,\n  responsive: true,\n  striped: true\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/table/components/table.js"],"names":["array","bool","func","string","BACKGROUND","styled","css","Table","align","caption","className","columns","hover","responsive","rowClick","rows","striped","handleClick","e","preventDefault","row","currentTarget","getAttribute","JSON","parse","renderColumns","map","hidden","text","index","renderRows","clickable","context","key","value","length","column","formatter","formatterData","__html","renderTable","StyledResponsive","div","StyledTable","table","theme","COLOUR","transparent","TABLE","fontSize","StyledTr","tr","pointer","light","props","StyledTh","th","dark","padding","StyledTd","td","StyledCaption","propTypes","classname","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Table\n */\n\n// React\nimport { array, bool, func, string } from 'prop-types'\n\n// UI\nimport { BACKGROUND } from '../../../'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const Table = ({\n  align,\n  caption,\n  className,\n  columns,\n  hover,\n  responsive,\n  rowClick,\n  rows,\n  striped\n}) => {\n  const handleClick = e => {\n    e.preventDefault()\n    const row = e.currentTarget.getAttribute('data-item')\n    rowClick(JSON.parse(row))\n  }\n\n  const renderColumns = () => {\n    return columns.map(({ hidden, text }, index) => {\n      if (hidden) {\n        return\n      }\n\n      return (\n        <StyledTh align={align} key={index}>\n          {text}\n        </StyledTh>\n      )\n    })\n  }\n\n  const renderRows = () => {\n    const clickable = typeof rowClick === 'function'\n\n    return rows.map((row, index) => {\n      const context = row.context\n      delete row.context\n\n      return (\n        <StyledTr\n          context={context}\n          key={index}\n          data-item={JSON.stringify(row)}\n          hover={hover}\n          onClick={clickable ? handleClick : null}\n          pointer={clickable}\n          striped={striped}\n        >\n          {Object.entries(row).map(([key, value], index) => {\n            const length = columns.length\n            const column = columns[index]\n\n            if (length && column.hidden) {\n              return\n            }\n\n            return (\n              <StyledTd align={align} key={index}>\n                {length > 0 && column.formatter ? (\n                  column.formatter({ row }, column.formatterData)\n                ) : value && value.__html ? (\n                  <span dangerouslySetInnerHTML={value} />\n                ) : (\n                  value\n                )}\n              </StyledTd>\n            )\n          })}\n        </StyledTr>\n      )\n    })\n  }\n\n  const renderTable = () => (\n    <StyledTable className={className}>\n      {caption && <StyledCaption>{caption}</StyledCaption>}\n      <thead>\n        <tr>{columns && renderColumns()}</tr>\n      </thead>\n      <tbody>{renderRows()}</tbody>\n    </StyledTable>\n  )\n\n  return (\n    <>\n      {responsive && <StyledResponsive>{renderTable()}</StyledResponsive>}\n\n      {!responsive && renderTable()}\n    </>\n  )\n}\n\nconst StyledResponsive = styled.div`\n  background-color: #fff;\n  display: block;\n  width: 100%;\n  overflow-x: auto;\n`\n\nconst StyledTable = styled.table`\n  background-color: ${({ theme }) => theme.COLOUR.transparent};\n  border-collapse: collapse;\n  font-size: ${({ theme }) => theme.TABLE.fontSize};\n  width: 100%;\n`\n\nconst StyledTr = styled.tr`\n  cursor: ${({ pointer }) => (pointer ? 'pointer' : 'initial')};\n  ${({ context, striped, theme }) =>\n    !context &&\n    striped &&\n    css`\n      :nth-child(odd) {\n        background-color: ${theme.COLOUR.light};\n      }\n    `}\n\n  ${props => props.context && BACKGROUND(props)}\n  ${props =>\n    props.context &&\n    css`\n      color: white;\n    `}\n\n  ${({ hover }) =>\n    hover &&\n    css`\n      :hover {\n        background-color: #eee;\n      }\n    `}\n`\n\nconst StyledTh = styled.th`\n  border-bottom: 2px solid ${({ theme }) => theme.COLOUR.dark};\n  border-top: 1px solid ${({ theme }) => theme.COLOUR.dark};\n  padding: ${({ theme }) => theme.TABLE.padding};\n  text-align: ${({ align }) => (align ? 'center' : 'left')};\n`\n\nconst StyledTd = styled.td`\n  border-top: 1px solid ${({ theme }) => theme.COLOUR.dark};\n  padding: ${({ theme }) => theme.TABLE.padding};\n  text-align: ${({ align }) => align && 'center'};\n`\n\nconst StyledCaption = styled.caption`\n  caption-side: bottom;\n  color: #6c757d;\n  padding: ${({ theme }) => theme.TABLE.padding} 0;\n  text-align: left;\n`\n\nTable.propTypes = {\n  align: bool,\n  caption: string,\n  classname: string,\n  columns: array,\n  hover: bool,\n  responsive: bool,\n  rowClick: func,\n  rows: array.isRequired,\n  striped: bool\n}\n\nTable.defaultProps = {\n  align: false,\n  columns: [],\n  className: 'Table',\n  hover: true,\n  responsive: true,\n  striped: true\n}\n"]},"metadata":{},"sourceType":"module"}