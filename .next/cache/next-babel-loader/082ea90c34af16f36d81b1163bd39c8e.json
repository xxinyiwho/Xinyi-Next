{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nexport async function requestSimulator(responseType = 'success', timeout = 3000) {\n  await new _Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (responseType === 'success') resolve('Succesfull!');else reject(new Error('Failed!'));\n    }, 3000);\n  });\n}","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/utils/requestSimulator.js"],"names":["requestSimulator","responseType","timeout","resolve","reject","setTimeout","Error"],"mappings":";AAAA,OAAO,eAAeA,gBAAf,CAAiCC,YAAY,GAAG,SAAhD,EAA2DC,OAAO,GAAG,IAArE,EAA2E;AAChF,QAAM,aAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrCC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIJ,YAAY,KAAK,SAArB,EAAgCE,OAAO,CAAC,aAAD,CAAP,CAAhC,KACKC,MAAM,CAAC,IAAIE,KAAJ,CAAU,SAAV,CAAD,CAAN;AACN,KAHS,EAGP,IAHO,CAAV;AAID,GALK,CAAN;AAMD","sourcesContent":["export async function requestSimulator (responseType = 'success', timeout = 3000) {\n  await new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (responseType === 'success') resolve('Succesfull!')\n      else reject(new Error('Failed!'))\n    }, 3000)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}