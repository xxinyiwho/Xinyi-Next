{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/widgets/button.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background: none;\\n    border: none;\\n    color: \", \";\\n    cursor: pointer;\\n    font-size: 0.8125rem;\\n    padding: 1rem 0.75rem;\\n    width: 100%;\\n\\n    &:hover {\\n      color: \", \";\\n      background: none;\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Navbar - Widgets\n */\n// React\nimport { bool, string, func } from 'prop-types'; // UI\n\nimport { Button, Link, MEDIA_QUERY_MAX } from \"../../../../\"; // Style\n\nimport styled from 'styled-components';\nexport var NavButton = function NavButton(_ref) {\n  var closeMenu = _ref.closeMenu,\n      id = _ref.id,\n      name = _ref.name,\n      to = _ref.to,\n      type = _ref.type,\n      visible = _ref.visible;\n  return __jsx(Link, {\n    to: to,\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(StyledButton, {\n    id: id,\n    context: type.context,\n    content: name,\n    onClick: visible ? closeMenu : function () {},\n    outline: type.outline,\n    size: type.size,\n    type: type.as,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\nvar StyledButton = styled(Button).withConfig({\n  displayName: \"button__StyledButton\",\n  componentId: \"sc-1pm2bd6-0\"\n})([\"\", \"\"], MEDIA_QUERY_MAX.desktop(_templateObject(), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.NAVBAR.colourActive;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.COLOUR.primary;\n}));\nNavButton.propTypes = {\n  closeMenu: func,\n  id: string,\n  name: string,\n  to: string,\n  type: string,\n  visible: bool\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/widgets/button.js"],"names":["bool","string","func","Button","Link","MEDIA_QUERY_MAX","styled","NavButton","closeMenu","id","name","to","type","visible","context","outline","size","as","StyledButton","desktop","theme","NAVBAR","colourActive","COLOUR","primary","propTypes"],"mappings":";;;;;;;;;;;;;;;AAAA;;;AAIA;AACA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,eAAvB,uB,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAgD;AAAA,MAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,MAAlCC,EAAkC,QAAlCA,EAAkC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,EAAwB,QAAxBA,EAAwB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACvE,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,EAAV;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,EAAE,EAAEF,EADN;AAEE,IAAA,OAAO,EAAEG,IAAI,CAACE,OAFhB;AAGE,IAAA,OAAO,EAAEJ,IAHX;AAIE,IAAA,OAAO,EAAEG,OAAO,GAAGL,SAAH,GAAe,YAAM,CAAE,CAJzC;AAKE,IAAA,OAAO,EAAEI,IAAI,CAACG,OALhB;AAME,IAAA,IAAI,EAAEH,IAAI,CAACI,IANb;AAOE,IAAA,IAAI,EAAEJ,IAAI,CAACK,EAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CAdM;AAgBP,IAAMC,YAAY,GAAGZ,MAAM,CAACH,MAAD,CAAT;AAAA;AAAA;AAAA,aACdE,eAAe,CAACc,OADF,oBAIL;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,YAA5B;AAAA,CAJK,EAWH;AAAA,MAAGF,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACG,MAAN,CAAaC,OAA5B;AAAA,CAXG,EAAlB;AAiBAjB,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,SAAS,EAAEN,IADS;AAEpBO,EAAAA,EAAE,EAAER,MAFgB;AAGpBS,EAAAA,IAAI,EAAET,MAHc;AAIpBU,EAAAA,EAAE,EAAEV,MAJgB;AAKpBW,EAAAA,IAAI,EAAEX,MALc;AAMpBY,EAAAA,OAAO,EAAEb;AANW,CAAtB","sourcesContent":["/**\n * Navbar - Widgets\n */\n\n// React\nimport { bool, string, func } from 'prop-types'\n\n// UI\nimport { Button, Link, MEDIA_QUERY_MAX } from '../../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const NavButton = ({ closeMenu, id, name, to, type, visible }) => {\n  return (\n    <Link to={to} passHref>\n      <StyledButton\n        id={id}\n        context={type.context}\n        content={name}\n        onClick={visible ? closeMenu : () => {}}\n        outline={type.outline}\n        size={type.size}\n        type={type.as}\n      />\n    </Link>\n  )\n}\n\nconst StyledButton = styled(Button)`\n  ${MEDIA_QUERY_MAX.desktop`\n    background: none;\n    border: none;\n    color: ${({ theme }) => theme.NAVBAR.colourActive};\n    cursor: pointer;\n    font-size: 0.8125rem;\n    padding: 1rem 0.75rem;\n    width: 100%;\n\n    &:hover {\n      color: ${({ theme }) => theme.COLOUR.primary};\n      background: none;\n    }\n  `}\n`\n\nNavButton.propTypes = {\n  closeMenu: func,\n  id: string,\n  name: string,\n  to: string,\n  type: string,\n  visible: bool\n}\n"]},"metadata":{},"sourceType":"module"}