{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\n/**\n * Services - Hooks  - useNotifications\n *\n */\n// React\nimport { useState, useEffect } from 'react'; // UI\n\nimport { Api, useInterval } from \"../../../\";\nexport const useNotifications = (url, params = {}, seconds = 60) => {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    messages: []\n  });\n\n  if (!url) {\n    return {\n      data\n    };\n  }\n\n  const fetchNotifications = async () => {\n    const res = await Api.get(url, params);\n\n    if (res.status === 200 && res.data.messages) {\n      window.localStorage.setItem('active-notifications', _JSON$stringify(res.data.messages));\n      setData({\n        notifications: res.data.messages\n      });\n    }\n  };\n\n  useInterval(() => {\n    fetchNotifications();\n  }, seconds * 1000);\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  return {\n    data,\n    fetchNotifications\n  };\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/services/hooks/useNotifications.js"],"names":["useState","useEffect","Api","useInterval","useNotifications","url","params","seconds","data","setData","messages","fetchNotifications","res","get","status","window","localStorage","setItem","notifications"],"mappings":";;AAAA;;;;AAKA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,SAASC,GAAT,EAAcC,WAAd;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,MAAM,GAAG,EAAf,EAAmBC,OAAO,GAAG,EAA7B,KAAoC;AAClE,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC;AAAEU,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAhC;;AAEA,MAAI,CAACL,GAAL,EAAU;AACR,WAAO;AAAEG,MAAAA;AAAF,KAAP;AACD;;AAED,QAAMG,kBAAkB,GAAG,YAAY;AACrC,UAAMC,GAAG,GAAG,MAAMV,GAAG,CAACW,GAAJ,CAAQR,GAAR,EAAaC,MAAb,CAAlB;;AAEA,QAAIM,GAAG,CAACE,MAAJ,KAAe,GAAf,IAAsBF,GAAG,CAACJ,IAAJ,CAASE,QAAnC,EAA6C;AAC3CK,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,sBAA5B,EAAoD,gBAAeL,GAAG,CAACJ,IAAJ,CAASE,QAAxB,CAApD;AACAD,MAAAA,OAAO,CAAC;AAAES,QAAAA,aAAa,EAAEN,GAAG,CAACJ,IAAJ,CAASE;AAA1B,OAAD,CAAP;AACD;AACF,GAPD;;AASAP,EAAAA,WAAW,CAAC,MAAM;AAChBQ,IAAAA,kBAAkB;AACnB,GAFU,EAERJ,OAAO,GAAG,IAFF,CAAX;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAEH,IAAAA,IAAF;AAAQG,IAAAA;AAAR,GAAP;AACD,CAzBM","sourcesContent":["/**\n * Services - Hooks  - useNotifications\n *\n */\n\n// React\nimport { useState, useEffect } from 'react'\n\n// UI\nimport { Api, useInterval } from '../../../'\n\nexport const useNotifications = (url, params = {}, seconds = 60) => {\n  const [data, setData] = useState({ messages: [] })\n\n  if (!url) {\n    return { data }\n  }\n\n  const fetchNotifications = async () => {\n    const res = await Api.get(url, params)\n\n    if (res.status === 200 && res.data.messages) {\n      window.localStorage.setItem('active-notifications', JSON.stringify(res.data.messages))\n      setData({ notifications: res.data.messages })\n    }\n  }\n\n  useInterval(() => {\n    fetchNotifications()\n  }, seconds * 1000)\n\n  useEffect(() => {\n    fetchNotifications()\n  }, [])\n\n  return { data, fetchNotifications }\n}\n"]},"metadata":{},"sourceType":"module"}