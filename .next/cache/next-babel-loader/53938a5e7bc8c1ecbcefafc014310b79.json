{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/emojiMart/components/emojiMart.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * EmojiMart\n */\n// React\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { bool, func } from 'prop-types'; // Emoji\n\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { string } from 'postcss-selector-parser';\nexport const EmojiMart = ({\n  closeOnClickOut,\n  handleSelect,\n  handleOpenPicker,\n  open,\n  style\n}) => {\n  const node = useRef();\n\n  const handleClickAway = e => {\n    e.preventDefault();\n    const domNode = ReactDOM.findDOMNode(node.current);\n\n    if (domNode.contains(encodeURIComponent.target)) {\n      handleOpenPicker(false);\n    }\n  };\n\n  useEffect(() => {\n    if (open && closeOnClickOut) {\n      document.addEventListener('mousedown', handleClickAway);\n    } else {\n      document.removeEventListener('mousedown', handleClickAway);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickAway);\n    };\n  }, [open]);\n\n  const handlePickEmoji = (emoji, e) => {\n    e.preventDefault();\n    handleSelect(emoji.native);\n    handleOpenPicker(false);\n  };\n\n  return open && __jsx(Picker, {\n    emoji: \"\",\n    emojiSize: 16,\n    include: ['foods', 'people', 'recent', 'nature'],\n    onClick: handlePickEmoji,\n    set: \"google\",\n    sheetSize: 20,\n    showSkinTones: false,\n    showPreview: false,\n    style: _objectSpread({\n      border: 'initial',\n      borderRadius: 'initial',\n      width: '100%'\n    }, style),\n    title: \"Pick your emoji...\",\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\nEmojiMart.propTypes = {\n  closeOnClickOut: bool,\n  handleOpenPicker: func.isRequired,\n  handleSelect: func.isRequired,\n  open: bool,\n  style: string\n};\nEmojiMart.defaultProps = {\n  closeOnClickOut: true,\n  open: false\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/emojiMart/components/emojiMart.js"],"names":["React","useEffect","useRef","ReactDOM","bool","func","Picker","string","EmojiMart","closeOnClickOut","handleSelect","handleOpenPicker","open","style","node","handleClickAway","e","preventDefault","domNode","findDOMNode","current","contains","encodeURIComponent","target","document","addEventListener","removeEventListener","handlePickEmoji","emoji","native","border","borderRadius","width","propTypes","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA;;;AAIA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,YAA3B,C,CAEA;;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,+BAAP;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,YAAnB;AAAiCC,EAAAA,gBAAjC;AAAmDC,EAAAA,IAAnD;AAAyDC,EAAAA;AAAzD,CAAD,KAAsE;AAC7F,QAAMC,IAAI,GAAGZ,MAAM,EAAnB;;AAEA,QAAMa,eAAe,GAAGC,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAGf,QAAQ,CAACgB,WAAT,CAAqBL,IAAI,CAACM,OAA1B,CAAhB;;AAEA,QAAIF,OAAO,CAACG,QAAR,CAAiBC,kBAAkB,CAACC,MAApC,CAAJ,EAAiD;AAC/CZ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAPD;;AASAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,IAAIH,eAAZ,EAA6B;AAC3Be,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCV,eAAvC;AACD,KAFD,MAEO;AACLS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CX,eAA1C;AACD;;AACD,WAAO,MAAM;AACXS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CX,eAA1C;AACD,KAFD;AAGD,GATQ,EASN,CAACH,IAAD,CATM,CAAT;;AAWA,QAAMe,eAAe,GAAG,CAACC,KAAD,EAAQZ,CAAR,KAAc;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,YAAY,CAACkB,KAAK,CAACC,MAAP,CAAZ;AACAlB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAJD;;AAMA,SACEC,IAAI,IACF,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,EADR;AAEE,IAAA,SAAS,EAAE,EAFb;AAGE,IAAA,OAAO,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,QAA9B,CAHX;AAIE,IAAA,OAAO,EAAEe,eAJX;AAKE,IAAA,GAAG,EAAC,QALN;AAME,IAAA,SAAS,EAAE,EANb;AAOE,IAAA,aAAa,EAAE,KAPjB;AAQE,IAAA,WAAW,EAAE,KARf;AASE,IAAA,KAAK;AAAIG,MAAAA,MAAM,EAAE,SAAZ;AAAuBC,MAAAA,YAAY,EAAE,SAArC;AAAgDC,MAAAA,KAAK,EAAE;AAAvD,OAAkEnB,KAAlE,CATP;AAUE,IAAA,KAAK,EAAC,oBAVR;AAWE,IAAA,GAAG,EAAEC,IAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAiBD,CA9CM;AAgDPN,SAAS,CAACyB,SAAV,GAAsB;AACpBxB,EAAAA,eAAe,EAAEL,IADG;AAEpBO,EAAAA,gBAAgB,EAAEN,IAAI,CAAC6B,UAFH;AAGpBxB,EAAAA,YAAY,EAAEL,IAAI,CAAC6B,UAHC;AAIpBtB,EAAAA,IAAI,EAAER,IAJc;AAKpBS,EAAAA,KAAK,EAAEN;AALa,CAAtB;AAQAC,SAAS,CAAC2B,YAAV,GAAyB;AACvB1B,EAAAA,eAAe,EAAE,IADM;AAEvBG,EAAAA,IAAI,EAAE;AAFiB,CAAzB","sourcesContent":["/**\n * EmojiMart\n */\n\n// React\nimport React, { useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport { bool, func } from 'prop-types'\n\n// Emoji\nimport { Picker } from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\nimport { string } from 'postcss-selector-parser'\n\nexport const EmojiMart = ({ closeOnClickOut, handleSelect, handleOpenPicker, open, style }) => {\n  const node = useRef()\n\n  const handleClickAway = e => {\n    e.preventDefault()\n    const domNode = ReactDOM.findDOMNode(node.current)\n\n    if (domNode.contains(encodeURIComponent.target)) {\n      handleOpenPicker(false)\n    }\n  }\n\n  useEffect(() => {\n    if (open && closeOnClickOut) {\n      document.addEventListener('mousedown', handleClickAway)\n    } else {\n      document.removeEventListener('mousedown', handleClickAway)\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickAway)\n    }\n  }, [open])\n\n  const handlePickEmoji = (emoji, e) => {\n    e.preventDefault()\n    handleSelect(emoji.native)\n    handleOpenPicker(false)\n  }\n\n  return (\n    open && (\n      <Picker\n        emoji=''\n        emojiSize={16}\n        include={['foods', 'people', 'recent', 'nature']}\n        onClick={handlePickEmoji}\n        set='google'\n        sheetSize={20}\n        showSkinTones={false}\n        showPreview={false}\n        style={{ border: 'initial', borderRadius: 'initial', width: '100%', ...style }}\n        title='Pick your emoji...'\n        ref={node}\n      />\n    )\n  )\n}\n\nEmojiMart.propTypes = {\n  closeOnClickOut: bool,\n  handleOpenPicker: func.isRequired,\n  handleSelect: func.isRequired,\n  open: bool,\n  style: string\n}\n\nEmojiMart.defaultProps = {\n  closeOnClickOut: true,\n  open: false\n}\n"]},"metadata":{},"sourceType":"module"}