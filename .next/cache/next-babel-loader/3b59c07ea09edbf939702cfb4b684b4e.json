{"ast":null,"code":"/**\n * Validator: Post Code - UK\n */\nexport var validatorPostCode = function validatorPostCode(postCode) {\n  var regExp = /^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([AZa-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z]))))[0-9][A-Za-z]{2})$/;\n  return regExp.test(postCode);\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/utils/validator/postCode/index.js"],"names":["validatorPostCode","postCode","regExp","test"],"mappings":"AAAA;;;AAGA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,QAAQ,EAAI;AAC3C,MAAMC,MAAM,GAAG,yKAAf;AAEA,SAAOA,MAAM,CAACC,IAAP,CAAYF,QAAZ,CAAP;AACD,CAJM","sourcesContent":["/**\n * Validator: Post Code - UK\n */\nexport const validatorPostCode = postCode => {\n  const regExp = /^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([AZa-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z]))))[0-9][A-Za-z]{2})$/\n\n  return regExp.test(postCode)\n}\n"]},"metadata":{},"sourceType":"module"}