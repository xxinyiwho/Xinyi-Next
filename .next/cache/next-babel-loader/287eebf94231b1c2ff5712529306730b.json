{"ast":null,"code":"/**\n * Intercom\n */\n// React\nimport React, { useEffect } from 'react';\nimport { string } from 'prop-types';\nvar canUseDOM = !!(true && window.document && window.document.createElement);\nexport var IntercomAPI = function IntercomAPI() {\n  if (canUseDOM && window.Intercom) {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    window.Intercom.apply(null, args);\n  }\n};\nexport var Intercom = React.memo(function (_ref) {\n  var appID = _ref.appID;\n  useEffect(function () {\n    if (!appID || !canUseDOM) {\n      return;\n    }\n\n    if (!window.Intercom) {\n      ;\n\n      (function (w, d, id, s, x) {\n        function i() {\n          i.c(arguments);\n        }\n\n        i.q = [];\n\n        i.c = function (args) {\n          i.q.push(args);\n        };\n\n        w.Intercom = i;\n        s = d.createElement('script');\n        s.async = 1;\n        s.src = 'https://widget.intercom.io/widget/' + id;\n        d.head.appendChild(s);\n      })(window, document, appID);\n    }\n\n    window.intercomSettings = {\n      app_id: appID,\n      custom_launcher_selector: '#openIntercom'\n    };\n\n    if (window.Intercom) {\n      window.Intercom('boot');\n    }\n\n    return function () {\n      if (!canUseDOM || !window.Intercom) return false;\n      window.Intercom('shutdown');\n      delete window.Intercom;\n      delete window.intercomSettings;\n    };\n  }, []);\n  return false;\n});\nIntercom.propTypes = {\n  appID: string.isRequired\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/intercom/intercom.js"],"names":["React","useEffect","string","canUseDOM","window","document","createElement","IntercomAPI","Intercom","args","apply","memo","appID","w","d","id","s","x","i","c","arguments","q","push","async","src","head","appendChild","intercomSettings","app_id","custom_launcher_selector","propTypes","isRequired"],"mappings":"AAAA;;;AAIA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,IAAMC,SAAS,GAAG,CAAC,EACjB,QACAC,MAAM,CAACC,QADP,IAEAD,MAAM,CAACC,QAAP,CAAgBC,aAHC,CAAnB;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAa;AACtC,MAAIJ,SAAS,IAAIC,MAAM,CAACI,QAAxB,EAAkC;AAAA,sCADLC,IACK;AADLA,MAAAA,IACK;AAAA;;AAChCL,IAAAA,MAAM,CAACI,QAAP,CAAgBE,KAAhB,CAAsB,IAAtB,EAA4BD,IAA5B;AACD;AACF,CAJM;AAMP,OAAO,IAAMD,QAAQ,GAAGR,KAAK,CAACW,IAAN,CAAW,gBAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAChDX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACW,KAAD,IAAU,CAACT,SAAf,EAA0B;AACxB;AACD;;AAED,QAAI,CAACC,MAAM,CAACI,QAAZ,EAAsB;AACpB;;AAAC,OAAC,UAACK,CAAD,EAAIC,CAAJ,EAAOC,EAAP,EAAWC,CAAX,EAAcC,CAAd,EAAoB;AACpB,iBAASC,CAAT,GAAc;AACZA,UAAAA,CAAC,CAACC,CAAF,CAAIC,SAAJ;AACD;;AACDF,QAAAA,CAAC,CAACG,CAAF,GAAM,EAAN;;AACAH,QAAAA,CAAC,CAACC,CAAF,GAAM,UAAAV,IAAI,EAAI;AACZS,UAAAA,CAAC,CAACG,CAAF,CAAIC,IAAJ,CAASb,IAAT;AACD,SAFD;;AAGAI,QAAAA,CAAC,CAACL,QAAF,GAAaU,CAAb;AACAF,QAAAA,CAAC,GAAGF,CAAC,CAACR,aAAF,CAAgB,QAAhB,CAAJ;AACAU,QAAAA,CAAC,CAACO,KAAF,GAAU,CAAV;AACAP,QAAAA,CAAC,CAACQ,GAAF,GAAQ,uCAAuCT,EAA/C;AACAD,QAAAA,CAAC,CAACW,IAAF,CAAOC,WAAP,CAAmBV,CAAnB;AACD,OAbA,EAaEZ,MAbF,EAaUC,QAbV,EAaoBO,KAbpB;AAcF;;AAEDR,IAAAA,MAAM,CAACuB,gBAAP,GAA0B;AACxBC,MAAAA,MAAM,EAAEhB,KADgB;AAExBiB,MAAAA,wBAAwB,EAAE;AAFF,KAA1B;;AAKA,QAAIzB,MAAM,CAACI,QAAX,EAAqB;AACnBJ,MAAAA,MAAM,CAACI,QAAP,CAAgB,MAAhB;AACD;;AAED,WAAO,YAAM;AACX,UAAI,CAACL,SAAD,IAAc,CAACC,MAAM,CAACI,QAA1B,EAAoC,OAAO,KAAP;AACpCJ,MAAAA,MAAM,CAACI,QAAP,CAAgB,UAAhB;AACA,aAAOJ,MAAM,CAACI,QAAd;AACA,aAAOJ,MAAM,CAACuB,gBAAd;AACD,KALD;AAMD,GArCQ,EAqCN,EArCM,CAAT;AAuCA,SAAO,KAAP;AACD,CAzCuB,CAAjB;AA2CPnB,QAAQ,CAACsB,SAAT,GAAqB;AACnBlB,EAAAA,KAAK,EAAEV,MAAM,CAAC6B;AADK,CAArB","sourcesContent":["/**\n * Intercom\n */\n\n// React\nimport React, { useEffect } from 'react'\nimport { string } from 'prop-types'\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n)\n\nexport const IntercomAPI = (...args) => {\n  if (canUseDOM && window.Intercom) {\n    window.Intercom.apply(null, args)\n  }\n}\n\nexport const Intercom = React.memo(({ appID }) => {\n  useEffect(() => {\n    if (!appID || !canUseDOM) {\n      return\n    }\n\n    if (!window.Intercom) {\n      ;((w, d, id, s, x) => {\n        function i () {\n          i.c(arguments)\n        }\n        i.q = []\n        i.c = args => {\n          i.q.push(args)\n        }\n        w.Intercom = i\n        s = d.createElement('script')\n        s.async = 1\n        s.src = 'https://widget.intercom.io/widget/' + id\n        d.head.appendChild(s)\n      })(window, document, appID)\n    }\n\n    window.intercomSettings = {\n      app_id: appID,\n      custom_launcher_selector: '#openIntercom'\n    }\n\n    if (window.Intercom) {\n      window.Intercom('boot')\n    }\n\n    return () => {\n      if (!canUseDOM || !window.Intercom) return false\n      window.Intercom('shutdown')\n      delete window.Intercom\n      delete window.intercomSettings\n    }\n  }, [])\n\n  return false\n})\n\nIntercom.propTypes = {\n  appID: string.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}