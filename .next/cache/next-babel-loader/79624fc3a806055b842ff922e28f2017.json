{"ast":null,"code":"/**\n * Progress Bar Div\n */\n// React\nimport { number, string, bool } from 'prop-types'; // UI\n\nimport { BACKGROUND } from \"../../../\"; // Style\n\nimport styled, { css, keyframes } from 'styled-components';\nvar ProgressBarStripesAnimation = keyframes([\"0%{background-position:1rem 0;}100%{background-position:0 0;}\"]);\nexport var ProgressBarDiv = styled.div.withConfig({\n  displayName: \"progressBarDiv__ProgressBarDiv\",\n  componentId: \"sib3q-0\"\n})([\"\", \" animation:\", \";background-image:\", \";background-size:\", \";color:\", \";display:flex;flex-direction:column;justify-content:center;overflow:hidden;text-align:center;transition:\", \";white-space:nowrap;width:\", \";\"], function (props) {\n  return BACKGROUND(props);\n}, function (_ref) {\n  var animated = _ref.animated;\n  return animated ? css([\"\", \" 1s linear infinite\"], ProgressBarStripesAnimation) : 'none 0 ease 0 1 normal none running';\n}, function (_ref2) {\n  var striped = _ref2.striped,\n      bgImage = _ref2.theme.PROGRESSBAR.bgImage;\n  return striped ? bgImage : 'none';\n}, function (_ref3) {\n  var striped = _ref3.striped,\n      bgSize = _ref3.theme.PROGRESSBAR.bgSize;\n  return striped ? bgSize : 'auto';\n}, function (_ref4) {\n  var color = _ref4.color,\n      context = _ref4.context,\n      theme = _ref4.theme;\n  return color || (context === 'white' ? theme.COLOUR.primary : theme.COLOUR.white);\n}, function (_ref5) {\n  var transition = _ref5.theme.PROGRESSBAR.transition;\n  return transition;\n}, function (_ref6) {\n  var now = _ref6.now;\n  return now + '%';\n});\nProgressBarDiv.propTypes = {\n  animated: bool,\n  bgImage: string,\n  bgSize: string,\n  now: number,\n  striped: bool,\n  transition: string\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/progress/components/progressBarDiv.js"],"names":["number","string","bool","BACKGROUND","styled","css","keyframes","ProgressBarStripesAnimation","ProgressBarDiv","div","props","animated","striped","bgImage","theme","PROGRESSBAR","bgSize","color","context","COLOUR","primary","white","transition","now","propTypes"],"mappings":"AAAA;;;AAIA;AACA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,QAAqC,YAArC,C,CAEA;;AACA,SAASC,UAAT,oB,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,mBAAvC;AAEA,IAAMC,2BAA2B,GAAGD,SAAH,mEAAjC;AASA,OAAO,IAAME,cAAc,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,6NACvB,UAAAC,KAAK;AAAA,SAAIP,UAAU,CAACO,KAAD,CAAd;AAAA,CADkB,EAEZ;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACXA,QAAQ,GACJN,GADI,8BAEAE,2BAFA,IAIJ,qCALO;AAAA,CAFY,EAQL;AAAA,MAClBK,OADkB,SAClBA,OADkB;AAAA,MAGDC,OAHC,SAElBC,KAFkB,CAGhBC,WAHgB,CAGDF,OAHC;AAAA,SAKbD,OAAO,GAAGC,OAAH,GAAa,MALP;AAAA,CARK,EAcN;AAAA,MACjBD,OADiB,SACjBA,OADiB;AAAA,MAGAI,MAHA,SAEjBF,KAFiB,CAGfC,WAHe,CAGAC,MAHA;AAAA,SAKZJ,OAAO,GAAGI,MAAH,GAAY,MALP;AAAA,CAdM,EAoBhB;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,OAAV,SAAUA,OAAV;AAAA,MAAmBJ,KAAnB,SAAmBA,KAAnB;AAAA,SACPG,KAAK,KAAKC,OAAO,KAAK,OAAZ,GAAsBJ,KAAK,CAACK,MAAN,CAAaC,OAAnC,GAA6CN,KAAK,CAACK,MAAN,CAAaE,KAA/D,CADE;AAAA,CApBgB,EA2BX;AAAA,MAEKC,UAFL,SACZR,KADY,CAEVC,WAFU,CAEKO,UAFL;AAAA,SAIRA,UAJQ;AAAA,CA3BW,EAiChB;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,SAAaA,GAAG,GAAG,GAAnB;AAAA,CAjCgB,CAApB;AAoCPf,cAAc,CAACgB,SAAf,GAA2B;AACzBb,EAAAA,QAAQ,EAAET,IADe;AAEzBW,EAAAA,OAAO,EAAEZ,MAFgB;AAGzBe,EAAAA,MAAM,EAAEf,MAHiB;AAIzBsB,EAAAA,GAAG,EAAEvB,MAJoB;AAKzBY,EAAAA,OAAO,EAAEV,IALgB;AAMzBoB,EAAAA,UAAU,EAAErB;AANa,CAA3B","sourcesContent":["/**\n * Progress Bar Div\n */\n\n// React\nimport { number, string, bool } from 'prop-types'\n\n// UI\nimport { BACKGROUND } from '../../../'\n\n// Style\nimport styled, { css, keyframes } from 'styled-components'\n\nconst ProgressBarStripesAnimation = keyframes`\n  0% {\n    background-position: 1rem 0;\n  }\n  100% {\n    background-position: 0 0;\n  }\n`\n\nexport const ProgressBarDiv = styled.div`\n  ${props => BACKGROUND(props)}\n  animation: ${({ animated }) =>\n    animated\n      ? css`\n          ${ProgressBarStripesAnimation} 1s linear infinite\n        `\n      : 'none 0 ease 0 1 normal none running'};\n  background-image: ${({\n    striped,\n    theme: {\n      PROGRESSBAR: { bgImage }\n    }\n  }) => (striped ? bgImage : 'none')};\n  background-size: ${({\n    striped,\n    theme: {\n      PROGRESSBAR: { bgSize }\n    }\n  }) => (striped ? bgSize : 'auto')};\n  color: ${({ color, context, theme }) =>\n    color || (context === 'white' ? theme.COLOUR.primary : theme.COLOUR.white)};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n  text-align: center;\n  transition: ${({\n    theme: {\n      PROGRESSBAR: { transition }\n    }\n  }) => transition};\n  white-space: nowrap;\n  width: ${({ now }) => now + '%'};\n`\n\nProgressBarDiv.propTypes = {\n  animated: bool,\n  bgImage: string,\n  bgSize: string,\n  now: number,\n  striped: bool,\n  transition: string\n}\n"]},"metadata":{},"sourceType":"module"}