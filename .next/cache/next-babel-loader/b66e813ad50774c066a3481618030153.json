{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/grid/components/Container.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Container\n * Creates a container for the Grid based layout. This container can be fluid or\n * fixed based on the UI breakpoints.\n */\n// React\nimport { bool, node, number, objectOf, oneOfType, string } from 'prop-types'; // Style\n\nimport styled, { css } from 'styled-components';\nexport var Container = function Container(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      style = _ref.style;\n  return __jsx(StyledGrid, {\n    children: children,\n    className: className,\n    fluid: fluid,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\nvar StyledGrid = styled.div.withConfig({\n  displayName: \"Container__StyledGrid\",\n  componentId: \"i3tn3-0\"\n})([\"box-sizing:border-box;margin-left:auto;margin-right:auto;position:relative;width:\", \";\", \" \", \"\"], function (_ref2) {\n  var fluid = _ref2.fluid;\n  return fluid && '100%';\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return css([\"padding-left:\", \"px;padding-right:\", \"px;\"], theme.GRID.gutterWidth / 2, theme.GRID.gutterWidth / 2);\n}, function (_ref4) {\n  var fluid = _ref4.fluid;\n  return !fluid && css([\"@media (min-width:\", \"px){max-width:\", \"px;}@media (min-width:\", \"px){max-width:\", \"px;}@media (min-width:\", \"px){max-width:\", \"px;}@media (min-width:\", \"px){max-width:\", \"px;}\"], function (_ref5) {\n    var theme = _ref5.theme;\n    return theme.GRID.breakpoints.sm;\n  }, function (_ref6) {\n    var theme = _ref6.theme;\n    return theme.GRID.containerWidths.sm;\n  }, function (_ref7) {\n    var theme = _ref7.theme;\n    return theme.GRID.breakpoints.md;\n  }, function (_ref8) {\n    var theme = _ref8.theme;\n    return theme.GRID.containerWidths.md;\n  }, function (_ref9) {\n    var theme = _ref9.theme;\n    return theme.GRID.breakpoints.lg;\n  }, function (_ref10) {\n    var theme = _ref10.theme;\n    return theme.GRID.containerWidths.lg;\n  }, function (_ref11) {\n    var theme = _ref11.theme;\n    return theme.GRID.breakpoints.xl;\n  }, function (_ref12) {\n    var theme = _ref12.theme;\n    return theme.GRID.containerWidths.xl;\n  });\n});\nContainer.propTypes = {\n  children: node.isRequired,\n  className: string,\n  fluid: bool,\n  style: objectOf(oneOfType([number, string]))\n};\nContainer.defaultProps = {\n  fluid: false,\n  style: {}\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/grid/components/Container.js"],"names":["bool","node","number","objectOf","oneOfType","string","styled","css","Container","children","className","fluid","style","StyledGrid","div","theme","GRID","gutterWidth","breakpoints","sm","containerWidths","md","lg","xl","propTypes","isRequired","defaultProps"],"mappings":";;;;AAAA;;;;;AAMA;AACA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,MAAlD,QAAgE,YAAhE,C,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA2C;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAClE,SAAO,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEH,QAAtB;AAAgC,IAAA,SAAS,EAAEC,SAA3C;AAAsD,IAAA,KAAK,EAAEC,KAA7D;AAAoE,IAAA,KAAK,EAAEC,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFM;AAIP,IAAMC,UAAU,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,wGAKL;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,IAAI,MAAxB;AAAA,CALK,EAMZ;AAAA,MAAGI,KAAH,SAAGA,KAAH;AAAA,SAAeR,GAAf,gDACgBQ,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyB,CADzC,EAEiBF,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyB,CAF1C;AAAA,CANY,EAWZ;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SACA,CAACA,KAAD,IACAJ,GADA,uLAEuB;AAAA,QAAGQ,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWE,WAAX,CAAuBC,EAAtC;AAAA,GAFvB,EAGiB;AAAA,QAAGJ,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWI,eAAX,CAA2BD,EAA1C;AAAA,GAHjB,EAMuB;AAAA,QAAGJ,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWE,WAAX,CAAuBG,EAAtC;AAAA,GANvB,EAOiB;AAAA,QAAGN,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWI,eAAX,CAA2BC,EAA1C;AAAA,GAPjB,EAUuB;AAAA,QAAGN,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWE,WAAX,CAAuBI,EAAtC;AAAA,GAVvB,EAWiB;AAAA,QAAGP,KAAH,UAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWI,eAAX,CAA2BE,EAA1C;AAAA,GAXjB,EAcuB;AAAA,QAAGP,KAAH,UAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWE,WAAX,CAAuBK,EAAtC;AAAA,GAdvB,EAeiB;AAAA,QAAGR,KAAH,UAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,IAAN,CAAWI,eAAX,CAA2BG,EAA1C;AAAA,GAfjB,CADA;AAAA,CAXY,CAAhB;AAgCAf,SAAS,CAACgB,SAAV,GAAsB;AACpBf,EAAAA,QAAQ,EAAER,IAAI,CAACwB,UADK;AAEpBf,EAAAA,SAAS,EAAEL,MAFS;AAGpBM,EAAAA,KAAK,EAAEX,IAHa;AAIpBY,EAAAA,KAAK,EAAET,QAAQ,CAACC,SAAS,CAAC,CAACF,MAAD,EAASG,MAAT,CAAD,CAAV;AAJK,CAAtB;AAOAG,SAAS,CAACkB,YAAV,GAAyB;AACvBf,EAAAA,KAAK,EAAE,KADgB;AAEvBC,EAAAA,KAAK,EAAE;AAFgB,CAAzB","sourcesContent":["/**\n * Container\n * Creates a container for the Grid based layout. This container can be fluid or\n * fixed based on the UI breakpoints.\n */\n\n// React\nimport { bool, node, number, objectOf, oneOfType, string } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const Container = ({ children, className, fluid, style }) => {\n  return <StyledGrid children={children} className={className} fluid={fluid} style={style} />\n}\n\nconst StyledGrid = styled.div`\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  width: ${({ fluid }) => fluid && '100%'};\n  ${({ theme }) => css`\n    padding-left: ${theme.GRID.gutterWidth / 2}px;\n    padding-right: ${theme.GRID.gutterWidth / 2}px;\n  `}\n\n  ${({ fluid }) =>\n    !fluid &&\n    css`\n      @media (min-width: ${({ theme }) => theme.GRID.breakpoints.sm}px) {\n        max-width: ${({ theme }) => theme.GRID.containerWidths.sm}px;\n      }\n\n      @media (min-width: ${({ theme }) => theme.GRID.breakpoints.md}px) {\n        max-width: ${({ theme }) => theme.GRID.containerWidths.md}px;\n      }\n\n      @media (min-width: ${({ theme }) => theme.GRID.breakpoints.lg}px) {\n        max-width: ${({ theme }) => theme.GRID.containerWidths.lg}px;\n      }\n\n      @media (min-width: ${({ theme }) => theme.GRID.breakpoints.xl}px) {\n        max-width: ${({ theme }) => theme.GRID.containerWidths.xl}px;\n      }\n    `}\n`\n\nContainer.propTypes = {\n  children: node.isRequired,\n  className: string,\n  fluid: bool,\n  style: objectOf(oneOfType([number, string]))\n}\n\nContainer.defaultProps = {\n  fluid: false,\n  style: {}\n}\n"]},"metadata":{},"sourceType":"module"}