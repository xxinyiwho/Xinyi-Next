{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\n/**\n * Google Static Map Service Class\n * Description: Generates an url for the static map\n * @param {Array} Obj.paths  // [{ color: '0x003753', geodesic: true, weight: '5', points: ['WC2E 9DD', 'SW1A']}]\n */\n// UI\nimport { encodeCircle } from \"./circle\";\nexport var StaticMap =\n/*#__PURE__*/\nfunction () {\n  function StaticMap(_ref) {\n    var apiKey = _ref.apiKey,\n        center = _ref.center,\n        channel = _ref.channel,\n        client = _ref.client,\n        _ref$format = _ref.format,\n        format = _ref$format === void 0 ? 'png' : _ref$format,\n        language = _ref.language,\n        _ref$location = _ref.location,\n        location = _ref$location === void 0 ? '' : _ref$location,\n        _ref$maptype = _ref.maptype,\n        maptype = _ref$maptype === void 0 ? 'roadmap' : _ref$maptype,\n        _ref$markers = _ref.markers,\n        markers = _ref$markers === void 0 ? [] : _ref$markers,\n        _ref$paths = _ref.paths,\n        paths = _ref$paths === void 0 ? [] : _ref$paths,\n        region = _ref.region,\n        _ref$rootURL = _ref.rootURL,\n        rootURL = _ref$rootURL === void 0 ? 'https://maps.googleapis.com/maps/api/staticmap' : _ref$rootURL,\n        _ref$scale = _ref.scale,\n        scale = _ref$scale === void 0 ? 1 : _ref$scale,\n        signature = _ref.signature,\n        _ref$size = _ref.size,\n        size = _ref$size === void 0 ? '400x200' : _ref$size,\n        style = _ref.style,\n        visible = _ref.visible,\n        _ref$zoom = _ref.zoom,\n        zoom = _ref$zoom === void 0 ? 15 : _ref$zoom;\n\n    _classCallCheck(this, StaticMap);\n\n    this.apiKey = apiKey;\n    this.channel = channel;\n    this.center = center;\n    this.client = client;\n    this.format = format;\n    this.language = language;\n    this.location = location;\n    this.maptype = maptype;\n    this.markers = markers;\n    this.paths = paths;\n    this.region = region;\n    this.rootURL = rootURL;\n    this.scale = scale;\n    this.signature = signature;\n    this.size = size;\n    this.style = style;\n    this.visible = visible;\n    this.zoom = zoom;\n  }\n\n  _createClass(StaticMap, [{\n    key: \"urlBuilder\",\n    value: function urlBuilder(property, value, separator) {\n      if (value) {\n        return \"\".concat(property).concat(separator).concat(value);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderBaseMap\",\n    value: function renderBaseMap() {\n      var urlParts = [];\n      urlParts.push(this.urlBuilder('key', this.apiKey, '='));\n      urlParts.push(this.urlBuilder('center', this.center, '='));\n      urlParts.push(this.urlBuilder('channel', this.channel, '='));\n      urlParts.push(this.urlBuilder('client', this.client, '='));\n      urlParts.push(this.urlBuilder('format', this.format, '='));\n      urlParts.push(this.urlBuilder('language', this.language, '='));\n      urlParts.push(this.urlBuilder('maptype', this.maptype, '='));\n      urlParts.push(this.urlBuilder('region', this.region, '='));\n      urlParts.push(this.urlBuilder('scale', this.scale, '='));\n      urlParts.push(this.urlBuilder('signature', this.signature, '='));\n      urlParts.push(this.urlBuilder('size', this.size, '='));\n      urlParts.push(this.urlBuilder('style', this.style, '='));\n      urlParts.push(this.urlBuilder('visible', this.visible, '='));\n      urlParts.push(this.urlBuilder('zoom', this.zoom, '='));\n      var parts = urlParts.filter(function (x) {\n        return x;\n      }).join('&');\n      return \"\".concat(this.rootURL, \"?\").concat(parts);\n    }\n  }, {\n    key: \"locationBuilder\",\n    value: function locationBuilder(location) {\n      var _this = this;\n\n      var urlParts = [];\n\n      if (_Array$isArray(location)) {\n        var arrParts = location.map(function (val) {\n          return _this.locationBuilder(val);\n        });\n        urlParts.push.apply(urlParts, _toConsumableArray(arrParts));\n      }\n\n      if (typeof location === 'string' || typeof location === 'number') {\n        urlParts.push(encodeURI(location));\n      }\n\n      if (typeof location === 'object' && location.lat && location.lng) {\n        urlParts.push(\"\".concat(location.lat, \",\").concat(location.lng));\n      }\n\n      return urlParts.join('%7C');\n    } // Create the URL segment for the Path\n\n  }, {\n    key: \"renderPath\",\n    value: function renderPath(_ref2) {\n      var circle = _ref2.circle,\n          color = _ref2.color,\n          fillcolor = _ref2.fillcolor,\n          geodesic = _ref2.geodesic,\n          points = _ref2.points,\n          weight = _ref2.weight;\n      var urlParts = [];\n\n      if (circle) {\n        var enc = encodeCircle(circle.latitude, circle.longitude, circle.radius);\n        urlParts.push(this.urlBuilder('', this.locationBuilder(\"\".concat(enc)), ''));\n      }\n\n      urlParts.push(this.urlBuilder('color', color, ':'));\n      urlParts.push(this.urlBuilder('weight', weight, ':'));\n      urlParts.push(this.urlBuilder('fillcolor', fillcolor, ':'));\n      urlParts.push(this.urlBuilder('geodesic', geodesic, ':'));\n      urlParts.push(this.urlBuilder('', this.locationBuilder(points), ''));\n      var url = urlParts.filter(function (x) {\n        return x;\n      }).join('%7C');\n      return \"path=\".concat(url);\n    }\n  }, {\n    key: \"renderParts\",\n    value: function renderParts() {\n      var _this2 = this;\n\n      return this.paths.map(function (path) {\n        return _this2.renderPath(path);\n      });\n    }\n  }, {\n    key: \"renderMarkers\",\n    value: function renderMarkers() {\n      var markers = this.markers,\n          locationBuilder = this.locationBuilder,\n          location = this.location;\n      var urlParts = markers.length ? markers.map(function (marker) {\n        var markerUrl = 'markers=';\n\n        switch (typeof marker) {\n          case 'string':\n            {\n              markerUrl += locationBuilder(marker);\n              break;\n            }\n\n          case 'object':\n            {\n              var colour = marker.colour,\n                  label = marker.label,\n                  _location = marker.location;\n              var markerColour = colour && \"color:\".concat(colour, \"|\");\n              var markerLabel = label && \"label:\".concat(label, \"|\");\n\n              var markerLocation = _location && \"\".concat(locationBuilder(_location), \"|\");\n\n              markerUrl += markerColour + markerLabel + markerLocation;\n              break;\n            }\n        }\n\n        return markerUrl;\n      }) : [\"markers=\".concat(locationBuilder(location))];\n      return urlParts.join('&');\n    }\n  }, {\n    key: \"generateUrl\",\n    value: function generateUrl() {\n      var childrenUrlParts = this.renderParts() || [];\n      var mainUrlParts = this.renderBaseMap();\n      var markerParts = this.renderMarkers();\n      var url = \"\".concat(mainUrlParts, \"&\").concat(childrenUrlParts, \"&\").concat(markerParts);\n      return url;\n    }\n  }]);\n\n  return StaticMap;\n}();","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/services/google/static/map.js"],"names":["encodeCircle","StaticMap","apiKey","center","channel","client","format","language","location","maptype","markers","paths","region","rootURL","scale","signature","size","style","visible","zoom","property","value","separator","urlParts","push","urlBuilder","parts","filter","x","join","arrParts","map","val","locationBuilder","encodeURI","lat","lng","circle","color","fillcolor","geodesic","points","weight","enc","latitude","longitude","radius","url","path","renderPath","length","marker","markerUrl","colour","label","markerColour","markerLabel","markerLocation","childrenUrlParts","renderParts","mainUrlParts","renderBaseMap","markerParts","renderMarkers"],"mappings":"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","sourcesContent":["/**\n * Google Static Map Service Class\n * Description: Generates an url for the static map\n * @param {Array} Obj.paths  // [{ color: '0x003753', geodesic: true, weight: '5', points: ['WC2E 9DD', 'SW1A']}]\n */\n\n// UI\nimport { encodeCircle } from './circle'\n\nexport class StaticMap {\n  constructor ({\n    apiKey,\n    center,\n    channel,\n    client,\n    format = 'png',\n    language,\n    location = '',\n    maptype = 'roadmap',\n    markers = [],\n    paths = [],\n    region,\n    rootURL = 'https://maps.googleapis.com/maps/api/staticmap',\n    scale = 1,\n    signature,\n    size = '400x200',\n    style,\n    visible,\n    zoom = 15\n  }) {\n    this.apiKey = apiKey\n    this.channel = channel\n    this.center = center\n    this.client = client\n    this.format = format\n    this.language = language\n    this.location = location\n    this.maptype = maptype\n    this.markers = markers\n    this.paths = paths\n    this.region = region\n    this.rootURL = rootURL\n    this.scale = scale\n    this.signature = signature\n    this.size = size\n    this.style = style\n    this.visible = visible\n    this.zoom = zoom\n  }\n\n  urlBuilder (property, value, separator) {\n    if (value) {\n      return `${property}${separator}${value}`\n    }\n\n    return null\n  }\n\n  renderBaseMap () {\n    const urlParts = []\n    urlParts.push(this.urlBuilder('key', this.apiKey, '='))\n    urlParts.push(this.urlBuilder('center', this.center, '='))\n    urlParts.push(this.urlBuilder('channel', this.channel, '='))\n    urlParts.push(this.urlBuilder('client', this.client, '='))\n    urlParts.push(this.urlBuilder('format', this.format, '='))\n    urlParts.push(this.urlBuilder('language', this.language, '='))\n    urlParts.push(this.urlBuilder('maptype', this.maptype, '='))\n    urlParts.push(this.urlBuilder('region', this.region, '='))\n    urlParts.push(this.urlBuilder('scale', this.scale, '='))\n    urlParts.push(this.urlBuilder('signature', this.signature, '='))\n    urlParts.push(this.urlBuilder('size', this.size, '='))\n    urlParts.push(this.urlBuilder('style', this.style, '='))\n    urlParts.push(this.urlBuilder('visible', this.visible, '='))\n    urlParts.push(this.urlBuilder('zoom', this.zoom, '='))\n    const parts = urlParts.filter(x => x).join('&')\n    return `${this.rootURL}?${parts}`\n  }\n\n  locationBuilder (location) {\n    const urlParts = []\n\n    if (Array.isArray(location)) {\n      const arrParts = location.map(val => this.locationBuilder(val))\n      urlParts.push(...arrParts)\n    }\n\n    if (typeof location === 'string' || typeof location === 'number') {\n      urlParts.push(encodeURI(location))\n    }\n\n    if (typeof location === 'object' && location.lat && location.lng) {\n      urlParts.push(`${location.lat},${location.lng}`)\n    }\n\n    return urlParts.join('%7C')\n  }\n\n  // Create the URL segment for the Path\n  renderPath ({ circle, color, fillcolor, geodesic, points, weight }) {\n    const urlParts = []\n\n    if (circle) {\n      const enc = encodeCircle(circle.latitude, circle.longitude, circle.radius)\n      urlParts.push(this.urlBuilder('', this.locationBuilder(`${enc}`), ''))\n    }\n\n    urlParts.push(this.urlBuilder('color', color, ':'))\n    urlParts.push(this.urlBuilder('weight', weight, ':'))\n    urlParts.push(this.urlBuilder('fillcolor', fillcolor, ':'))\n    urlParts.push(this.urlBuilder('geodesic', geodesic, ':'))\n    urlParts.push(this.urlBuilder('', this.locationBuilder(points), ''))\n\n    const url = urlParts.filter(x => x).join('%7C')\n\n    return `path=${url}`\n  }\n\n  renderParts () {\n    return this.paths.map(path => {\n      return this.renderPath(path)\n    })\n  }\n\n  renderMarkers () {\n    const { markers, locationBuilder, location } = this\n    const urlParts = markers.length\n      ? markers.map(marker => {\n          let markerUrl = 'markers='\n          switch (typeof marker) {\n            case 'string': {\n              markerUrl += locationBuilder(marker)\n              break\n            }\n            case 'object': {\n              const { colour, label, location } = marker\n              const markerColour = colour && `color:${colour}|`\n              const markerLabel = label && `label:${label}|`\n              const markerLocation = location && `${locationBuilder(location)}|`\n              markerUrl += markerColour + markerLabel + markerLocation\n              break\n            }\n          }\n\n          return markerUrl\n        })\n      : [`markers=${locationBuilder(location)}`]\n\n    return urlParts.join('&')\n  }\n\n  generateUrl () {\n    const childrenUrlParts = this.renderParts() || []\n    const mainUrlParts = this.renderBaseMap()\n    const markerParts = this.renderMarkers()\n\n    const url = `${mainUrlParts}&${childrenUrlParts}&${markerParts}`\n    return url\n  }\n}\n"]},"metadata":{},"sourceType":"module"}