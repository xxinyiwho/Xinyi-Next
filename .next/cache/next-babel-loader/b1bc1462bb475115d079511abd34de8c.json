{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/social/hubspot/form.js\";\n\nvar __jsx = React.createElement;\n\n/**\n * Hubsport - Form\n */\nimport React from 'react'; // {/* <script charset=\"utf-8\" type=\"text/javascript\" src=\"//js.hsforms.net/forms/shell.js\"></script>\n// <script>\n// hbspt.forms.create({\n// portalId: \"6190637\",\n// formId: \"3a36aae9-8343-45f6-9268-15acd39190fe\"\n// });\n// </script> */}\n// const globalId = 0\n\nexport var HubspotForm = function HubspotForm() {\n  // constructor(props) {\n  // super(props)\n  //   this.state = {\n  // loaded: false\n  //   }\n  // this.id = globalId++\n  // this.createForm = this.createForm.bind(this)\n  // this.findFormElement = this.findFormElement.bind(this)\n  // }\n  // createForm() {\n  // if (window.hbspt) {\n  // // protect against component unmounting before window.hbspt is available\n  // if (this.el === null) {\n  // return\n  // }\n  // let props = {\n  // ...this.props\n  // }\n  // delete props.loading\n  // delete props.onSubmit\n  // delete props.onReady\n  // let options = {\n  // ...props,\n  // target: `#${this.el.getAttribute(`id`)}`,\n  // onFormSubmit : ($form) => {\n  // // ref: https://developers.hubspot.com/docs/methods/forms/advanced_form_options\n  // var formData = $form.serializeArray();\n  // this.props.onSubmit(formData);\n  // }\n  // }\n  // window.hbspt.forms.create(options)\n  // return true\n  // }\n  // else {\n  // setTimeout(this.createForm, 1)\n  // }\n  // }\n  // loadScript() {\n  // let script = document.createElement(`script`)\n  // script.defer = true\n  // script.onload = () => {\n  // this.createForm()\n  // this.findFormElement()\n  // }\n  // script.src = `//js.hsforms.net/forms/shell.js`\n  // document.head.appendChild(script)\n  // }\n  // findFormElement(){\n  // // protect against component unmounting before form is added\n  // if (this.el === null) {\n  // return\n  // }\n  // let form = this.el.querySelector(`iframe`)\n  // if (form){\n  // this.setState({ loaded: true })\n  // if (this.props.onReady) {\n  // this.props.onReady(form);\n  // }\n  // }\n  // else{\n  // setTimeout(this.findFormElement, 1)\n  // }\n  // }\n  // componentDidMount() {\n  // if (!window.hbspt && !this.props.noScript) {\n  // this.loadScript()\n  // } else {\n  // this.createForm()\n  // this.findFormElement()\n  // }\n  // }\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    // ref={el => this.el = el}\n    id: \"reactHubspotForm\".concat(_this.id),\n    style: {\n      display: _this.state.loaded ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), !_this.state.loaded && _this.props.loading);\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/social/hubspot/form.js"],"names":["React","HubspotForm","id","display","state","loaded","props","loading"],"mappings":";;;;;AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE;AACA,IAAA,EAAE,4BAAqB,KAAI,CAACC,EAA1B,CAFJ;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,KAAI,CAACC,KAAL,CAAWC,MAAX,GAAoB,OAApB,GAA8B;AAAzC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOG,CAAC,KAAI,CAACD,KAAL,CAAWC,MAAZ,IAAsB,KAAI,CAACC,KAAL,CAAWC,OAPpC,CADF;AAWD,CAnGM","sourcesContent":["/**\n * Hubsport - Form\n */\nimport React from 'react'\n\n// {/* <script charset=\"utf-8\" type=\"text/javascript\" src=\"//js.hsforms.net/forms/shell.js\"></script>\n// <script>\n// hbspt.forms.create({\n// portalId: \"6190637\",\n// formId: \"3a36aae9-8343-45f6-9268-15acd39190fe\"\n// });\n// </script> */}\n\n// const globalId = 0\n\nexport const HubspotForm = () => {\n  // constructor(props) {\n  // super(props)\n\n  //   this.state = {\n  // loaded: false\n  //   }\n\n  // this.id = globalId++\n\n  // this.createForm = this.createForm.bind(this)\n  // this.findFormElement = this.findFormElement.bind(this)\n  // }\n\n  // createForm() {\n  // if (window.hbspt) {\n  // // protect against component unmounting before window.hbspt is available\n  // if (this.el === null) {\n  // return\n  // }\n\n  // let props = {\n  // ...this.props\n  // }\n\n  // delete props.loading\n  // delete props.onSubmit\n  // delete props.onReady\n\n  // let options = {\n  // ...props,\n  // target: `#${this.el.getAttribute(`id`)}`,\n  // onFormSubmit : ($form) => {\n  // // ref: https://developers.hubspot.com/docs/methods/forms/advanced_form_options\n  // var formData = $form.serializeArray();\n  // this.props.onSubmit(formData);\n  // }\n  // }\n  // window.hbspt.forms.create(options)\n  // return true\n  // }\n  // else {\n  // setTimeout(this.createForm, 1)\n  // }\n  // }\n\n  // loadScript() {\n  // let script = document.createElement(`script`)\n\n  // script.defer = true\n\n  // script.onload = () => {\n  // this.createForm()\n  // this.findFormElement()\n  // }\n\n  // script.src = `//js.hsforms.net/forms/shell.js`\n  // document.head.appendChild(script)\n  // }\n\n  // findFormElement(){\n  // // protect against component unmounting before form is added\n  // if (this.el === null) {\n  // return\n  // }\n\n  // let form = this.el.querySelector(`iframe`)\n\n  // if (form){\n  // this.setState({ loaded: true })\n  // if (this.props.onReady) {\n  // this.props.onReady(form);\n  // }\n  // }\n  // else{\n  // setTimeout(this.findFormElement, 1)\n  // }\n  // }\n\n  // componentDidMount() {\n  // if (!window.hbspt && !this.props.noScript) {\n  // this.loadScript()\n  // } else {\n  // this.createForm()\n  // this.findFormElement()\n  // }\n  // }\n\n  return (\n    <div>\n      <div\n        // ref={el => this.el = el}\n        id={`reactHubspotForm${this.id}`}\n        style={{ display: this.state.loaded ? 'block' : 'none' }}\n      />\n\n      {!this.state.loaded && this.props.loading}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}