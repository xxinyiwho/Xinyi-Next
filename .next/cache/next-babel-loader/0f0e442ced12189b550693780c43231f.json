{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/dog/card/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Dog Card\n * Card used to display a dog on Tailwise\n *\n * Usage\n * <DogCard {...dog} />\n */\n// React\nimport { bool, number, string } from 'prop-types'; // UI\n\nimport { Card, CardBody, DogName, formatPrice, slugify } from \"../../../\";\nexport var DogCard = function DogCard(_ref) {\n  var breed = _ref.breed,\n      breedName = _ref.breedName,\n      breeder = _ref.breeder,\n      dogId = _ref.dogId,\n      gender = _ref.gender,\n      image = _ref.image,\n      name = _ref.name,\n      price = _ref.price,\n      sell = _ref.sell;\n  var breederSlug = slugify(breeder);\n  var nameSlug = slugify(name);\n  return __jsx(Card, {\n    alt: breed,\n    bordered: true,\n    context: \"light\",\n    footer: breedName,\n    image: image,\n    to: {\n      as: \"/breeders/\".concat(breederSlug, \"/dogs/\").concat(nameSlug, \"/\").concat(dogId),\n      href: {\n        pathname: '/breeders/dogs/profile',\n        query: {\n          breederSlug: breederSlug,\n          dogId: dogId,\n          dogSlug: nameSlug\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(DogName, {\n    row: {\n      gender: gender,\n      name: name\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), sell && __jsx(\"div\", {\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, formatPrice(price))));\n};\nDogCard.propTypes = {\n  breed: string.isRequired,\n  breedName: string,\n  breeder: string.isRequired,\n  dogId: string.isRequired,\n  gender: string.isRequired,\n  image: string.isRequired,\n  name: string.isRequired,\n  price: number.isRequired,\n  sell: bool\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/dog/card/index.js"],"names":["bool","number","string","Card","CardBody","DogName","formatPrice","slugify","DogCard","breed","breedName","breeder","dogId","gender","image","name","price","sell","breederSlug","nameSlug","as","href","pathname","query","dogSlug","propTypes","isRequired"],"mappings":";;;;AAAA;;;;;;;AAQA;AACA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,YAArC,C,CAEA;;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA+CC,OAA/C;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA4E;AAAA,MAAzEC,KAAyE,QAAzEA,KAAyE;AAAA,MAAlEC,SAAkE,QAAlEA,SAAkE;AAAA,MAAvDC,OAAuD,QAAvDA,OAAuD;AAAA,MAA9CC,KAA8C,QAA9CA,KAA8C;AAAA,MAAvCC,MAAuC,QAAvCA,MAAuC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACjG,MAAMC,WAAW,GAAGX,OAAO,CAACI,OAAD,CAA3B;AACA,MAAMQ,QAAQ,GAAGZ,OAAO,CAACQ,IAAD,CAAxB;AAEA,SACE,MAAC,IAAD;AACE,IAAA,GAAG,EAAEN,KADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,MAAM,EAAEC,SAJV;AAKE,IAAA,KAAK,EAAEI,KALT;AAME,IAAA,EAAE,EAAE;AACFM,MAAAA,EAAE,sBAAeF,WAAf,mBAAmCC,QAAnC,cAA+CP,KAA/C,CADA;AAEFS,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,wBADN;AAEJC,QAAAA,KAAK,EAAE;AACLL,UAAAA,WAAW,EAAEA,WADR;AAELN,UAAAA,KAAK,EAAEA,KAFF;AAGLY,UAAAA,OAAO,EAAEL;AAHJ;AAFH;AAFJ,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,GAAG,EAAE;AAAEN,MAAAA,MAAM,EAAEA,MAAV;AAAkBE,MAAAA,IAAI,EAAEA;AAAxB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGE,IAAI,IAAI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BX,WAAW,CAACU,KAAD,CAAzC,CAHX,CAlBF,CADF;AA0BD,CA9BM;AAgCPR,OAAO,CAACiB,SAAR,GAAoB;AAClBhB,EAAAA,KAAK,EAAEP,MAAM,CAACwB,UADI;AAElBhB,EAAAA,SAAS,EAAER,MAFO;AAGlBS,EAAAA,OAAO,EAAET,MAAM,CAACwB,UAHE;AAIlBd,EAAAA,KAAK,EAAEV,MAAM,CAACwB,UAJI;AAKlBb,EAAAA,MAAM,EAAEX,MAAM,CAACwB,UALG;AAMlBZ,EAAAA,KAAK,EAAEZ,MAAM,CAACwB,UANI;AAOlBX,EAAAA,IAAI,EAAEb,MAAM,CAACwB,UAPK;AAQlBV,EAAAA,KAAK,EAAEf,MAAM,CAACyB,UARI;AASlBT,EAAAA,IAAI,EAAEjB;AATY,CAApB","sourcesContent":["/**\n * Dog Card\n * Card used to display a dog on Tailwise\n *\n * Usage\n * <DogCard {...dog} />\n */\n\n// React\nimport { bool, number, string } from 'prop-types'\n\n// UI\nimport { Card, CardBody, DogName, formatPrice, slugify } from '../../../'\n\nexport const DogCard = ({ breed, breedName, breeder, dogId, gender, image, name, price, sell }) => {\n  const breederSlug = slugify(breeder)\n  const nameSlug = slugify(name)\n\n  return (\n    <Card\n      alt={breed}\n      bordered\n      context='light'\n      footer={breedName}\n      image={image}\n      to={{\n        as: `/breeders/${breederSlug}/dogs/${nameSlug}/${dogId}`,\n        href: {\n          pathname: '/breeders/dogs/profile',\n          query: {\n            breederSlug: breederSlug,\n            dogId: dogId,\n            dogSlug: nameSlug\n          }\n        }\n      }}\n    >\n      <CardBody>\n        <DogName row={{ gender: gender, name: name }} />\n\n        {sell && <div className='float-right'>{formatPrice(price)}</div>}\n      </CardBody>\n    </Card>\n  )\n}\n\nDogCard.propTypes = {\n  breed: string.isRequired,\n  breedName: string,\n  breeder: string.isRequired,\n  dogId: string.isRequired,\n  gender: string.isRequired,\n  image: string.isRequired,\n  name: string.isRequired,\n  price: number.isRequired,\n  sell: bool\n}\n"]},"metadata":{},"sourceType":"module"}