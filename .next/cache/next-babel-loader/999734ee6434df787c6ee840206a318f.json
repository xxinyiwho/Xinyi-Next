{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/card/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Blog - Card\n * Provides a card that details a blog post\n */\n// React\nimport { any, object, string } from 'prop-types'; // UI\n\nimport { BlogCategory, BlogTags, Card, CardImage, Divider, Link, slugify } from \"../../../\";\nimport { Button } from \"../../atoms/button/components/button\";\nimport { CardBody } from \"../../molecules/card/components/body\";\nimport { Heading } from \"../../atoms/heading\"; // Style\n\nimport styled, { css } from 'styled-components';\nexport const BlogCard = ({\n  article,\n  config,\n  type\n}) => {\n  const {\n    author,\n    category,\n    excerpt,\n    heading,\n    slug\n  } = article;\n  const articleSlug = slugify(article.slug);\n  const categorySlug = slugify(category);\n  const articleLink = {\n    as: `${config.path}/${categorySlug}/${articleSlug}`,\n    href: `${config.path}/[categoryId]/[articleId]`\n  };\n  return __jsx(\"article\", {\n    role: \"article\",\n    itemProp: \"blogPost\",\n    itemScope: true,\n    itemType: \"http://schema.org/BlogPosting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Card, {\n    shadow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Link, {\n    to: articleLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(CardImage, {\n    alt: heading,\n    src: `/blog/${slug}/hero.jpg`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), __jsx(StyledCardBody, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, type === 'normal' && __jsx(BlogCategory, {\n    config: config,\n    to: category,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(StyledContent, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Link, {\n    to: articleLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(StyledHeading, {\n    content: heading,\n    tag: \"h1\",\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), type === 'normal' && __jsx(\"p\", {\n    itemProp: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, excerpt)), type === 'normal' && __jsx(React.Fragment, null, article.tags && __jsx(TagsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(BlogTags, {\n    tags: article.tags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), __jsx(Divider, {\n    size: \"md\",\n    style: {\n      marginTop: '.5rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(BlogCategory, {\n    author: true,\n    to: author,\n    config: config,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(StyledReadTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, article.readtime, \"min read time.\")), __jsx(Link, {\n    to: articleLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(StyledButton, {\n    content: \"Read more\",\n    context: type === 'normal' ? 'primary' : 'white',\n    size: type === 'normal' ? 'sm' : 'lg',\n    position: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))));\n};\nconst TagsContainer = styled.div.withConfig({\n  displayName: \"card__TagsContainer\",\n  componentId: \"c0s97d-0\"\n})([\"height:1.75rem;margin-top:0.25rem;overflow:hidden;\"]);\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"card__StyledButton\",\n  componentId: \"c0s97d-1\"\n})([\"bottom:1.25rem;position:absolute;right:1rem;z-index:2;\", \"\"], ({\n  position\n}) => position === 'hero' && css([\"bottom:1.25rem;\"]));\nconst StyledCardBody = styled(CardBody).withConfig({\n  displayName: \"card__StyledCardBody\",\n  componentId: \"c0s97d-2\"\n})([\"min-height:303px;position:relative;\", \"\"], ({\n  theme: {\n    COLOUR\n  },\n  type\n}) => type === 'hero' && css([\"background-color:\", \";min-height:80px;&:after{background:\", \";content:'';display:block;height:120px;left:0;position:absolute;right:0;top:0;transform:skewy(6deg);transform-origin:100% 0;z-index:1;}\"], COLOUR.primary, COLOUR.primary));\nconst StyledContent = styled.div.withConfig({\n  displayName: \"card__StyledContent\",\n  componentId: \"c0s97d-3\"\n})([\"height:128px;margin-bottom:1rem;overflow:hidden;\", \"\"], ({\n  type\n}) => type === 'hero' && css([\"height:122px;margin-bottom:0;\"]));\nconst StyledHeading = styled(Heading).withConfig({\n  displayName: \"card__StyledHeading\",\n  componentId: \"c0s97d-4\"\n})([\"color:#000;font-size:1.25rem;line-height:1.25rem;margin-bottom:0;max-width:500px;overflow:hidden;position:relative;z-index:2;&:hover{color:#00ccbc;}\", \"\"], ({\n  type\n}) => type === 'hero' && css([\"color:#fff;font-size:2rem;line-height:2rem;max-height:115px;&:hover{color:#f2f1f1;}\"]));\nconst StyledReadTime = styled.p.withConfig({\n  displayName: \"card__StyledReadTime\",\n  componentId: \"c0s97d-5\"\n})([\"font-size:0.75rem;margin:0;\"]);\nBlogCard.propTypes = {\n  article: any.isRequired,\n  config: object.isRequired,\n  type: string\n};\nBlogCard.defaultProps = {\n  type: 'normal'\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/card/index.js"],"names":["any","object","string","BlogCategory","BlogTags","Card","CardImage","Divider","Link","slugify","Button","CardBody","Heading","styled","css","BlogCard","article","config","type","author","category","excerpt","heading","slug","articleSlug","categorySlug","articleLink","as","path","href","tags","marginTop","readtime","TagsContainer","div","StyledButton","position","StyledCardBody","theme","COLOUR","primary","StyledContent","StyledHeading","StyledReadTime","p","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Blog - Card\n * Provides a card that details a blog post\n */\n\n// React\nimport { any, object, string } from 'prop-types'\n\n// UI\nimport { BlogCategory, BlogTags, Card, CardImage, Divider, Link, slugify } from '../../../'\n\nimport { Button } from '../../atoms/button/components/button'\nimport { CardBody } from '../../molecules/card/components/body'\nimport { Heading } from '../../atoms/heading'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const BlogCard = ({ article, config, type }) => {\n  const { author, category, excerpt, heading, slug } = article\n\n  const articleSlug = slugify(article.slug)\n  const categorySlug = slugify(category)\n\n  const articleLink = {\n    as: `${config.path}/${categorySlug}/${articleSlug}`,\n    href: `${config.path}/[categoryId]/[articleId]`\n  }\n\n  return (\n    <article role='article' itemProp='blogPost' itemScope itemType='http://schema.org/BlogPosting'>\n      <Card shadow>\n        <Link to={articleLink}>\n          <a>\n            <CardImage alt={heading} src={`/blog/${slug}/hero.jpg`} />\n          </a>\n        </Link>\n\n        <StyledCardBody type={type}>\n          {type === 'normal' && <BlogCategory config={config} to={category} type={type} />}\n\n          <StyledContent type={type}>\n            <Link to={articleLink}>\n              <a>\n                <StyledHeading content={heading} tag='h1' type={type} />\n              </a>\n            </Link>\n\n            {type === 'normal' && <p itemProp='description'>{excerpt}</p>}\n          </StyledContent>\n\n          {type === 'normal' && (\n            <>\n              {article.tags && (\n                <TagsContainer>\n                  <BlogTags tags={article.tags} />\n                </TagsContainer>\n              )}\n\n              <Divider size='md' style={{ marginTop: '.5rem' }} />\n\n              <BlogCategory author to={author} config={config} type={type} />\n\n              <StyledReadTime>{article.readtime}min read time.</StyledReadTime>\n            </>\n          )}\n\n          <Link to={articleLink}>\n            <StyledButton\n              content='Read more'\n              context={type === 'normal' ? 'primary' : 'white'}\n              size={type === 'normal' ? 'sm' : 'lg'}\n              position={type}\n            />\n          </Link>\n        </StyledCardBody>\n      </Card>\n    </article>\n  )\n}\n\nconst TagsContainer = styled.div`\n  height: 1.75rem;\n  margin-top: 0.25rem;\n  overflow: hidden;\n`\n\nconst StyledButton = styled(Button)`\n  bottom: 1.25rem;\n  position: absolute;\n  right: 1rem;\n  z-index: 2;\n  ${({ position }) =>\n    position === 'hero' &&\n    css`\n      bottom: 1.25rem;\n    `}\n`\n\nconst StyledCardBody = styled(CardBody)`\n  min-height: 303px;\n  position: relative;\n  ${({ theme: { COLOUR }, type }) =>\n    type === 'hero' &&\n    css`\n      background-color: ${COLOUR.primary};\n      min-height: 80px;\n      &:after {\n        background: ${COLOUR.primary};\n        content: '';\n        display: block;\n        height: 120px;\n        left: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        transform: skewy(6deg);\n        transform-origin: 100% 0;\n        z-index: 1;\n      }\n    `}\n`\n\nconst StyledContent = styled.div`\n  height: 128px;\n  margin-bottom: 1rem;\n  overflow: hidden;\n  ${({ type }) =>\n    type === 'hero' &&\n    css`\n      height: 122px;\n      margin-bottom: 0;\n    `}\n`\n\nconst StyledHeading = styled(Heading)`\n  color: #000;\n  font-size: 1.25rem;\n  line-height: 1.25rem;\n  margin-bottom: 0;\n  max-width: 500px;\n  overflow: hidden;\n  position: relative;\n  z-index: 2;\n\n  &:hover {\n    color: #00ccbc;\n  }\n\n  ${({ type }) =>\n    type === 'hero' &&\n    css`\n      color: #fff;\n      font-size: 2rem;\n      line-height: 2rem;\n      max-height: 115px;\n\n      &:hover {\n        color: #f2f1f1;\n      }\n    `}\n`\n\nconst StyledReadTime = styled.p`\n  font-size: 0.75rem;\n  margin: 0;\n`\n\nBlogCard.propTypes = {\n  article: any.isRequired,\n  config: object.isRequired,\n  type: string\n}\n\nBlogCard.defaultProps = {\n  type: 'normal'\n}\n"]},"metadata":{},"sourceType":"module"}