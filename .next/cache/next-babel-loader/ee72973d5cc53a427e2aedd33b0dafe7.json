{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/sidebar/components/sidebar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Sidebar\n */\n// React\nimport { array, string } from 'prop-types'; // UI\n\nimport { Image, Icon, Link, List } from \"../../../\";\nimport { Divider } from \"../../../atoms/divider\";\nimport { ListItem } from \"../../../atoms/list/components/listItem\"; // Style\n\nimport styled, { css } from 'styled-components';\nexport const Sidebar = ({\n  brand,\n  data\n}) => {\n  const link = (icon, name, to) => {\n    const iconArray = _Array$isArray(icon);\n\n    return __jsx(Link, {\n      to: to,\n      passHref: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(StyledLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, icon && __jsx(Icon, {\n      icon: icon ? iconArray ? icon[1] : icon : null,\n      prefix: icon && iconArray && icon[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), name));\n  };\n\n  return __jsx(StyledAside, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(StyledBrand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Image, {\n    alt: \"Logo\",\n    src: brand,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), __jsx(List, {\n    group: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, data.map(({\n    Component,\n    divider,\n    icon,\n    name,\n    to\n  }, index) => {\n    return __jsx(StyledLi, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, divider ? __jsx(StyledDivider, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : Component ? __jsx(Component, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : to ? link(icon, name, to) : name);\n  })));\n};\nconst StyledAside = styled.aside.withConfig({\n  displayName: \"sidebar__StyledAside\",\n  componentId: \"ix2k1o-0\"\n})([\"background-color:\", \";border-right:1px solid \", \";box-shadow:0 0 4rem -1rem rgba(0,0,0,0.75);height:100vh;left:0;overflow:hidden;padding:1rem 0;position:fixed;top:0;width:16.66667%;\"], ({\n  theme\n}) => theme.SIDEBAR.background, ({\n  theme\n}) => theme.SIDEBAR.highlight);\nconst StyledBrand = styled.div.withConfig({\n  displayName: \"sidebar__StyledBrand\",\n  componentId: \"ix2k1o-1\"\n})([\"display:block;padding:0 3rem;line-height:2;\"]);\nconst StyledDivider = styled(Divider).withConfig({\n  displayName: \"sidebar__StyledDivider\",\n  componentId: \"ix2k1o-2\"\n})([\"border-top-width:1px;opacity:0.2;\"]);\nconst StyledLi = styled(ListItem).withConfig({\n  displayName: \"sidebar__StyledLi\",\n  componentId: \"ix2k1o-3\"\n})([\"cursor:pointer;padding:0;svg{margin-right:0.5rem;}&:hover{\", \"}\"], ({\n  theme\n}) => css([\"background-color:\", \";border-right:2px solid \", \";a{color:\", \";}\"], theme.SIDEBAR.linkHover, theme.SIDEBAR.highlight, theme.SIDEBAR.highlight));\nconst StyledLink = styled.a.withConfig({\n  displayName: \"sidebar__StyledLink\",\n  componentId: \"ix2k1o-4\"\n})([\"color:\", \";display:block;padding:1rem 1.5rem;\"], ({\n  theme\n}) => theme.SIDEBAR.linkColour);\nSidebar.propTypes = {\n  brand: string,\n  data: array.isRequired\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/sidebar/components/sidebar.js"],"names":["array","string","Image","Icon","Link","List","Divider","ListItem","styled","css","Sidebar","brand","data","link","icon","name","to","iconArray","map","Component","divider","index","StyledAside","aside","theme","SIDEBAR","background","highlight","StyledBrand","div","StyledDivider","StyledLi","linkHover","StyledLink","a","linkColour","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * Sidebar\n */\n\n// React\nimport { array, string } from 'prop-types'\n\n// UI\nimport { Image, Icon, Link, List } from '../../../'\nimport { Divider } from '../../../atoms/divider'\nimport { ListItem } from '../../../atoms/list/components/listItem'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const Sidebar = ({ brand, data }) => {\n  const link = (icon, name, to) => {\n    const iconArray = Array.isArray(icon)\n\n    return (\n      <Link to={to} passHref>\n        <StyledLink>\n          {icon && (\n            <Icon\n              icon={icon ? (iconArray ? icon[1] : icon) : null}\n              prefix={icon && iconArray && icon[0]}\n            />\n          )}\n          {name}\n        </StyledLink>\n      </Link>\n    )\n  }\n\n  return (\n    <StyledAside>\n      <StyledBrand>\n        <Image alt='Logo' src={brand} />\n      </StyledBrand>\n\n      <List group>\n        {data.map(({ Component, divider, icon, name, to }, index) => {\n          return (\n            <StyledLi key={index}>\n              {divider ? (\n                <StyledDivider size='sm' />\n              ) : Component ? (\n                <Component />\n              ) : to ? (\n                link(icon, name, to)\n              ) : (\n                name\n              )}\n            </StyledLi>\n          )\n        })}\n      </List>\n    </StyledAside>\n  )\n}\n\nconst StyledAside = styled.aside`\n  background-color: ${({ theme }) => theme.SIDEBAR.background};\n  border-right: 1px solid ${({ theme }) => theme.SIDEBAR.highlight};\n  box-shadow: 0 0 4rem -1rem rgba(0, 0, 0, 0.75);\n  height: 100vh;\n  left: 0;\n  overflow: hidden;\n  padding: 1rem 0;\n  position: fixed;\n  top: 0;\n  width: 16.66667%;\n`\n\nconst StyledBrand = styled.div`\n  display: block;\n  padding: 0 3rem;\n  line-height: 2;\n`\n\nconst StyledDivider = styled(Divider)`\n  border-top-width: 1px;\n  opacity: 0.2;\n`\n\nconst StyledLi = styled(ListItem)`\n  cursor: pointer;\n  padding: 0;\n\n  svg {\n    margin-right: 0.5rem;\n  }\n\n  &:hover {\n    ${({ theme }) => css`\n      background-color: ${theme.SIDEBAR.linkHover};\n      border-right: 2px solid ${theme.SIDEBAR.highlight};\n\n      a {\n        color: ${theme.SIDEBAR.highlight};\n      }\n    `}\n  }\n`\n\nconst StyledLink = styled.a`\n  color: ${({ theme }) => theme.SIDEBAR.linkColour};\n  display: block;\n  padding: 1rem 1.5rem;\n`\n\nSidebar.propTypes = {\n  brand: string,\n  data: array.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}