{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\n\n/**\n * Mock helpers\n */\nimport cloneDeep from 'lodash/cloneDeep'; // merge array with localStorage data\n\nexport var mergeLocalData = function mergeLocalData(array, key) {\n  var local = JSON.parse(window.localStorage.getItem(key));\n\n  if (local) {\n    local.map(function (i) {\n      var existing = array.find(function (o) {\n        return o.id === _parseInt(i.id);\n      });\n\n      if (existing) {\n        _Object$keys(i).map(function (key) {\n          existing[key] = i[key];\n        });\n      } else {\n        array.push(i);\n      }\n    });\n  }\n\n  return cloneDeep(array);\n};\nexport var findByKey = function findByKey(array, key, value) {\n  return array.find(function (a) {\n    return a[key] === value;\n  });\n};\nexport var filterByKey = function filterByKey(array, key, value) {\n  return array.filter(function (a) {\n    return a[key] === value;\n  });\n};\nexport var filterByString = function filterByString(array, key, string) {\n  return array.filter(function (a) {\n    return a[key].toLowerCase().includes(string.toLowerCase());\n  });\n}; // add associated object to an item\n\nexport var getItemAssociation = function getItemAssociation(item, related, key, foreignKey) {\n  return related.find(function (r) {\n    return r[key] === item[foreignKey];\n  });\n}; // add associated array to an item\n\nexport var getItemAssociations = function getItemAssociations(item, related, key, foreignKey) {\n  return related.filter(function (r) {\n    return r[key] === item[foreignKey];\n  });\n}; // add associated array to an array\n\nexport var getAssociations = function getAssociations(array, related, association, key, foreignKey) {\n  return array.map(function (item) {\n    item[association] = related.find(function (r) {\n      return r[key] === item[foreignKey];\n    });\n    return item;\n  });\n}; // add associated array via pivot array\n\nexport var getManyToManyAssociations = function getManyToManyAssociations(item, pivot, related, key, foreignKey) {\n  var associatedItems = pivot.filter(function (a) {\n    return a[key] === item.id;\n  });\n  return associatedItems.map(function (a) {\n    return related.find(function (r) {\n      return r.id === a[foreignKey];\n    });\n  });\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/utils/mockHelpers.js"],"names":["cloneDeep","mergeLocalData","array","key","local","JSON","parse","window","localStorage","getItem","map","i","existing","find","o","id","push","findByKey","value","a","filterByKey","filter","filterByString","string","toLowerCase","includes","getItemAssociation","item","related","foreignKey","r","getItemAssociations","getAssociations","association","getManyToManyAssociations","pivot","associatedItems"],"mappings":";;;AAAA;;;AAGA,OAAOA,SAAP,MAAsB,kBAAtB,C,CAEA;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5C,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BN,GAA5B,CAAX,CAAd;;AACA,MAAIC,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACM,GAAN,CAAU,UAAAC,CAAC,EAAI;AACb,UAAMC,QAAQ,GAAGV,KAAK,CAACW,IAAN,CAAW,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAAS,UAASJ,CAAC,CAACI,EAAX,CAAb;AAAA,OAAZ,CAAjB;;AACA,UAAIH,QAAJ,EAAc;AACZ,qBAAYD,CAAZ,EAAeD,GAAf,CAAmB,UAAAP,GAAG,EAAI;AACxBS,UAAAA,QAAQ,CAACT,GAAD,CAAR,GAAgBQ,CAAC,CAACR,GAAD,CAAjB;AACD,SAFD;AAGD,OAJD,MAIO;AACLD,QAAAA,KAAK,CAACc,IAAN,CAAWL,CAAX;AACD;AACF,KATD;AAUD;;AACD,SAAOX,SAAS,CAACE,KAAD,CAAhB;AACD,CAfM;AAiBP,OAAO,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAACf,KAAD,EAAQC,GAAR,EAAae,KAAb,EAAuB;AAC9C,SAAOhB,KAAK,CAACW,IAAN,CAAW,UAAAM,CAAC;AAAA,WAAIA,CAAC,CAAChB,GAAD,CAAD,KAAWe,KAAf;AAAA,GAAZ,CAAP;AACD,CAFM;AAIP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAClB,KAAD,EAAQC,GAAR,EAAae,KAAb,EAAuB;AAChD,SAAOhB,KAAK,CAACmB,MAAN,CAAa,UAAAF,CAAC;AAAA,WAAIA,CAAC,CAAChB,GAAD,CAAD,KAAWe,KAAf;AAAA,GAAd,CAAP;AACD,CAFM;AAIP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACpB,KAAD,EAAQC,GAAR,EAAaoB,MAAb,EAAwB;AACpD,SAAOrB,KAAK,CAACmB,MAAN,CAAa,UAAAF,CAAC;AAAA,WAAIA,CAAC,CAAChB,GAAD,CAAD,CAAOqB,WAAP,GAAqBC,QAArB,CAA8BF,MAAM,CAACC,WAAP,EAA9B,CAAJ;AAAA,GAAd,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,OAAP,EAAgBzB,GAAhB,EAAqB0B,UAArB,EAAoC;AACpE,SAAOD,OAAO,CAACf,IAAR,CAAa,UAAAiB,CAAC;AAAA,WAAIA,CAAC,CAAC3B,GAAD,CAAD,KAAWwB,IAAI,CAACE,UAAD,CAAnB;AAAA,GAAd,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,IAAD,EAAOC,OAAP,EAAgBzB,GAAhB,EAAqB0B,UAArB,EAAoC;AACrE,SAAOD,OAAO,CAACP,MAAR,CAAe,UAAAS,CAAC;AAAA,WAAIA,CAAC,CAAC3B,GAAD,CAAD,KAAWwB,IAAI,CAACE,UAAD,CAAnB;AAAA,GAAhB,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAC9B,KAAD,EAAQ0B,OAAR,EAAiBK,WAAjB,EAA8B9B,GAA9B,EAAmC0B,UAAnC,EAAkD;AAC/E,SAAO3B,KAAK,CAACQ,GAAN,CAAU,UAAAiB,IAAI,EAAI;AACvBA,IAAAA,IAAI,CAACM,WAAD,CAAJ,GAAoBL,OAAO,CAACf,IAAR,CAAa,UAAAiB,CAAC;AAAA,aAAIA,CAAC,CAAC3B,GAAD,CAAD,KAAWwB,IAAI,CAACE,UAAD,CAAnB;AAAA,KAAd,CAApB;AACA,WAAOF,IAAP;AACD,GAHM,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,IAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACP,IAAD,EAAOQ,KAAP,EAAcP,OAAd,EAAuBzB,GAAvB,EAA4B0B,UAA5B,EAA2C;AAClF,MAAMO,eAAe,GAAGD,KAAK,CAACd,MAAN,CAAa,UAAAF,CAAC;AAAA,WAAIA,CAAC,CAAChB,GAAD,CAAD,KAAWwB,IAAI,CAACZ,EAApB;AAAA,GAAd,CAAxB;AACA,SAAOqB,eAAe,CAAC1B,GAAhB,CAAoB,UAAAS,CAAC,EAAI;AAC9B,WAAOS,OAAO,CAACf,IAAR,CAAa,UAAAiB,CAAC;AAAA,aAAIA,CAAC,CAACf,EAAF,KAASI,CAAC,CAACU,UAAD,CAAd;AAAA,KAAd,CAAP;AACD,GAFM,CAAP;AAGD,CALM","sourcesContent":["/**\n * Mock helpers\n */\nimport cloneDeep from 'lodash/cloneDeep'\n\n// merge array with localStorage data\nexport const mergeLocalData = (array, key) => {\n  const local = JSON.parse(window.localStorage.getItem(key))\n  if (local) {\n    local.map(i => {\n      const existing = array.find(o => o.id === parseInt(i.id))\n      if (existing) {\n        Object.keys(i).map(key => {\n          existing[key] = i[key]\n        })\n      } else {\n        array.push(i)\n      }\n    })\n  }\n  return cloneDeep(array)\n}\n\nexport const findByKey = (array, key, value) => {\n  return array.find(a => a[key] === value)\n}\n\nexport const filterByKey = (array, key, value) => {\n  return array.filter(a => a[key] === value)\n}\n\nexport const filterByString = (array, key, string) => {\n  return array.filter(a => a[key].toLowerCase().includes(string.toLowerCase()))\n}\n\n// add associated object to an item\nexport const getItemAssociation = (item, related, key, foreignKey) => {\n  return related.find(r => r[key] === item[foreignKey])\n}\n\n// add associated array to an item\nexport const getItemAssociations = (item, related, key, foreignKey) => {\n  return related.filter(r => r[key] === item[foreignKey])\n}\n\n// add associated array to an array\nexport const getAssociations = (array, related, association, key, foreignKey) => {\n  return array.map(item => {\n    item[association] = related.find(r => r[key] === item[foreignKey])\n    return item\n  })\n}\n\n// add associated array via pivot array\nexport const getManyToManyAssociations = (item, pivot, related, key, foreignKey) => {\n  const associatedItems = pivot.filter(a => a[key] === item.id)\n  return associatedItems.map(a => {\n    return related.find(r => r.id === a[foreignKey])\n  })\n}\n"]},"metadata":{},"sourceType":"module"}