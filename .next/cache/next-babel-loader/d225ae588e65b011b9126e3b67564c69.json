{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/imageLocation/components/imageWrapper.js\";\nvar __jsx = React.createElement;\n\n/**\n * Image Location\n */\n// React\nimport React from 'react';\nimport { func, object } from 'prop-types';\nimport styled from 'styled-components'; // UI\n\nimport { Image } from \"../../../\";\nimport { Dot } from \"../../\";\nexport var ImageWrapper = function ImageWrapper(_ref) {\n  var coordinates = _ref.coordinates,\n      item = _ref.item,\n      setCoordinates = _ref.setCoordinates;\n\n  var handleImageClick = function handleImageClick(event) {\n    var rect = event.target.getBoundingClientRect();\n    var offsetX = event.clientX - rect.left;\n    var offsetY = event.clientY - rect.top;\n    var coordinates = {\n      x: offsetX,\n      y: offsetY\n    };\n    setCoordinates(coordinates);\n  };\n\n  return __jsx(StyledImageWrapper, {\n    onClick: handleImageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, item.image && __jsx(React.Fragment, null, __jsx(Image, {\n    alt: item.text,\n    src: item.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(Dot, {\n    key: item.id,\n    coordinates: coordinates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\nvar StyledImageWrapper = styled.div.withConfig({\n  displayName: \"imageWrapper__StyledImageWrapper\",\n  componentId: \"sc-1pbz5x3-0\"\n})([\"display:inline-block;position:relative;img{max-width:none;}\"]);\nImageWrapper.propTypes = {\n  coordinates: object,\n  item: object.isRequired,\n  setCoordinates: func.isRequired\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/imageLocation/components/imageWrapper.js"],"names":["React","func","object","styled","Image","Dot","ImageWrapper","coordinates","item","setCoordinates","handleImageClick","event","rect","target","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","x","y","image","text","id","StyledImageWrapper","div","propTypes","isRequired"],"mappings":";;;AAAA;;;AAIA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,SAASC,KAAT;AACA,SAASC,GAAT;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA2C;AAAA,MAAxCC,WAAwC,QAAxCA,WAAwC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AACrE,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAChC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,qBAAb,EAAb;AACA,QAAMC,OAAO,GAAGJ,KAAK,CAACK,OAAN,GAAgBJ,IAAI,CAACK,IAArC;AACA,QAAMC,OAAO,GAAGP,KAAK,CAACQ,OAAN,GAAgBP,IAAI,CAACQ,GAArC;AAEA,QAAMb,WAAW,GAAG;AAClBc,MAAAA,CAAC,EAAEN,OADe;AAElBO,MAAAA,CAAC,EAAEJ;AAFe,KAApB;AAKAT,IAAAA,cAAc,CAACF,WAAD,CAAd;AACD,GAXD;;AAaA,SACE,MAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEG,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACe,KAAL,IACC,4BACE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAEf,IAAI,CAACgB,IAAjB;AAAuB,IAAA,GAAG,EAAEhB,IAAI,CAACe,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEf,IAAI,CAACiB,EAAf;AAAmB,IAAA,WAAW,EAAElB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,CADF;AAUD,CAxBM;AA0BP,IAAMmB,kBAAkB,GAAGvB,MAAM,CAACwB,GAAV;AAAA;AAAA;AAAA,mEAAxB;AASArB,YAAY,CAACsB,SAAb,GAAyB;AACvBrB,EAAAA,WAAW,EAAEL,MADU;AAEvBM,EAAAA,IAAI,EAAEN,MAAM,CAAC2B,UAFU;AAGvBpB,EAAAA,cAAc,EAAER,IAAI,CAAC4B;AAHE,CAAzB","sourcesContent":["/**\n * Image Location\n */\n\n// React\nimport React from 'react'\nimport { func, object } from 'prop-types'\n\nimport styled from 'styled-components'\n\n// UI\nimport { Image } from '../../../'\nimport { Dot } from '../../'\n\nexport const ImageWrapper = ({ coordinates, item, setCoordinates }) => {\n  const handleImageClick = event => {\n    const rect = event.target.getBoundingClientRect()\n    const offsetX = event.clientX - rect.left\n    const offsetY = event.clientY - rect.top\n\n    const coordinates = {\n      x: offsetX,\n      y: offsetY\n    }\n\n    setCoordinates(coordinates)\n  }\n\n  return (\n    <StyledImageWrapper onClick={handleImageClick}>\n      {item.image && (\n        <>\n          <Image alt={item.text} src={item.image} />\n          <Dot key={item.id} coordinates={coordinates} />\n        </>\n      )}\n    </StyledImageWrapper>\n  )\n}\n\nconst StyledImageWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n\n  img {\n    max-width: none;\n  }\n`\n\nImageWrapper.propTypes = {\n  coordinates: object,\n  item: object.isRequired,\n  setCoordinates: func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}