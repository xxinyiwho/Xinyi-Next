{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/layouts/dashboard/dashboard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Layout - Dashboard\n *\n */\n// React\nimport { bool, node, object } from 'prop-types'; // UI\n\nimport { Alert, Page } from \"../../\";\nexport const Dashboard = ({\n  children,\n  resultAlert,\n  isLoading,\n  meta,\n  noData,\n  pageHeading\n}) => {\n  return !isLoading && __jsx(React.Fragment, null, __jsx(Page, {\n    children: children,\n    fluid: true,\n    meta: meta,\n    pageHeading: pageHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), resultAlert.message && __jsx(Alert, {\n    content: resultAlert.message,\n    context: resultAlert.context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\nDashboard.propTypes = {\n  children: node.isRequired,\n  isLoading: bool.isRequired,\n  meta: object.isRequired,\n  pageHeading: object,\n  resultAlert: object\n};\nDashboard.defaultProps = {\n  isLoading: true,\n  noData: false,\n  resultAlert: {\n    context: 'success',\n    message: ''\n  }\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/layouts/dashboard/dashboard.js"],"names":["bool","node","object","Alert","Page","Dashboard","children","resultAlert","isLoading","meta","noData","pageHeading","message","context","propTypes","isRequired","defaultProps"],"mappings":";;;;AAAA;;;;AAKA;AACA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,IAAhB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,SAAzB;AAAoCC,EAAAA,IAApC;AAA0CC,EAAAA,MAA1C;AAAkDC,EAAAA;AAAlD,CAAD,KAAqE;AAC5F,SACE,CAACH,SAAD,IACE,4BACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,QAAhB;AAA0B,IAAA,KAAK,MAA/B;AAAgC,IAAA,IAAI,EAAEG,IAAtC;AAA4C,IAAA,WAAW,EAAEE,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGJ,WAAW,CAACK,OAAZ,IACC,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEL,WAAW,CAACK,OAA5B;AAAqC,IAAA,OAAO,EAAEL,WAAW,CAACM,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ;AAWD,CAZM;AAcPR,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,QAAQ,EAAEL,IAAI,CAACc,UADK;AAEpBP,EAAAA,SAAS,EAAER,IAAI,CAACe,UAFI;AAGpBN,EAAAA,IAAI,EAAEP,MAAM,CAACa,UAHO;AAIpBJ,EAAAA,WAAW,EAAET,MAJO;AAKpBK,EAAAA,WAAW,EAAEL;AALO,CAAtB;AAQAG,SAAS,CAACW,YAAV,GAAyB;AACvBR,EAAAA,SAAS,EAAE,IADY;AAEvBE,EAAAA,MAAM,EAAE,KAFe;AAGvBH,EAAAA,WAAW,EAAE;AACXM,IAAAA,OAAO,EAAE,SADE;AAEXD,IAAAA,OAAO,EAAE;AAFE;AAHU,CAAzB","sourcesContent":["/**\n * Layout - Dashboard\n *\n */\n\n// React\nimport { bool, node, object } from 'prop-types'\n\n// UI\nimport { Alert, Page } from '../../'\n\nexport const Dashboard = ({ children, resultAlert, isLoading, meta, noData, pageHeading }) => {\n  return (\n    !isLoading && (\n      <>\n        <Page children={children} fluid meta={meta} pageHeading={pageHeading} />\n\n        {resultAlert.message && (\n          <Alert content={resultAlert.message} context={resultAlert.context} />\n        )}\n      </>\n    )\n  )\n}\n\nDashboard.propTypes = {\n  children: node.isRequired,\n  isLoading: bool.isRequired,\n  meta: object.isRequired,\n  pageHeading: object,\n  resultAlert: object\n}\n\nDashboard.defaultProps = {\n  isLoading: true,\n  noData: false,\n  resultAlert: {\n    context: 'success',\n    message: ''\n  }\n}\n"]},"metadata":{},"sourceType":"module"}