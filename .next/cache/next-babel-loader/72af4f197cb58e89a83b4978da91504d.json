{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/list/components/listItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * List Item\n */\n// React\nimport { bool, node, string } from 'prop-types'; // UI\n\nimport { Icon } from \"../../icon\"; // Style\n\nimport styled, { css } from 'styled-components';\nexport const ListItem = ({\n  border,\n  children,\n  className,\n  flush,\n  group,\n  icon,\n  prefix,\n  style\n}) => __jsx(StyledItem, {\n  border: border,\n  className: className,\n  flush: flush,\n  group: group,\n  style: style,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, icon && __jsx(StyledIcon, {\n  \"aria-hidden\": \"true\",\n  icon: icon,\n  prefix: prefix,\n  size: \"2x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), children);\nconst borderStyles = css([\"border:1px solid rgba(0,0,0,0.125);\"]);\nconst flushStyles = css([\"border-right:0;border-left:0;border-radius:0;&:first-child{border-top:0;}&:last-child{border-bottom:0;margin-bottom:0;}\"]);\nconst groupStyles = css([\"margin-bottom:-1px;padding:0.75rem 1.25rem;\"]);\nconst StyledItem = styled.li.withConfig({\n  displayName: \"listItem__StyledItem\",\n  componentId: \"sc-8rmtw2-0\"\n})([\"position:relative;\", \" \", \" \", \"\"], ({\n  border,\n  group,\n  flush\n}) => (border || group || flush) && groupStyles, ({\n  border,\n  flush\n}) => (border || flush) && borderStyles, ({\n  flush\n}) => flush && flushStyles);\nconst StyledIcon = styled(Icon).withConfig({\n  displayName: \"listItem__StyledIcon\",\n  componentId: \"sc-8rmtw2-1\"\n})([\"color:\", \";float:left;margin:0.1rem 1rem 0 0;\"], ({\n  theme\n}) => theme.COLOUR.secondary);\nListItem.propTypes = {\n  border: bool,\n  children: node.isRequired,\n  flush: bool,\n  group: bool,\n  icon: string,\n  prefix: string\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/list/components/listItem.js"],"names":["bool","node","string","Icon","styled","css","ListItem","border","children","className","flush","group","icon","prefix","style","borderStyles","flushStyles","groupStyles","StyledItem","li","StyledIcon","theme","COLOUR","secondary","propTypes","isRequired"],"mappings":";;;;AAAA;;;AAIA;AACA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,IAAT,qB,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA,KAA/B;AAAsCC,EAAAA,KAAtC;AAA6CC,EAAAA,IAA7C;AAAmDC,EAAAA,MAAnD;AAA2DC,EAAAA;AAA3D,CAAD,KACtB,MAAC,UAAD;AAAY,EAAA,MAAM,EAAEP,MAApB;AAA4B,EAAA,SAAS,EAAEE,SAAvC;AAAkD,EAAA,KAAK,EAAEC,KAAzD;AAAgE,EAAA,KAAK,EAAEC,KAAvE;AAA8E,EAAA,KAAK,EAAEG,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,IAAI,IAAI,MAAC,UAAD;AAAY,iBAAY,MAAxB;AAA+B,EAAA,IAAI,EAAEA,IAArC;AAA2C,EAAA,MAAM,EAAEC,MAAnD;AAA2D,EAAA,IAAI,EAAC,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADX,EAEGL,QAFH,CADK;AAOP,MAAMO,YAAY,GAAGV,GAAH,yCAAlB;AAIA,MAAMW,WAAW,GAAGX,GAAH,6HAAjB;AAcA,MAAMY,WAAW,GAAGZ,GAAH,iDAAjB;AAKA,MAAMa,UAAU,GAAGd,MAAM,CAACe,EAAV;AAAA;AAAA;AAAA,yCAEZ,CAAC;AAAEZ,EAAAA,MAAF;AAAUI,EAAAA,KAAV;AAAiBD,EAAAA;AAAjB,CAAD,KAA8B,CAACH,MAAM,IAAII,KAAV,IAAmBD,KAApB,KAA8BO,WAFhD,EAGZ,CAAC;AAAEV,EAAAA,MAAF;AAAUG,EAAAA;AAAV,CAAD,KAAuB,CAACH,MAAM,IAAIG,KAAX,KAAqBK,YAHhC,EAIZ,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,IAAIM,WAJZ,CAAhB;AAOA,MAAMI,UAAU,GAAGhB,MAAM,CAACD,IAAD,CAAT;AAAA;AAAA;AAAA,sDACL,CAAC;AAAEkB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,SADvB,CAAhB;AAMAjB,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,MAAM,EAAEP,IADW;AAEnBQ,EAAAA,QAAQ,EAAEP,IAAI,CAACwB,UAFI;AAGnBf,EAAAA,KAAK,EAAEV,IAHY;AAInBW,EAAAA,KAAK,EAAEX,IAJY;AAKnBY,EAAAA,IAAI,EAAEV,MALa;AAMnBW,EAAAA,MAAM,EAAEX;AANW,CAArB","sourcesContent":["/**\n * List Item\n */\n\n// React\nimport { bool, node, string } from 'prop-types'\n\n// UI\nimport { Icon } from '../../icon'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const ListItem = ({ border, children, className, flush, group, icon, prefix, style }) => (\n  <StyledItem border={border} className={className} flush={flush} group={group} style={style}>\n    {icon && <StyledIcon aria-hidden='true' icon={icon} prefix={prefix} size='2x' />}\n    {children}\n  </StyledItem>\n)\n\nconst borderStyles = css`\n  border: 1px solid rgba(0, 0, 0, 0.125);\n`\n\nconst flushStyles = css`\n  border-right: 0;\n  border-left: 0;\n  border-radius: 0;\n\n  &:first-child {\n    border-top: 0;\n  }\n  &:last-child {\n    border-bottom: 0;\n    margin-bottom: 0;\n  }\n`\n\nconst groupStyles = css`\n  margin-bottom: -1px;\n  padding: 0.75rem 1.25rem;\n`\n\nconst StyledItem = styled.li`\n  position: relative;\n  ${({ border, group, flush }) => (border || group || flush) && groupStyles}\n  ${({ border, flush }) => (border || flush) && borderStyles}\n  ${({ flush }) => flush && flushStyles}\n`\n\nconst StyledIcon = styled(Icon)`\n  color: ${({ theme }) => theme.COLOUR.secondary};\n  float: left;\n  margin: 0.1rem 1rem 0 0;\n`\n\nListItem.propTypes = {\n  border: bool,\n  children: node.isRequired,\n  flush: bool,\n  group: bool,\n  icon: string,\n  prefix: string\n}\n"]},"metadata":{},"sourceType":"module"}