{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/table/formatter/actions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Table - Formatter - Actions\n */\n// React\nimport { object } from 'prop-types'; // Next\n\nimport Router from 'next/router'; // React Tooltip\n\nimport ReactTooltip from 'react-tooltip'; // UI\n\nimport { Button, ButtonToolbar, Icon } from \"../../../\";\nexport const TableActions = ({\n  row: {\n    id\n  }\n}, data) => {\n  const handleClick = path => e => {\n    e.preventDefault();\n    e.stopPropagation();\n    Router.push(path);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ReactTooltip, {\n    effect: \"solid\",\n    event: \"mouseover\",\n    globalEventOff: \"click\",\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(ButtonToolbar, {\n    align: \"flex-start\",\n    style: {\n      zIndex: '100000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, data.map(({\n    content,\n    context,\n    icon,\n    to,\n    tooltip\n  }, index) => {\n    const iconArray = _Array$isArray(icon);\n\n    return __jsx(Button, {\n      as: \"a\",\n      \"data-tip\": tooltip,\n      context: context,\n      key: index,\n      onClick: handleClick(`${to}?id=${id}`),\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Icon, {\n      icon: icon ? iconArray ? icon[1] : icon : null,\n      prefix: icon && iconArray && icon[0],\n      style: {\n        pointerEvents: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  })));\n};\nTableActions.propTypes = {\n  row: object.isRequired\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/table/formatter/actions.js"],"names":["object","Router","ReactTooltip","Button","ButtonToolbar","Icon","TableActions","row","id","data","handleClick","path","e","preventDefault","stopPropagation","push","zIndex","map","content","context","icon","to","tooltip","index","iconArray","pointerEvents","propTypes","isRequired"],"mappings":";;;;;AAAA;;;AAIA;AACA,SAASA,MAAT,QAAuB,YAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,IAAhC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA;AAAF;AAAP,CAAD,EAAkBC,IAAlB,KAA2B;AACrD,QAAMC,WAAW,GAAGC,IAAI,IAAIC,CAAC,IAAI;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACAb,IAAAA,MAAM,CAACc,IAAP,CAAYJ,IAAZ;AACD,GAJD;;AAMA,SACE,4BACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAC,WAAnC;AAA+C,IAAA,cAAc,EAAC,OAA9D;AAAsE,IAAA,SAAS,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,YAArB;AAAkC,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACQ,GAAL,CAAS,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,EAA1B;AAA8BC,IAAAA;AAA9B,GAAD,EAA0CC,KAA1C,KAAoD;AAC5D,UAAMC,SAAS,GAAG,eAAcJ,IAAd,CAAlB;;AAEA,WACE,MAAC,MAAD;AACE,MAAA,EAAE,EAAC,GADL;AAEE,kBAAUE,OAFZ;AAGE,MAAA,OAAO,EAAEH,OAHX;AAIE,MAAA,GAAG,EAAEI,KAJP;AAKE,MAAA,OAAO,EAAEb,WAAW,CAAE,GAAEW,EAAG,OAAMb,EAAG,EAAhB,CALtB;AAME,MAAA,IAAI,EAAC,IANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,IAAD;AACE,MAAA,IAAI,EAAEY,IAAI,GAAII,SAAS,GAAGJ,IAAI,CAAC,CAAD,CAAP,GAAaA,IAA1B,GAAkC,IAD9C;AAEE,MAAA,MAAM,EAAEA,IAAI,IAAII,SAAR,IAAqBJ,IAAI,CAAC,CAAD,CAFnC;AAGE,MAAA,KAAK,EAAE;AAAEK,QAAAA,aAAa,EAAE;AAAjB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAgBD,GAnBA,CADH,CAHF,CADF;AA4BD,CAnCM;AAqCPnB,YAAY,CAACoB,SAAb,GAAyB;AACvBnB,EAAAA,GAAG,EAAEP,MAAM,CAAC2B;AADW,CAAzB","sourcesContent":["/**\n * Table - Formatter - Actions\n */\n\n// React\nimport { object } from 'prop-types'\n\n// Next\nimport Router from 'next/router'\n\n// React Tooltip\nimport ReactTooltip from 'react-tooltip'\n\n// UI\nimport { Button, ButtonToolbar, Icon } from '../../../'\n\nexport const TableActions = ({ row: { id } }, data) => {\n  const handleClick = path => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    Router.push(path)\n  }\n\n  return (\n    <>\n      <ReactTooltip effect='solid' event='mouseover' globalEventOff='click' multiline />\n\n      <ButtonToolbar align='flex-start' style={{ zIndex: '100000000' }}>\n        {data.map(({ content, context, icon, to, tooltip }, index) => {\n          const iconArray = Array.isArray(icon)\n\n          return (\n            <Button\n              as='a'\n              data-tip={tooltip}\n              context={context}\n              key={index}\n              onClick={handleClick(`${to}?id=${id}`)}\n              size='sm'\n            >\n              <Icon\n                icon={icon ? (iconArray ? icon[1] : icon) : null}\n                prefix={icon && iconArray && icon[0]}\n                style={{ pointerEvents: 'none' }}\n              />\n            </Button>\n          )\n        })}\n      </ButtonToolbar>\n    </>\n  )\n}\n\nTableActions.propTypes = {\n  row: object.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}