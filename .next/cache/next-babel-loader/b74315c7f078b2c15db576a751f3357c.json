{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/form/textarea/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Textarea\n */\n// React\nimport { useEffect, useState } from 'react';\nimport { bool, func, number, string, oneOf } from 'prop-types'; // UI\n\nimport { Label } from \"../\"; // Style\n\nimport styled, { css } from 'styled-components';\nexport const Textarea = ({\n  autoFocus,\n  change,\n  className,\n  cols,\n  dir,\n  disabled,\n  id,\n  label,\n  maxLength,\n  placeholder,\n  readOnly,\n  required,\n  rows,\n  showCharsCount,\n  spellCheck,\n  tabIndex,\n  value,\n  wrap\n}) => {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(maxLength);\n  useEffect(() => {\n    setCounter(value.length);\n  });\n\n  const _wordCount = e => {\n    change(e);\n    setCounter(e.target.value.length);\n  };\n\n  const InputItem = () => __jsx(React.Fragment, null, __jsx(StyledTextarea, {\n    autoFocus: autoFocus,\n    \"aria-describedby\": id,\n    className: `${className} Form-control Textarea`,\n    cols: cols,\n    dir: dir,\n    disabled: disabled,\n    id: id,\n    maxLength: maxLength,\n    name: id,\n    onChange: _wordCount,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: required,\n    rows: rows,\n    spellcheck: spellCheck,\n    tabIndex: tabIndex,\n    value: value,\n    wrap: wrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), showCharsCount && __jsx(CharCountSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, counter, maxLength && ` / ${maxLength}`));\n\n  return __jsx(React.Fragment, null, label ? __jsx(Label, {\n    text: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, InputItem(), __jsx(\"div\", {\n    className: \"Form-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })) : InputItem());\n};\nconst StyledTextarea = styled.textarea.withConfig({\n  displayName: \"textarea__StyledTextarea\",\n  componentId: \"t78fj5-0\"\n})([\"background-clip:padding-box;background-color:\", \";border:1px solid \", \";border-radius:0.25rem;color:\", \";cursor:\", \";direction:\", \";display:block;font-size:1rem;line-height:2rem;padding:0.5rem;overflow:auto;width:100%;\", \" &:focus{border-color:#80bdff;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25);outline:0;}::-webkit-input-placeholder{color:#c0c0c0;}:-ms-input-placeholder{color:#c0c0c0;}:-moz-placeholder{color:#c0c0c0;opacity:1;}\"], ({\n  disabled\n}) => disabled ? '#e9ecef' : '#fff', props => props.theme.COLOUR.light, props => props.theme.COLOUR.dark, ({\n  disabled\n}) => disabled ? 'no-drop' : 'auto', ({\n  dir\n}) => dir, ({\n  disabled\n}) => disabled && css([\"-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;\"]));\nconst CharCountSection = styled.p.withConfig({\n  displayName: \"textarea__CharCountSection\",\n  componentId: \"t78fj5-1\"\n})([\"float:right;\"]);\nTextarea.propTypes = {\n  autoFocus: bool,\n  change: func.isRequired,\n  cols: number,\n  dir: oneOf(['ltr', 'rtl']),\n  disabled: bool,\n  id: string,\n  label: string,\n  maxLength: number,\n  placeholder: string,\n  readOnly: bool,\n  required: bool,\n  rows: number,\n  showCharsCount: bool,\n  spellCheck: bool,\n  tabIndex: number,\n  value: string,\n  wrap: oneOf(['soft', 'hard'])\n};\nTextarea.defaultProps = {\n  autoFocus: false,\n  dir: 'ltr',\n  required: true,\n  rows: 5,\n  showCharsCount: false,\n  value: ''\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/form/textarea/index.js"],"names":["useEffect","useState","bool","func","number","string","oneOf","Label","styled","css","Textarea","autoFocus","change","className","cols","dir","disabled","id","label","maxLength","placeholder","readOnly","required","rows","showCharsCount","spellCheck","tabIndex","value","wrap","counter","setCounter","length","_wordCount","e","target","InputItem","StyledTextarea","textarea","props","theme","COLOUR","light","dark","CharCountSection","p","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Textarea\n */\n\n// React\nimport { useEffect, useState } from 'react'\nimport { bool, func, number, string, oneOf } from 'prop-types'\n\n// UI\nimport { Label } from '../'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const Textarea = ({\n  autoFocus,\n  change,\n  className,\n  cols,\n  dir,\n  disabled,\n  id,\n  label,\n  maxLength,\n  placeholder,\n  readOnly,\n  required,\n  rows,\n  showCharsCount,\n  spellCheck,\n  tabIndex,\n  value,\n  wrap\n}) => {\n  const [counter, setCounter] = useState(maxLength)\n\n  useEffect(() => {\n    setCounter(value.length)\n  })\n\n  const _wordCount = e => {\n    change(e)\n    setCounter(e.target.value.length)\n  }\n\n  const InputItem = () => (\n    <>\n      <StyledTextarea\n        autoFocus={autoFocus}\n        aria-describedby={id}\n        className={`${className} Form-control Textarea`}\n        cols={cols}\n        dir={dir}\n        disabled={disabled}\n        id={id}\n        maxLength={maxLength}\n        name={id}\n        onChange={_wordCount}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        required={required}\n        rows={rows}\n        spellcheck={spellCheck}\n        tabIndex={tabIndex}\n        value={value}\n        wrap={wrap}\n      />\n\n      {showCharsCount && (\n        <CharCountSection>\n          {counter}\n          {maxLength && ` / ${maxLength}`}\n        </CharCountSection>\n      )}\n    </>\n  )\n\n  return (\n    <>\n      {label ? (\n        <Label text={label}>\n          {InputItem()}\n          <div className='Form-feedback' />\n        </Label>\n      ) : (\n        InputItem()\n      )}\n    </>\n  )\n}\n\nconst StyledTextarea = styled.textarea`\n  background-clip: padding-box;\n  background-color: ${({ disabled }) => (disabled ? '#e9ecef' : '#fff')};\n  border: 1px solid ${props => props.theme.COLOUR.light};\n  border-radius: 0.25rem;\n  color: ${props => props.theme.COLOUR.dark};\n  cursor: ${({ disabled }) => (disabled ? 'no-drop' : 'auto')};\n  direction: ${({ dir }) => dir};\n  display: block;\n  font-size: 1rem;\n  line-height: 2rem;\n  padding: 0.5rem;\n  overflow: auto;\n  width: 100%;\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      -webkit-user-select: none; /* Safari 3.1+ */\n      -moz-user-select: none; /* Firefox 2+ */\n      -ms-user-select: none; /* IE 10+ */\n      user-select: none; /* Standard syntax */\n    `}\n\n  &:focus {\n    border-color: #80bdff;\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n    outline: 0;\n  }\n\n  ::-webkit-input-placeholder {\n    color: #c0c0c0;\n  }\n  :-ms-input-placeholder {\n    color: #c0c0c0;\n  }\n  :-moz-placeholder {\n    color: #c0c0c0;\n    opacity: 1;\n  }\n`\n\nconst CharCountSection = styled.p`\n  float: right;\n`\n\nTextarea.propTypes = {\n  autoFocus: bool,\n  change: func.isRequired,\n  cols: number,\n  dir: oneOf(['ltr', 'rtl']),\n  disabled: bool,\n  id: string,\n  label: string,\n  maxLength: number,\n  placeholder: string,\n  readOnly: bool,\n  required: bool,\n  rows: number,\n  showCharsCount: bool,\n  spellCheck: bool,\n  tabIndex: number,\n  value: string,\n  wrap: oneOf(['soft', 'hard'])\n}\n\nTextarea.defaultProps = {\n  autoFocus: false,\n  dir: 'ltr',\n  required: true,\n  rows: 5,\n  showCharsCount: false,\n  value: ''\n}\n"]},"metadata":{},"sourceType":"module"}