{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/listing/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Blog - Listing\n * Displays articles cards from selected author, category or tag\n *\n * - Published is true\n * - Homepage is not false\n * - Sorted and filtered by date\n */\n// React\nimport { any, string, object } from 'prop-types'; // Lodash\n\nimport _filter from 'lodash/filter'; // UI\n\nimport { BlogCard, Column, Row, slugify } from \"../../\";\nexport const BlogListing = ({\n  articles,\n  author,\n  category,\n  config,\n  tag\n}) => {\n  const _findTag = articles => {\n    return _filter(articles, {\n      tags: [tag]\n    });\n  };\n\n  const _findArticle = articles => {\n    return articles.filter(article => {\n      return slugify(category ? article.category : article.author) === (category || author) && article.homepage !== false && article.published;\n    });\n  };\n\n  const _find = () => {\n    const _findMe = tag ? _findTag(articles) : _findArticle(articles);\n\n    return _findMe.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date);\n    }).slice(0, 10);\n  };\n\n  return __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, _find().map((article, index) => __jsx(Column, {\n    key: index,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(BlogCard, {\n    article: article,\n    config: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n};\nBlogListing.propTypes = {\n  articles: any.isRequired,\n  author: string,\n  category: string,\n  config: object,\n  tag: string\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/listing/index.js"],"names":["any","string","object","_filter","BlogCard","Column","Row","slugify","BlogListing","articles","author","category","config","tag","_findTag","tags","_findArticle","filter","article","homepage","published","_find","_findMe","sort","a","b","Date","date","slice","map","index","propTypes","isRequired"],"mappings":";;;;AAAA;;;;;;;;AASA;AACA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,QAAoC,YAApC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,GAA3B,EAAgCC,OAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA;AAAtC,CAAD,KAAiD;AAC1E,QAAMC,QAAQ,GAAGL,QAAQ,IAAI;AAC3B,WAAON,OAAO,CAACM,QAAD,EAAW;AAAEM,MAAAA,IAAI,EAAE,CAACF,GAAD;AAAR,KAAX,CAAd;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAGP,QAAQ,IAAI;AAC/B,WAAOA,QAAQ,CAACQ,MAAT,CAAgBC,OAAO,IAAI;AAChC,aACEX,OAAO,CAACI,QAAQ,GAAGO,OAAO,CAACP,QAAX,GAAsBO,OAAO,CAACR,MAAvC,CAAP,MAA2DC,QAAQ,IAAID,MAAvE,KACAQ,OAAO,CAACC,QAAR,KAAqB,KADrB,IAEAD,OAAO,CAACE,SAHV;AAKD,KANM,CAAP;AAOD,GARD;;AAUA,QAAMC,KAAK,GAAG,MAAM;AAClB,UAAMC,OAAO,GAAGT,GAAG,GAAGC,QAAQ,CAACL,QAAD,CAAX,GAAwBO,YAAY,CAACP,QAAD,CAAvD;;AAEA,WAAOa,OAAO,CACXC,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,aAAO,IAAIC,IAAJ,CAASD,CAAC,CAACE,IAAX,IAAmB,IAAID,IAAJ,CAASF,CAAC,CAACG,IAAX,CAA1B;AACD,KAHI,EAIJC,KAJI,CAIE,CAJF,EAIK,EAJL,CAAP;AAKD,GARD;;AAUA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,GAAGQ,GAAR,CAAY,CAACX,OAAD,EAAUY,KAAV,KACX,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEZ,OAAnB;AAA4B,IAAA,MAAM,EAAEN,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF;AASD,CAlCM;AAoCPJ,WAAW,CAACuB,SAAZ,GAAwB;AACtBtB,EAAAA,QAAQ,EAAET,GAAG,CAACgC,UADQ;AAEtBtB,EAAAA,MAAM,EAAET,MAFc;AAGtBU,EAAAA,QAAQ,EAAEV,MAHY;AAItBW,EAAAA,MAAM,EAAEV,MAJc;AAKtBW,EAAAA,GAAG,EAAEZ;AALiB,CAAxB","sourcesContent":["/**\n * Blog - Listing\n * Displays articles cards from selected author, category or tag\n *\n * - Published is true\n * - Homepage is not false\n * - Sorted and filtered by date\n */\n\n// React\nimport { any, string, object } from 'prop-types'\n\n// Lodash\nimport _filter from 'lodash/filter'\n\n// UI\nimport { BlogCard, Column, Row, slugify } from '../../'\n\nexport const BlogListing = ({ articles, author, category, config, tag }) => {\n  const _findTag = articles => {\n    return _filter(articles, { tags: [tag] })\n  }\n\n  const _findArticle = articles => {\n    return articles.filter(article => {\n      return (\n        slugify(category ? article.category : article.author) === (category || author) &&\n        article.homepage !== false &&\n        article.published\n      )\n    })\n  }\n\n  const _find = () => {\n    const _findMe = tag ? _findTag(articles) : _findArticle(articles)\n\n    return _findMe\n      .sort((a, b) => {\n        return new Date(b.date) - new Date(a.date)\n      })\n      .slice(0, 10)\n  }\n\n  return (\n    <Row>\n      {_find().map((article, index) => (\n        <Column key={index} md={6}>\n          <BlogCard article={article} config={config} />\n        </Column>\n      ))}\n    </Row>\n  )\n}\n\nBlogListing.propTypes = {\n  articles: any.isRequired,\n  author: string,\n  category: string,\n  config: object,\n  tag: string\n}\n"]},"metadata":{},"sourceType":"module"}