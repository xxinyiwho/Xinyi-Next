{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/sidebar/author.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Blog - Author\n * List the 5 Authors who have written the most\n */\n// React\nimport { useEffect, useState } from 'react';\nimport { array, number, object } from 'prop-types'; // UI\n\nimport { slugify } from \"../../\";\nimport { BlogList, BlogSection } from \"./components\";\nexport const BlogAuthor = ({\n  articles,\n  config,\n  total\n}) => {\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  useEffect(() => {\n    setList(_find());\n  }, []);\n\n  const _find = () => {\n    const counts = articles.filter(article => {\n      return article.category !== 'terms' && article.homepage !== false;\n    }).reduce((p, c) => {\n      const author = c.author;\n\n      if (!Object.prototype.hasOwnProperty.call(p, author)) {\n        p[author] = 0;\n      }\n\n      p[author]++;\n      return p;\n    }, {});\n\n    const countsMapped = _Object$keys(counts).filter((article, v) => {\n      return article !== 'undefined';\n    }).map(k => {\n      return {\n        badge: k,\n        name: counts[k],\n        to: `${slugify(k)}`\n      };\n    });\n\n    return countsMapped;\n  };\n\n  return __jsx(BlogSection, {\n    heading: \"Author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(BlogList, {\n    config: config,\n    author: true,\n    list: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\nBlogAuthor.propTypes = {\n  articles: array.isRequired,\n  config: object.isRequired,\n  total: number\n};\nBlogAuthor.defaultProps = {\n  total: 5\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/sidebar/author.js"],"names":["useEffect","useState","array","number","object","slugify","BlogList","BlogSection","BlogAuthor","articles","config","total","list","setList","_find","counts","filter","article","category","homepage","reduce","p","c","author","Object","prototype","hasOwnProperty","call","countsMapped","v","map","k","badge","name","to","propTypes","isRequired","defaultProps"],"mappings":";;;;;AAAA;;;;AAKA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,YAAtC,C,CAEA;;AACA,SAASC,OAAT;AACA,SAASC,QAAT,EAAmBC,WAAnB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAiC;AACzD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,KAAK,EAAN,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,KAAK,GAAG,MAAM;AAClB,UAAMC,MAAM,GAAGN,QAAQ,CAEpBO,MAFY,CAELC,OAAO,IAAI;AACjB,aAAOA,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgCD,OAAO,CAACE,QAAR,KAAqB,KAA5D;AACD,KAJY,EAMZC,MANY,CAML,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,YAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;;AAEA,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,CAArC,EAAwCE,MAAxC,CAAL,EAAsD;AACpDF,QAAAA,CAAC,CAACE,MAAD,CAAD,GAAY,CAAZ;AACD;;AAEDF,MAAAA,CAAC,CAACE,MAAD,CAAD;AAEA,aAAOF,CAAP;AACD,KAhBY,EAgBV,EAhBU,CAAf;;AAkBA,UAAMO,YAAY,GAAG,aAAYb,MAAZ,EAClBC,MADkB,CACX,CAACC,OAAD,EAAUY,CAAV,KAAgB;AACtB,aAAOZ,OAAO,KAAK,WAAnB;AACD,KAHkB,EAIlBa,GAJkB,CAIdC,CAAC,IAAI;AACR,aAAO;AACLC,QAAAA,KAAK,EAAED,CADF;AAELE,QAAAA,IAAI,EAAElB,MAAM,CAACgB,CAAD,CAFP;AAGLG,QAAAA,EAAE,EAAG,GAAE7B,OAAO,CAAC0B,CAAD,CAAI;AAHb,OAAP;AAKD,KAVkB,CAArB;;AAYA,WAAOH,YAAP;AACD,GAhCD;;AAkCA,SACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAElB,MAAlB;AAA0B,IAAA,MAAM,MAAhC;AAAiC,IAAA,IAAI,EAAEE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA9CM;AAgDPJ,UAAU,CAAC2B,SAAX,GAAuB;AACrB1B,EAAAA,QAAQ,EAAEP,KAAK,CAACkC,UADK;AAErB1B,EAAAA,MAAM,EAAEN,MAAM,CAACgC,UAFM;AAGrBzB,EAAAA,KAAK,EAAER;AAHc,CAAvB;AAMAK,UAAU,CAAC6B,YAAX,GAA0B;AACxB1B,EAAAA,KAAK,EAAE;AADiB,CAA1B","sourcesContent":["/**\n * Blog - Author\n * List the 5 Authors who have written the most\n */\n\n// React\nimport { useEffect, useState } from 'react'\nimport { array, number, object } from 'prop-types'\n\n// UI\nimport { slugify } from '../../'\nimport { BlogList, BlogSection } from './components'\n\nexport const BlogAuthor = ({ articles, config, total }) => {\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    setList(_find())\n  }, [])\n\n  const _find = () => {\n    const counts = articles\n\n      .filter(article => {\n        return article.category !== 'terms' && article.homepage !== false\n      })\n\n      .reduce((p, c) => {\n        const author = c.author\n\n        if (!Object.prototype.hasOwnProperty.call(p, author)) {\n          p[author] = 0\n        }\n\n        p[author]++\n\n        return p\n      }, {})\n\n    const countsMapped = Object.keys(counts)\n      .filter((article, v) => {\n        return article !== 'undefined'\n      })\n      .map(k => {\n        return {\n          badge: k,\n          name: counts[k],\n          to: `${slugify(k)}`\n        }\n      })\n\n    return countsMapped\n  }\n\n  return (\n    <BlogSection heading='Author'>\n      <BlogList config={config} author list={list} />\n    </BlogSection>\n  )\n}\n\nBlogAuthor.propTypes = {\n  articles: array.isRequired,\n  config: object.isRequired,\n  total: number\n}\n\nBlogAuthor.defaultProps = {\n  total: 5\n}\n"]},"metadata":{},"sourceType":"module"}