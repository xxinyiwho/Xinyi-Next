{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/accordion/components/accordion.js\";\nvar __jsx = React.createElement;\n\n/**\n * Accordion\n */\nimport React, { useState, Children, cloneElement } from 'react';\nimport { array, node, object, string, bool } from 'prop-types';\nimport styled from 'styled-components';\nimport { AccordionItem } from \"../../\";\n\nvar renderItem = function renderItem(_ref, index, current, handleCurrent) {\n  var body = _ref.body,\n      context = _ref.context,\n      title = _ref.title;\n  return __jsx(AccordionItem, {\n    key: index,\n    context: context,\n    open: current.includes(index),\n    title: title,\n    handleOpen: function handleOpen() {\n      return handleCurrent(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, body);\n};\n\nexport var Accordion = function Accordion(_ref2) {\n  var children = _ref2.children,\n      className = _ref2.className,\n      data = _ref2.data,\n      style = _ref2.style,\n      closeOthersOnOpen = _ref2.closeOthersOnOpen;\n  var initialOpen = children ? children.findIndex(function (_) {\n    return _.props.open;\n  }) : data.findIndex(function (_) {\n    return _.open;\n  });\n\n  var _useState = useState(initialOpen > -1 ? [initialOpen] : []),\n      current = _useState[0],\n      setCurrent = _useState[1];\n\n  var handleCurrent = function handleCurrent(index) {\n    setCurrent(function (prev) {\n      var temp = [];\n\n      if (closeOthersOnOpen && !prev.includes(index)) {\n        temp = [index];\n      } else {\n        if (prev.includes(index)) temp = prev.filter(function (_) {\n          return _ !== index;\n        });else temp = [].concat(_toConsumableArray(prev), [index]);\n      }\n\n      return temp;\n    });\n  };\n\n  return __jsx(StyledAccordion, {\n    className: className,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, children ? Children.map(children, function (child, index) {\n    return cloneElement(child, {\n      index: index,\n      open: current.includes(index),\n      handleOpen: function handleOpen(index) {\n        return handleCurrent(index);\n      }\n    });\n  }) : data.map(function (item, index) {\n    return renderItem(item, index, current, handleCurrent);\n  }));\n};\nvar StyledAccordion = styled.div.withConfig({\n  displayName: \"accordion__StyledAccordion\",\n  componentId: \"nb6pvb-0\"\n})([\"border:1px solid rgba(0,0,0,0.125);border-radius:0.25rem;\"]);\nAccordion.propTypes = {\n  children: node,\n  className: string,\n  closeOthersOnOpen: bool,\n  data: array,\n  style: object\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/accordion/components/accordion.js"],"names":["React","useState","Children","cloneElement","array","node","object","string","bool","styled","AccordionItem","renderItem","index","current","handleCurrent","body","context","title","includes","Accordion","children","className","data","style","closeOthersOnOpen","initialOpen","findIndex","_","props","open","setCurrent","prev","temp","filter","map","child","handleOpen","item","StyledAccordion","div","propTypes"],"mappings":"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","sourcesContent":["/**\n * Accordion\n */\n\nimport React, { useState, Children, cloneElement } from 'react'\n\nimport { array, node, object, string, bool } from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { AccordionItem } from '../../'\n\nconst renderItem = ({ body, context, title }, index, current, handleCurrent) => {\n  return (\n    <AccordionItem\n      key={index}\n      context={context}\n      open={current.includes(index)}\n      title={title}\n      handleOpen={() => handleCurrent(index)}\n    >\n      {body}\n    </AccordionItem>\n  )\n}\n\nexport const Accordion = ({ children, className, data, style, closeOthersOnOpen }) => {\n  const initialOpen = children ? children.findIndex(_ => _.props.open) : data.findIndex(_ => _.open)\n  const [current, setCurrent] = useState(initialOpen > -1 ? [initialOpen] : [])\n\n  const handleCurrent = index => {\n    setCurrent(prev => {\n      let temp = []\n      if (closeOthersOnOpen && !prev.includes(index)) {\n        temp = [index]\n      } else {\n        if (prev.includes(index)) temp = prev.filter(_ => _ !== index)\n        else temp = [...prev, index]\n      }\n      return temp\n    })\n  }\n\n  return (\n    <StyledAccordion className={className} style={style}>\n      {children\n        ? Children.map(children, (child, index) => {\n            return cloneElement(child, {\n              index,\n              open: current.includes(index),\n              handleOpen: index => handleCurrent(index)\n            })\n          })\n        : data.map((item, index) => renderItem(item, index, current, handleCurrent))}\n    </StyledAccordion>\n  )\n}\n\nconst StyledAccordion = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 0.25rem;\n`\n\nAccordion.propTypes = {\n  children: node,\n  className: string,\n  closeOthersOnOpen: bool,\n  data: array,\n  style: object\n}\n"]},"metadata":{},"sourceType":"module"}