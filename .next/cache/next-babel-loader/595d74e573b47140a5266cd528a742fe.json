{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/widgets/button.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Navbar - Widgets\n */\n// React\nimport { bool, string, func } from 'prop-types'; // UI\n\nimport { Button, Link, MEDIA_QUERY_MAX } from \"../../../../\"; // Style\n\nimport styled from 'styled-components';\nexport const NavButton = ({\n  closeMenu,\n  id,\n  name,\n  to,\n  type,\n  visible\n}) => {\n  return __jsx(Link, {\n    to: to,\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(StyledButton, {\n    id: id,\n    context: type.context,\n    content: name,\n    onClick: visible ? closeMenu : () => {},\n    outline: type.outline,\n    size: type.size,\n    type: type.as,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"button__StyledButton\",\n  componentId: \"sc-1pm2bd6-0\"\n})([\"\", \"\"], MEDIA_QUERY_MAX.desktop`\n    background: none;\n    border: none;\n    color: ${({\n  theme\n}) => theme.NAVBAR.colourActive};\n    cursor: pointer;\n    font-size: 0.8125rem;\n    padding: 1rem 0.75rem;\n    width: 100%;\n\n    &:hover {\n      color: ${({\n  theme\n}) => theme.COLOUR.primary};\n      background: none;\n    }\n  `);\nNavButton.propTypes = {\n  closeMenu: func,\n  id: string,\n  name: string,\n  to: string,\n  type: string,\n  visible: bool\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/widgets/button.js"],"names":["bool","string","func","Button","Link","MEDIA_QUERY_MAX","styled","NavButton","closeMenu","id","name","to","type","visible","context","outline","size","as","StyledButton","desktop","theme","NAVBAR","colourActive","COLOUR","primary","propTypes"],"mappings":";;;;AAAA;;;AAIA;AACA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,eAAvB,uB,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,EAAb;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,EAAvB;AAA2BC,EAAAA,IAA3B;AAAiCC,EAAAA;AAAjC,CAAD,KAAgD;AACvE,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,EAAV;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,EAAE,EAAEF,EADN;AAEE,IAAA,OAAO,EAAEG,IAAI,CAACE,OAFhB;AAGE,IAAA,OAAO,EAAEJ,IAHX;AAIE,IAAA,OAAO,EAAEG,OAAO,GAAGL,SAAH,GAAe,MAAM,CAAE,CAJzC;AAKE,IAAA,OAAO,EAAEI,IAAI,CAACG,OALhB;AAME,IAAA,IAAI,EAAEH,IAAI,CAACI,IANb;AAOE,IAAA,IAAI,EAAEJ,IAAI,CAACK,EAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CAdM;AAgBP,MAAMC,YAAY,GAAGZ,MAAM,CAACH,MAAD,CAAT;AAAA;AAAA;AAAA,aACdE,eAAe,CAACc,OAAQ;;;aAGf,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,YAAa;;;;;;;eAOvC,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,MAAN,CAAaC,OAAQ;;;GAXjC,CAAlB;AAiBAjB,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,SAAS,EAAEN,IADS;AAEpBO,EAAAA,EAAE,EAAER,MAFgB;AAGpBS,EAAAA,IAAI,EAAET,MAHc;AAIpBU,EAAAA,EAAE,EAAEV,MAJgB;AAKpBW,EAAAA,IAAI,EAAEX,MALc;AAMpBY,EAAAA,OAAO,EAAEb;AANW,CAAtB","sourcesContent":["/**\n * Navbar - Widgets\n */\n\n// React\nimport { bool, string, func } from 'prop-types'\n\n// UI\nimport { Button, Link, MEDIA_QUERY_MAX } from '../../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const NavButton = ({ closeMenu, id, name, to, type, visible }) => {\n  return (\n    <Link to={to} passHref>\n      <StyledButton\n        id={id}\n        context={type.context}\n        content={name}\n        onClick={visible ? closeMenu : () => {}}\n        outline={type.outline}\n        size={type.size}\n        type={type.as}\n      />\n    </Link>\n  )\n}\n\nconst StyledButton = styled(Button)`\n  ${MEDIA_QUERY_MAX.desktop`\n    background: none;\n    border: none;\n    color: ${({ theme }) => theme.NAVBAR.colourActive};\n    cursor: pointer;\n    font-size: 0.8125rem;\n    padding: 1rem 0.75rem;\n    width: 100%;\n\n    &:hover {\n      color: ${({ theme }) => theme.COLOUR.primary};\n      background: none;\n    }\n  `}\n`\n\nNavButton.propTypes = {\n  closeMenu: func,\n  id: string,\n  name: string,\n  to: string,\n  type: string,\n  visible: bool\n}\n"]},"metadata":{},"sourceType":"module"}