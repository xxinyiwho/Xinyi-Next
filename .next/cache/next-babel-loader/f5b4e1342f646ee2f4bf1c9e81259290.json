{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\n/**\n * API\n */\n// Axios\nimport axios from 'axios'; // UI\n\nimport { apiConfig } from \"../../../../../config\";\nexport var Api = {\n  init: function init() {\n    var mocker = require(\"../../../../../api/client.mock\");\n\n    var bearerToken = window.localStorage.getItem('bearerToken');\n\n    if (bearerToken) {\n      apiConfig.headers.Authorization = 'Bearer ' + bearerToken;\n    }\n\n    var http = axios.create(apiConfig);\n    mocker.apply(http);\n    return http;\n  },\n  get: function get(url, params) {\n    var http;\n    return _regeneratorRuntime.async(function get$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            http = Api.init();\n            return _context.abrupt(\"return\", http.get(url, {\n              params: params\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  },\n  post: function post(url, data) {\n    var http;\n    return _regeneratorRuntime.async(function post$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            http = Api.init();\n            return _context2.abrupt(\"return\", http.post(url, data));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  },\n  put: function put(url, data) {\n    var http;\n    return _regeneratorRuntime.async(function put$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            http = Api.init();\n            return _context3.abrupt(\"return\", http.put(url, data));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  },\n  \"delete\": function _delete(url) {\n    var http;\n    return _regeneratorRuntime.async(function _delete$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            http = Api.init();\n            return _context4.abrupt(\"return\", http[\"delete\"](url));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/services/api/api.js"],"names":["axios","apiConfig","Api","init","mocker","require","bearerToken","window","localStorage","getItem","headers","Authorization","http","create","apply","get","url","params","post","data","put"],"mappings":";;AAAA;;;AAIA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT;AAEA,OAAO,IAAMC,GAAG,GAAG;AACjBC,EAAAA,IAAI,EAAE,gBAAM;AACV,QAAMC,MAAM,GAAGC,OAAO,kCAAtB;;AAEA,QAAMC,WAAW,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAApB;;AAEA,QAAIH,WAAJ,EAAiB;AACfL,MAAAA,SAAS,CAACS,OAAV,CAAkBC,aAAlB,GAAkC,YAAYL,WAA9C;AACD;;AAED,QAAMM,IAAI,GAAGZ,KAAK,CAACa,MAAN,CAAaZ,SAAb,CAAb;AAEAG,IAAAA,MAAM,CAACU,KAAP,CAAaF,IAAb;AAEA,WAAOA,IAAP;AACD,GAfgB;AAiBjBG,EAAAA,GAAG,EAAE,aAAOC,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACGL,YAAAA,IADH,GACUV,GAAG,CAACC,IAAJ,EADV;AAAA,6CAEIS,IAAI,CAACG,GAAL,CAASC,GAAT,EAAc;AAAEC,cAAAA,MAAM,EAANA;AAAF,aAAd,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAjBY;AAsBjBC,EAAAA,IAAI,EAAE,cAAOF,GAAP,EAAYG,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACEP,YAAAA,IADF,GACSV,GAAG,CAACC,IAAJ,EADT;AAAA,8CAEGS,IAAI,CAACM,IAAL,CAAUF,GAAV,EAAeG,IAAf,CAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAtBW;AA2BjBC,EAAAA,GAAG,EAAE,aAAOJ,GAAP,EAAYG,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACGP,YAAAA,IADH,GACUV,GAAG,CAACC,IAAJ,EADV;AAAA,8CAEIS,IAAI,CAACQ,GAAL,CAASJ,GAAT,EAAcG,IAAd,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA3BY;AAgCjB,YAAQ,iBAAMH,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACAJ,YAAAA,IADA,GACOV,GAAG,CAACC,IAAJ,EADP;AAAA,8CAECS,IAAI,UAAJ,CAAYI,GAAZ,CAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCS,CAAZ","sourcesContent":["/**\n * API\n */\n\n// Axios\nimport axios from 'axios'\n\n// UI\nimport { apiConfig } from 'config'\n\nexport const Api = {\n  init: () => {\n    const mocker = require('api/client.mock')\n\n    const bearerToken = window.localStorage.getItem('bearerToken')\n\n    if (bearerToken) {\n      apiConfig.headers.Authorization = 'Bearer ' + bearerToken\n    }\n\n    const http = axios.create(apiConfig)\n\n    mocker.apply(http)\n\n    return http\n  },\n\n  get: async (url, params) => {\n    const http = Api.init()\n    return http.get(url, { params })\n  },\n\n  post: async (url, data) => {\n    const http = Api.init()\n    return http.post(url, data)\n  },\n\n  put: async (url, data) => {\n    const http = Api.init()\n    return http.put(url, data)\n  },\n\n  delete: async url => {\n    const http = Api.init()\n    return http.delete(url)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}