{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Services - Hooks  - useAxios\n *\n * @todo Dynamic mock ability\n * @todo default headers\n * @todo API url from config or ENV\n */\n// React\nimport { useState, useEffect } from 'react'; // Axios\n\nimport axios from 'axios'; // UI\n\nimport { apiConfig } from \"../../../../../config\";\nexport const useAxios = (url, params, initialValue) => {\n  if (!url) {\n    return {\n      data: {\n        isLoading: false\n      }\n    };\n  }\n\n  const {\n    0: data,\n    1: setData\n  } = useState(_objectSpread({}, initialValue, {\n    isLoading: true\n  }));\n  useEffect(() => {\n    const bearerToken = window.localStorage.getItem('bearerToken');\n\n    if (bearerToken) {\n      apiConfig.headers.Authorization = 'Bearer ' + bearerToken;\n    }\n\n    const http = axios.create(apiConfig); // Mock requests\n\n    const mocker = require(\"../../../../../api/client.mock\");\n\n    mocker.apply(http);\n\n    const fetchData = async () => {\n      try {\n        const response = await http.get(url, {\n          params\n        });\n\n        if (response.status === 200) {\n          setData(_objectSpread({}, response.data, {\n            isLoading: false\n          }));\n        }\n      } catch (e) {\n        const status = e.response ? e.response.status : 404;\n        setData({\n          status,\n          isLoading: false\n        });\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data\n  };\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/services/hooks/useAxios.js"],"names":["useState","useEffect","axios","apiConfig","useAxios","url","params","initialValue","data","isLoading","setData","bearerToken","window","localStorage","getItem","headers","Authorization","http","create","mocker","require","apply","fetchData","response","get","status","e"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;AAQA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,YAAd,KAA+B;AACrD,MAAI,CAACF,GAAL,EAAU;AACR,WAAO;AAAEG,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAR,KAAP;AACD;;AAED,QAAM;AAAA,OAACD,IAAD;AAAA,OAAOE;AAAP,MAAkBV,QAAQ,mBAAMO,YAAN;AAAoBE,IAAAA,SAAS,EAAE;AAA/B,KAAhC;AAEAR,EAAAA,SAAS,CACP,MAAM;AACJ,UAAMU,WAAW,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAApB;;AAEA,QAAIH,WAAJ,EAAiB;AACfR,MAAAA,SAAS,CAACY,OAAV,CAAkBC,aAAlB,GAAkC,YAAYL,WAA9C;AACD;;AAED,UAAMM,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaf,SAAb,CAAb,CAPI,CASJ;;AACA,UAAMgB,MAAM,GAAGC,OAAO,kCAAtB;;AACAD,IAAAA,MAAM,CAACE,KAAP,CAAaJ,IAAb;;AAEA,UAAMK,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASnB,GAAT,EAAc;AAAEC,UAAAA;AAAF,SAAd,CAAvB;;AACA,YAAIiB,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3Bf,UAAAA,OAAO,mBAAMa,QAAQ,CAACf,IAAf;AAAqBC,YAAAA,SAAS,EAAE;AAAhC,aAAP;AACD;AACF,OALD,CAKE,OAAOiB,CAAP,EAAU;AACV,cAAMD,MAAM,GAAGC,CAAC,CAACH,QAAF,GAAaG,CAAC,CAACH,QAAF,CAAWE,MAAxB,GAAiC,GAAhD;AACAf,QAAAA,OAAO,CAAC;AAAEe,UAAAA,MAAF;AAAUhB,UAAAA,SAAS,EAAE;AAArB,SAAD,CAAP;AACD;AACF,KAVD;;AAYAa,IAAAA,SAAS;AACV,GA3BM,EA4BP,CAACjB,GAAD,CA5BO,CAAT;AA+BA,SAAO;AAAEG,IAAAA;AAAF,GAAP;AACD,CAvCM","sourcesContent":["/**\n * Services - Hooks  - useAxios\n *\n * @todo Dynamic mock ability\n * @todo default headers\n * @todo API url from config or ENV\n */\n\n// React\nimport { useState, useEffect } from 'react'\n\n// Axios\nimport axios from 'axios'\n\n// UI\nimport { apiConfig } from 'config'\n\nexport const useAxios = (url, params, initialValue) => {\n  if (!url) {\n    return { data: { isLoading: false } }\n  }\n\n  const [data, setData] = useState({ ...initialValue, isLoading: true })\n\n  useEffect(\n    () => {\n      const bearerToken = window.localStorage.getItem('bearerToken')\n\n      if (bearerToken) {\n        apiConfig.headers.Authorization = 'Bearer ' + bearerToken\n      }\n\n      const http = axios.create(apiConfig)\n\n      // Mock requests\n      const mocker = require('api/client.mock')\n      mocker.apply(http)\n\n      const fetchData = async () => {\n        try {\n          const response = await http.get(url, { params })\n          if (response.status === 200) {\n            setData({ ...response.data, isLoading: false })\n          }\n        } catch (e) {\n          const status = e.response ? e.response.status : 404\n          setData({ status, isLoading: false })\n        }\n      }\n\n      fetchData()\n    },\n    [url]\n  )\n\n  return { data }\n}\n"]},"metadata":{},"sourceType":"module"}