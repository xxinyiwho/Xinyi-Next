{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/categories/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Blog - Categories\n * Displays two article cards from each category.\n *\n * - Only shows if homepage is not false\n * - Sorted and filtered by date.\n */\n// React\nimport { Fragment } from 'react';\nimport { any, object } from 'prop-types'; // UI\n\nimport { BlogCard, Column, Heading, Link, Row, slugify } from \"../../\"; // Style\n\nimport styled from 'styled-components';\nexport const BlogCategories = ({\n  articles,\n  config\n}) => {\n  const _uniqueCategories = () => {\n    const uniqueCategories = [...new _Set(articles.map(article => article.category))];\n    return uniqueCategories;\n  };\n\n  const _find = () => {\n    const categories = _uniqueCategories();\n\n    return categories.map(category => {\n      return articles.filter(article => {\n        return article.category === category && article.homepage !== false;\n      }).sort((a, b) => {\n        return new Date(b.date) - new Date(a.date);\n      }).slice(0, 2);\n    });\n  };\n\n  return __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, _find().map((articles, index) => __jsx(Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Link, {\n    to: {\n      as: `${config.path}/${slugify(articles[0].category)}`,\n      href: {\n        pathname: `${config.path}/category`,\n        query: {\n          category: slugify(articles[0].category)\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(StyledHeading, {\n    content: articles[0].category,\n    tag: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, articles.map((article, index) => __jsx(Column, {\n    key: index,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(BlogCard, {\n    article: article,\n    config: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))))));\n};\nconst StyledHeading = styled(Heading).withConfig({\n  displayName: \"categories__StyledHeading\",\n  componentId: \"sc-18etuho-0\"\n})([\"font-size:1.5rem;margin-top:2rem;text-align:center;&:hover{color:#00ccbc;}\"]);\nBlogCategories.propTypes = {\n  articles: any.isRequired,\n  config: object.isRequired\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/blog/categories/index.js"],"names":["Fragment","any","object","BlogCard","Column","Heading","Link","Row","slugify","styled","BlogCategories","articles","config","_uniqueCategories","uniqueCategories","map","article","category","_find","categories","filter","homepage","sort","a","b","Date","date","slice","index","as","path","href","pathname","query","StyledHeading","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * Blog - Categories\n * Displays two article cards from each category.\n *\n * - Only shows if homepage is not false\n * - Sorted and filtered by date.\n */\n\n// React\nimport { Fragment } from 'react'\nimport { any, object } from 'prop-types'\n\n// UI\nimport { BlogCard, Column, Heading, Link, Row, slugify } from '../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const BlogCategories = ({ articles, config }) => {\n  const _uniqueCategories = () => {\n    const uniqueCategories = [...new Set(articles.map(article => article.category))]\n    return uniqueCategories\n  }\n\n  const _find = () => {\n    const categories = _uniqueCategories()\n\n    return categories.map(category => {\n      return articles\n        .filter(article => {\n          return article.category === category && article.homepage !== false\n        })\n        .sort((a, b) => {\n          return new Date(b.date) - new Date(a.date)\n        })\n        .slice(0, 2)\n    })\n  }\n\n  return (\n    <section>\n      {_find().map((articles, index) => (\n        <Fragment key={index}>\n          <Link\n            to={{\n              as: `${config.path}/${slugify(articles[0].category)}`,\n              href: {\n                pathname: `${config.path}/category`,\n                query: {\n                  category: slugify(articles[0].category)\n                }\n              }\n            }}\n          >\n            <a>\n              <StyledHeading content={articles[0].category} tag='h2' />\n            </a>\n          </Link>\n\n          <Row>\n            {articles.map((article, index) => (\n              <Column key={index} md={6}>\n                <BlogCard article={article} config={config} />\n              </Column>\n            ))}\n          </Row>\n        </Fragment>\n      ))}\n    </section>\n  )\n}\n\nconst StyledHeading = styled(Heading)`\n  font-size: 1.5rem;\n  margin-top: 2rem;\n  text-align: center;\n\n  &:hover {\n    color: #00ccbc;\n  }\n`\n\nBlogCategories.propTypes = {\n  articles: any.isRequired,\n  config: object.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}