{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/dropdown/components/dropdown.js\";\nvar __jsx = React.createElement;\n\n/**\n * Dropdown\n */\n// React\nimport React, { useEffect, useRef, useState } from 'react';\nimport { array, bool, node, string, func } from 'prop-types'; // UI\n\nimport { DropdownMenu, Icon } from \"../../../\"; // Style\n\nimport styled from 'styled-components';\nexport var Dropdown = function Dropdown(_ref) {\n  var caret = _ref.caret,\n      className = _ref.className,\n      children = _ref.children,\n      items = _ref.items,\n      onChange = _ref.onChange,\n      position = _ref.position;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var node = useRef();\n\n  var handleClickAway = function handleClickAway(event) {\n    if (node.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(function () {\n    if (open) {\n      document.addEventListener('mousedown', handleClickAway);\n    } else {\n      document.removeEventListener('mousedown', handleClickAway);\n    }\n\n    return function () {\n      document.removeEventListener('mousedown', handleClickAway);\n    };\n  }, [open]);\n  return __jsx(StyledDropdown, {\n    className: className,\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(StyledToggle, {\n    className: \"\".concat(open ? 'dropdown--active' : '', \" dropdown--toggle\"),\n    onClick: function onClick() {\n      return setOpen(!open);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, children, caret && __jsx(Icon, {\n    \"aria-hidden\": \"true\",\n    className: \"dropdown--caret\",\n    icon: position === 'top' ? 'chevron-up' : 'chevron-down',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), open && __jsx(DropdownMenu, {\n    closeDropdown: function closeDropdown() {\n      return setOpen(false);\n    },\n    items: items,\n    position: position,\n    onItemClick: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\nvar StyledDropdown = styled.div.withConfig({\n  displayName: \"dropdown__StyledDropdown\",\n  componentId: \"sc-16lq186-0\"\n})([\"display:inline-block;position:relative;\"]);\nvar StyledToggle = styled.div.withConfig({\n  displayName: \"dropdown__StyledToggle\",\n  componentId: \"sc-16lq186-1\"\n})([\"color:\", \";cursor:pointer;display:inline-block;line-height:1.5;text-decoration:none;\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.NAVBAR.colourActive;\n});\nDropdown.propTypes = {\n  caret: bool,\n  children: node.isRequired,\n  className: string,\n  items: array.isRequired,\n  onChange: func,\n  position: string\n};\nDropdown.defaultProps = {\n  caret: true,\n  position: 'left'\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/dropdown/components/dropdown.js"],"names":["React","useEffect","useRef","useState","array","bool","node","string","func","DropdownMenu","Icon","styled","Dropdown","caret","className","children","items","onChange","position","open","setOpen","handleClickAway","event","current","contains","target","document","addEventListener","removeEventListener","StyledDropdown","div","StyledToggle","theme","NAVBAR","colourActive","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Dropdown\n */\n\n// React\nimport React, { useEffect, useRef, useState } from 'react'\nimport { array, bool, node, string, func } from 'prop-types'\n\n// UI\nimport { DropdownMenu, Icon } from '../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const Dropdown = ({ caret, className, children, items, onChange, position }) => {\n  const [open, setOpen] = useState(false)\n  const node = useRef()\n\n  const handleClickAway = event => {\n    if (node.current.contains(event.target)) {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  useEffect(() => {\n    if (open) {\n      document.addEventListener('mousedown', handleClickAway)\n    } else {\n      document.removeEventListener('mousedown', handleClickAway)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickAway)\n    }\n  }, [open])\n\n  return (\n    <StyledDropdown className={className} ref={node}>\n      <StyledToggle\n        className={`${open ? 'dropdown--active' : ''} dropdown--toggle`}\n        onClick={() => setOpen(!open)}\n      >\n        {children}\n\n        {caret && (\n          <Icon\n            aria-hidden='true'\n            className='dropdown--caret'\n            icon={position === 'top' ? 'chevron-up' : 'chevron-down'}\n          />\n        )}\n      </StyledToggle>\n\n      {open && (\n        <DropdownMenu\n          closeDropdown={() => setOpen(false)}\n          items={items}\n          position={position}\n          onItemClick={onChange}\n        />\n      )}\n    </StyledDropdown>\n  )\n}\n\nconst StyledDropdown = styled.div`\n  display: inline-block;\n  position: relative;\n`\n\nconst StyledToggle = styled.div`\n  color: ${({ theme }) => theme.NAVBAR.colourActive};\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1.5;\n  text-decoration: none;\n`\n\nDropdown.propTypes = {\n  caret: bool,\n  children: node.isRequired,\n  className: string,\n  items: array.isRequired,\n  onChange: func,\n  position: string\n}\n\nDropdown.defaultProps = {\n  caret: true,\n  position: 'left'\n}\n"]},"metadata":{},"sourceType":"module"}