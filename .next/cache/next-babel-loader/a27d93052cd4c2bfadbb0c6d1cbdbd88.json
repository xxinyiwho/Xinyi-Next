{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/list/components/list.js\";\nvar __jsx = React.createElement;\n\n/**\n * List\n */\n// React\nimport React from 'react';\nimport { bool, node, object, string } from 'prop-types'; // Style\n\nimport styled, { css } from 'styled-components';\nexport const List = ({\n  border,\n  children,\n  className,\n  flush,\n  inline,\n  group,\n  style,\n  unstyled\n}) => {\n  const renderListItems = () => React.Children.map(children, child => React.cloneElement(child, {\n    border: border,\n    flush: flush,\n    group: group\n  }));\n\n  return __jsx(StyledList, {\n    border: border,\n    className: className,\n    flush: flush,\n    group: group,\n    inline: inline,\n    role: \"list\",\n    style: style,\n    unstyled: unstyled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, renderListItems());\n};\nconst groupStyles = css([\"margin:-1px;\"]);\nconst inlineStyles = css([\"align-items:center;display:inline-flex;\"]);\nconst unstyledStyles = css([\"list-style:none;padding-left:0;\"]);\nconst StyledList = styled.ul.withConfig({\n  displayName: \"list__StyledList\",\n  componentId: \"eakhne-0\"\n})([\"\", \" \", \" \", \"\"], ({\n  group\n}) => group ? groupStyles : '', ({\n  inline\n}) => inline ? inlineStyles : '', ({\n  unstyled,\n  border,\n  group,\n  flush\n}) => unstyled || border || flush || group ? unstyledStyles : '');\nList.propTypes = {\n  border: bool,\n  children: node.isRequired,\n  className: string,\n  inline: bool,\n  flush: bool,\n  group: bool,\n  style: object,\n  unstyled: bool\n};\nList.defaultProps = {\n  className: '',\n  inline: false,\n  group: false,\n  unstyled: false\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/list/components/list.js"],"names":["React","bool","node","object","string","styled","css","List","border","children","className","flush","inline","group","style","unstyled","renderListItems","Children","map","child","cloneElement","groupStyles","inlineStyles","unstyledStyles","StyledList","ul","propTypes","isRequired","defaultProps"],"mappings":";;;AAAA;;;AAIA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,MAA7B,QAA2C,YAA3C,C,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA,KAA/B;AAAsCC,EAAAA,MAAtC;AAA8CC,EAAAA,KAA9C;AAAqDC,EAAAA,KAArD;AAA4DC,EAAAA;AAA5D,CAAD,KAA4E;AAC9F,QAAMC,eAAe,GAAG,MACtBhB,KAAK,CAACiB,QAAN,CAAeC,GAAf,CAAmBT,QAAnB,EAA6BU,KAAK,IAChCnB,KAAK,CAACoB,YAAN,CAAmBD,KAAnB,EAA0B;AACxBX,IAAAA,MAAM,EAAEA,MADgB;AAExBG,IAAAA,KAAK,EAAEA,KAFiB;AAGxBE,IAAAA,KAAK,EAAEA;AAHiB,GAA1B,CADF,CADF;;AASA,SACE,MAAC,UAAD;AACE,IAAA,MAAM,EAAEL,MADV;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,MAAM,EAAED,MALV;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,KAAK,EAAEE,KAPT;AAQE,IAAA,QAAQ,EAAEC,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGC,eAAe,EAVlB,CADF;AAcD,CAxBM;AA0BP,MAAMK,WAAW,GAAGf,GAAH,kBAAjB;AAIA,MAAMgB,YAAY,GAAGhB,GAAH,6CAAlB;AAKA,MAAMiB,cAAc,GAAGjB,GAAH,qCAApB;AAKA,MAAMkB,UAAU,GAAGnB,MAAM,CAACoB,EAAV;AAAA;AAAA;AAAA,uBACZ,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAAgBA,KAAK,GAAGQ,WAAH,GAAiB,EAD1B,EAEZ,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAiBA,MAAM,GAAGU,YAAH,GAAkB,EAF7B,EAGZ,CAAC;AAAEP,EAAAA,QAAF;AAAYP,EAAAA,MAAZ;AAAoBK,EAAAA,KAApB;AAA2BF,EAAAA;AAA3B,CAAD,KACAI,QAAQ,IAAIP,MAAZ,IAAsBG,KAAtB,IAA+BE,KAA/B,GAAuCU,cAAvC,GAAwD,EAJ5C,CAAhB;AAOAhB,IAAI,CAACmB,SAAL,GAAiB;AACflB,EAAAA,MAAM,EAAEP,IADO;AAEfQ,EAAAA,QAAQ,EAAEP,IAAI,CAACyB,UAFA;AAGfjB,EAAAA,SAAS,EAAEN,MAHI;AAIfQ,EAAAA,MAAM,EAAEX,IAJO;AAKfU,EAAAA,KAAK,EAAEV,IALQ;AAMfY,EAAAA,KAAK,EAAEZ,IANQ;AAOfa,EAAAA,KAAK,EAAEX,MAPQ;AAQfY,EAAAA,QAAQ,EAAEd;AARK,CAAjB;AAWAM,IAAI,CAACqB,YAAL,GAAoB;AAClBlB,EAAAA,SAAS,EAAE,EADO;AAElBE,EAAAA,MAAM,EAAE,KAFU;AAGlBC,EAAAA,KAAK,EAAE,KAHW;AAIlBE,EAAAA,QAAQ,EAAE;AAJQ,CAApB","sourcesContent":["/**\n * List\n */\n\n// React\nimport React from 'react'\nimport { bool, node, object, string } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const List = ({ border, children, className, flush, inline, group, style, unstyled }) => {\n  const renderListItems = () =>\n    React.Children.map(children, child =>\n      React.cloneElement(child, {\n        border: border,\n        flush: flush,\n        group: group\n      })\n    )\n\n  return (\n    <StyledList\n      border={border}\n      className={className}\n      flush={flush}\n      group={group}\n      inline={inline}\n      role='list'\n      style={style}\n      unstyled={unstyled}\n    >\n      {renderListItems()}\n    </StyledList>\n  )\n}\n\nconst groupStyles = css`\n  margin: -1px;\n`\n\nconst inlineStyles = css`\n  align-items: center;\n  display: inline-flex;\n`\n\nconst unstyledStyles = css`\n  list-style: none;\n  padding-left: 0;\n`\n\nconst StyledList = styled.ul`\n  ${({ group }) => (group ? groupStyles : '')}\n  ${({ inline }) => (inline ? inlineStyles : '')}\n  ${({ unstyled, border, group, flush }) =>\n    unstyled || border || flush || group ? unstyledStyles : ''}\n`\n\nList.propTypes = {\n  border: bool,\n  children: node.isRequired,\n  className: string,\n  inline: bool,\n  flush: bool,\n  group: bool,\n  style: object,\n  unstyled: bool\n}\n\nList.defaultProps = {\n  className: '',\n  inline: false,\n  group: false,\n  unstyled: false\n}\n"]},"metadata":{},"sourceType":"module"}