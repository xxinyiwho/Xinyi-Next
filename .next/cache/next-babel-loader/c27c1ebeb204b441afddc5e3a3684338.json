{"ast":null,"code":"// React\nimport { useEffect, useState } from 'react'; // Services\n\nimport { GeoCoder } from \"../google/geocoder\";\nexport const useGeoCoder = ({\n  address,\n  apiKey,\n  city,\n  language,\n  region\n}) => {\n  const {\n    0: coordinates,\n    1: setCoordinates\n  } = useState({\n    lat: '',\n    lng: ''\n  });\n  useEffect(() => {\n    const getCoordinates = async () => {\n      const geo = new GeoCoder({\n        apiKey,\n        language,\n        region\n      });\n      const coordinates = await geo.fromAddress({\n        address,\n        city\n      });\n      setCoordinates(coordinates);\n    };\n\n    getCoordinates();\n  }, []);\n  return coordinates;\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/services/hooks/useGeoCoder.js"],"names":["useEffect","useState","GeoCoder","useGeoCoder","address","apiKey","city","language","region","coordinates","setCoordinates","lat","lng","getCoordinates","geo","fromAddress"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,SAASC,QAAT;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,CAAD,KAAiD;AAC1E,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC;AAAEU,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GAAD,CAA9C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,cAAc,GAAG,YAAY;AACjC,YAAMC,GAAG,GAAG,IAAIZ,QAAJ,CAAa;AACvBG,QAAAA,MADuB;AAEvBE,QAAAA,QAFuB;AAGvBC,QAAAA;AAHuB,OAAb,CAAZ;AAMA,YAAMC,WAAW,GAAG,MAAMK,GAAG,CAACC,WAAJ,CAAgB;AAAEX,QAAAA,OAAF;AAAWE,QAAAA;AAAX,OAAhB,CAA1B;AACAI,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD,KATD;;AAUAI,IAAAA,cAAc;AACf,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOJ,WAAP;AACD,CAlBM","sourcesContent":["// React\nimport { useEffect, useState } from 'react'\n\n// Services\nimport { GeoCoder } from '../google/geocoder'\n\nexport const useGeoCoder = ({ address, apiKey, city, language, region }) => {\n  const [coordinates, setCoordinates] = useState({ lat: '', lng: '' })\n\n  useEffect(() => {\n    const getCoordinates = async () => {\n      const geo = new GeoCoder({\n        apiKey,\n        language,\n        region\n      })\n\n      const coordinates = await geo.fromAddress({ address, city })\n      setCoordinates(coordinates)\n    }\n    getCoordinates()\n  }, [])\n\n  return coordinates\n}\n"]},"metadata":{},"sourceType":"module"}