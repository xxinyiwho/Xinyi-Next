{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/organisms/emailChange/index.js\";\nvar __jsx = React.createElement;\n\n/**\n * Email Change\n */\n// React\nimport React, { useState } from 'react';\nimport { bool } from 'prop-types'; // useForm\n\nimport useForm from 'react-hook-form'; // UI\n\nimport { Alert, Button, FormField, FormForm, FormLabel, PageHeading } from \"../../\";\nexport const EmailChange = ({\n  showPlaceholder\n}) => {\n  const {\n    errors,\n    formState,\n    handleSubmit,\n    register\n  } = useForm({\n    mode: 'onChange'\n  });\n  const {\n    0: error\n  } = useState(false);\n\n  const submit = data => {\n    const {\n      email\n    } = data;\n    console.log(email);\n  };\n\n  const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return __jsx(React.Fragment, null, __jsx(PageHeading, {\n    center: true,\n    heading: \"Email Change\",\n    divider: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), error && __jsx(Alert, {\n    content: error.message,\n    context: \"warning\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(FormForm, {\n    handleSubmit: handleSubmit(submit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(FormLabel, {\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(FormField, {\n    autoFocus: true,\n    errors: errors,\n    name: \"email\",\n    placeholder: showPlaceholder ? 'Email' : '',\n    regExp: pattern,\n    register: register,\n    required: \"This is required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), __jsx(Button, {\n    block: true,\n    content: \"Submit\",\n    context: \"primary\",\n    disabled: !formState.isValid,\n    size: \"lg\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"We will send you a re-validation email after this. Please also check your spam folder.\")));\n};\nEmailChange.propTypes = {\n  showPlaceholder: bool\n};\nEmailChange.defaultProps = {\n  showPlaceholder: false\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/organisms/emailChange/index.js"],"names":["React","useState","bool","useForm","Alert","Button","FormField","FormForm","FormLabel","PageHeading","EmailChange","showPlaceholder","errors","formState","handleSubmit","register","mode","error","submit","data","email","console","log","pattern","message","color","isValid","propTypes","defaultProps"],"mappings":";;;AAAA;;;AAIA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,YAArB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,SAA7C,EAAwDC,WAAxD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAClD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA;AAAnC,MAAgDZ,OAAO,CAAC;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA7D;AACA,QAAM;AAAA,OAACC;AAAD,MAAUhB,QAAQ,CAAC,KAAD,CAAxB;;AAEA,QAAMiB,MAAM,GAAGC,IAAI,IAAI;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,IAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAHD;;AAKA,QAAMG,OAAO,GAAG,uJAAhB;AAEA,SACE,4BACE,MAAC,WAAD;AAAa,IAAA,MAAM,MAAnB;AAAoB,IAAA,OAAO,EAAC,cAA5B;AAA2C,IAAA,OAAO,EAAE,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGN,KAAK,IAAI,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,KAAK,CAACO,OAAtB;AAA+B,IAAA,OAAO,EAAC,SAAvC;AAAiD,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,EAKE,MAAC,QAAD;AAAU,IAAA,YAAY,EAAEX,YAAY,CAACI,MAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAEN,MAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAED,eAAe,GAAG,OAAH,GAAa,EAJ3C;AAKE,IAAA,MAAM,EAAEY,OALV;AAME,IAAA,QAAQ,EAAER,QANZ;AAOE,IAAA,QAAQ,EAAC,kBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAaE,MAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,QAAQ,EAAE,CAACF,SAAS,CAACa,OAJvB;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAtBF,CALF,CADF;AAkCD,CA7CM;AA+CPhB,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,eAAe,EAAET;AADK,CAAxB;AAIAQ,WAAW,CAACkB,YAAZ,GAA2B;AACzBjB,EAAAA,eAAe,EAAE;AADQ,CAA3B","sourcesContent":["/**\n * Email Change\n */\n\n// React\nimport React, { useState } from 'react'\nimport { bool } from 'prop-types'\n\n// useForm\nimport useForm from 'react-hook-form'\n\n// UI\nimport { Alert, Button, FormField, FormForm, FormLabel, PageHeading } from '../../'\n\nexport const EmailChange = ({ showPlaceholder }) => {\n  const { errors, formState, handleSubmit, register } = useForm({ mode: 'onChange' })\n  const [error] = useState(false)\n\n  const submit = data => {\n    const { email } = data\n    console.log(email)\n  }\n\n  const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n  return (\n    <>\n      <PageHeading center heading='Email Change' divider={false} />\n\n      {error && <Alert content={error.message} context='warning' style={{ color: '#fff' }} />}\n\n      <FormForm handleSubmit={handleSubmit(submit)}>\n        <FormLabel label='Email'>\n          <FormField\n            autoFocus\n            errors={errors}\n            name='email'\n            placeholder={showPlaceholder ? 'Email' : ''}\n            regExp={pattern}\n            register={register}\n            required='This is required'\n          />\n        </FormLabel>\n\n        <Button\n          block\n          content='Submit'\n          context='primary'\n          disabled={!formState.isValid}\n          size='lg'\n          type='submit'\n        />\n\n        <p>\n          We will send you a re-validation email after this. Please also check your spam folder.\n        </p>\n      </FormForm>\n    </>\n  )\n}\n\nEmailChange.propTypes = {\n  showPlaceholder: bool\n}\n\nEmailChange.defaultProps = {\n  showPlaceholder: false\n}\n"]},"metadata":{},"sourceType":"module"}