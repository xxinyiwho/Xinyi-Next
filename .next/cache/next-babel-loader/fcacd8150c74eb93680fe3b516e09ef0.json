{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/services/authentication/providers/userProvider.js\";\nvar __jsx = React.createElement;\n\n/**\n * Authentication - Providers - User\n * Provides context, state and hooks into managing a user\n *\n * @see https://reacttricks.com/sharing-global-data-in-next-with-custom-app-and-usecontext-hook/\n */\n// React\nimport React, { useEffect, useState } from 'react'; // Next\n\nimport Router from 'next/router'; // UI\n\nimport { Api, useNotifications, UserContext, validateToken } from \"../../../\";\nexport const UserProvider = ({\n  children,\n  jwtConfig\n}) => {\n  const {\n    0: accessToken,\n    1: setAccessToken\n  } = useState(null);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    data: {\n      notifications\n    },\n    fetchNotifications\n  } = useNotifications('messages', {\n    active: true\n  }, 25);\n  useEffect(() => {\n    const bearerToken = window.localStorage.getItem('bearerToken');\n\n    if (bearerToken) {\n      try {\n        const tokenData = validateToken(bearerToken, jwtConfig);\n\n        if (tokenData.user) {\n          setUser(tokenData.user);\n        }\n      } catch (e) {\n        // Invalid token\n        window.localStorage.removeItem('bearerToken');\n        setAccessToken(null);\n        setUser(null);\n      }\n\n      setIsLoading(false);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const signIn = async (provider, username, password, callback) => {\n    let user, token;\n\n    try {\n      const {\n        data\n      } = await Api.post('auth', {\n        username,\n        password\n      });\n      user = data.user;\n      token = data.token;\n    } catch (err) {\n      const {\n        error\n      } = err.response.data;\n      callback(new Error(error));\n    }\n\n    const isAuthed = user && token;\n\n    if (isAuthed) {\n      setUser(user);\n      window.localStorage.setItem('bearerToken', token);\n      setAccessToken(token);\n      Router.push('/dashboard');\n    }\n  };\n\n  const signOut = () => {\n    window.localStorage.removeItem('bearerToken');\n    window.localStorage.removeItem('active-notifications');\n    setAccessToken(null);\n    setUser(null);\n    Router.push('/account/sign-in');\n  };\n\n  const authorise = condition => {\n    if (!condition(user)) {\n      Router.push('/account/sign-in');\n      return false;\n    }\n\n    return true;\n  };\n\n  return !isLoading && __jsx(UserContext.Provider, {\n    value: {\n      accessToken,\n      authorise,\n      fetchNotifications,\n      notifications,\n      signIn,\n      signOut,\n      user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/services/authentication/providers/userProvider.js"],"names":["React","useEffect","useState","Router","Api","useNotifications","UserContext","validateToken","UserProvider","children","jwtConfig","accessToken","setAccessToken","user","setUser","isLoading","setIsLoading","data","notifications","fetchNotifications","active","bearerToken","window","localStorage","getItem","tokenData","e","removeItem","signIn","provider","username","password","callback","token","post","err","error","response","Error","isAuthed","setItem","push","signOut","authorise","condition"],"mappings":"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","sourcesContent":["/**\n * Authentication - Providers - User\n * Provides context, state and hooks into managing a user\n *\n * @see https://reacttricks.com/sharing-global-data-in-next-with-custom-app-and-usecontext-hook/\n */\n\n// React\nimport React, { useEffect, useState } from 'react'\n\n// Next\nimport Router from 'next/router'\n\n// UI\nimport { Api, useNotifications, UserContext, validateToken } from '../../../'\n\nexport const UserProvider = ({ children, jwtConfig }) => {\n  const [accessToken, setAccessToken] = useState(null)\n  const [user, setUser] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const {\n    data: { notifications },\n    fetchNotifications\n  } = useNotifications('messages', { active: true }, 25)\n\n  useEffect(() => {\n    const bearerToken = window.localStorage.getItem('bearerToken')\n\n    if (bearerToken) {\n      try {\n        const tokenData = validateToken(bearerToken, jwtConfig)\n        if (tokenData.user) {\n          setUser(tokenData.user)\n        }\n      } catch (e) {\n        // Invalid token\n        window.localStorage.removeItem('bearerToken')\n        setAccessToken(null)\n        setUser(null)\n      }\n\n      setIsLoading(false)\n    } else {\n      setIsLoading(false)\n    }\n  }, [])\n\n  const signIn = async (provider, username, password, callback) => {\n    let user, token\n    try {\n      const { data } = await Api.post('auth', { username, password })\n      user = data.user\n      token = data.token\n    } catch (err) {\n      const { error } = err.response.data\n      callback(new Error(error))\n    }\n\n    const isAuthed = user && token\n    if (isAuthed) {\n      setUser(user)\n      window.localStorage.setItem('bearerToken', token)\n      setAccessToken(token)\n      Router.push('/dashboard')\n    }\n  }\n\n  const signOut = () => {\n    window.localStorage.removeItem('bearerToken')\n    window.localStorage.removeItem('active-notifications')\n\n    setAccessToken(null)\n    setUser(null)\n\n    Router.push('/account/sign-in')\n  }\n\n  const authorise = condition => {\n    if (!condition(user)) {\n      Router.push('/account/sign-in')\n      return false\n    }\n    return true\n  }\n\n  return (\n    !isLoading && (\n      <UserContext.Provider\n        value={{\n          accessToken,\n          authorise,\n          fetchNotifications,\n          notifications,\n          signIn,\n          signOut,\n          user\n        }}\n      >\n        {children}\n      </UserContext.Provider>\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}