{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/widgets/link.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Navbar - Widgets\n */\n// React\nimport { bool, string, func } from 'prop-types'; // UI\n\nimport { Link } from \"../../../../\"; // Style\n\nimport styled from 'styled-components';\nexport var NavLink = function NavLink(_ref) {\n  var active = _ref.active,\n      closeMenu = _ref.closeMenu,\n      id = _ref.id,\n      name = _ref.name,\n      onClick = _ref.onClick,\n      to = _ref.to,\n      type = _ref.type,\n      visible = _ref.visible;\n\n  var handleClick = function handleClick() {\n    visible && closeMenu();\n    onClick && onClick();\n  };\n\n  if (type && (!active || active !== type)) {\n    return;\n  }\n\n  return __jsx(Link, {\n    to: to,\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(StyledLink, {\n    id: id,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, name));\n};\nvar StyledLink = styled.a.withConfig({\n  displayName: \"link__StyledLink\",\n  componentId: \"bqpfzh-0\"\n})([\"align-items:center;color:\", \";display:flex;flex:1;justify-content:center;padding:1rem 0.75rem;&:hover{color:\", \";}\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.NAVBAR.colourActive;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.NAVBAR.colourActive;\n});\nNavLink.propTypes = {\n  closeMenu: func,\n  id: string,\n  name: string,\n  to: string,\n  type: string,\n  visible: bool\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/widgets/link.js"],"names":["bool","string","func","Link","styled","NavLink","active","closeMenu","id","name","onClick","to","type","visible","handleClick","StyledLink","a","theme","NAVBAR","colourActive","propTypes"],"mappings":";;;;AAAA;;;AAIA;AACA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,IAAT,uB,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiE;AAAA,MAA9DC,MAA8D,QAA9DA,MAA8D;AAAA,MAAtDC,SAAsD,QAAtDA,SAAsD;AAAA,MAA3CC,EAA2C,QAA3CA,EAA2C;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;AAAA,MAAxBC,EAAwB,QAAxBA,EAAwB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACtF,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,OAAO,IAAIN,SAAS,EAApB;AACAG,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD,GAHD;;AAKA,MAAIE,IAAI,KAAK,CAACN,MAAD,IAAWA,MAAM,KAAKM,IAA3B,CAAR,EAA0C;AACxC;AACD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAED,EAAV;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,EAAE,EAAEH,EAAhB;AAAoB,IAAA,OAAO,EAAEM,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IADH,CADF,CADF;AAOD,CAjBM;AAmBP,IAAMM,UAAU,GAAGX,MAAM,CAACY,CAAV;AAAA;AAAA;AAAA,2HAEL;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,YAA5B;AAAA,CAFK,EASH;AAAA,MAAGF,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,YAA5B;AAAA,CATG,CAAhB;AAaAd,OAAO,CAACe,SAAR,GAAoB;AAClBb,EAAAA,SAAS,EAAEL,IADO;AAElBM,EAAAA,EAAE,EAAEP,MAFc;AAGlBQ,EAAAA,IAAI,EAAER,MAHY;AAIlBU,EAAAA,EAAE,EAAEV,MAJc;AAKlBW,EAAAA,IAAI,EAAEX,MALY;AAMlBY,EAAAA,OAAO,EAAEb;AANS,CAApB","sourcesContent":["/**\n * Navbar - Widgets\n */\n\n// React\nimport { bool, string, func } from 'prop-types'\n\n// UI\nimport { Link } from '../../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const NavLink = ({ active, closeMenu, id, name, onClick, to, type, visible }) => {\n  const handleClick = () => {\n    visible && closeMenu()\n    onClick && onClick()\n  }\n\n  if (type && (!active || active !== type)) {\n    return\n  }\n\n  return (\n    <Link to={to} passHref>\n      <StyledLink id={id} onClick={handleClick}>\n        {name}\n      </StyledLink>\n    </Link>\n  )\n}\n\nconst StyledLink = styled.a`\n  align-items: center;\n  color: ${({ theme }) => theme.NAVBAR.colourActive};\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  padding: 1rem 0.75rem;\n\n  &:hover {\n    color: ${({ theme }) => theme.NAVBAR.colourActive};\n  }\n`\n\nNavLink.propTypes = {\n  closeMenu: func,\n  id: string,\n  name: string,\n  to: string,\n  type: string,\n  visible: bool\n}\n"]},"metadata":{},"sourceType":"module"}