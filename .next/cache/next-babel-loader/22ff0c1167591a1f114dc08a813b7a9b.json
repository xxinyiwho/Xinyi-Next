{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/accordion/components/accordion.js\";\nvar __jsx = React.createElement;\n\n/**\n * Accordion\n */\nimport React, { useState, Children, cloneElement } from 'react';\nimport { array, node, object, string, bool } from 'prop-types';\nimport styled from 'styled-components';\nimport { AccordionItem } from \"../../\";\n\nconst renderItem = ({\n  body,\n  context,\n  title\n}, index, current, handleCurrent) => {\n  return __jsx(AccordionItem, {\n    key: index,\n    context: context,\n    open: current.includes(index),\n    title: title,\n    handleOpen: () => handleCurrent(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, body);\n};\n\nexport const Accordion = ({\n  children,\n  className,\n  data,\n  style,\n  closeOthersOnOpen\n}) => {\n  const initialOpen = children ? children.findIndex(_ => _.props.open) : data.findIndex(_ => _.open);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(initialOpen > -1 ? [initialOpen] : []);\n\n  const handleCurrent = index => {\n    setCurrent(prev => {\n      let temp = [];\n\n      if (closeOthersOnOpen && !prev.includes(index)) {\n        temp = [index];\n      } else {\n        if (prev.includes(index)) temp = prev.filter(_ => _ !== index);else temp = [...prev, index];\n      }\n\n      return temp;\n    });\n  };\n\n  return __jsx(StyledAccordion, {\n    className: className,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, children ? Children.map(children, (child, index) => {\n    return cloneElement(child, {\n      index,\n      open: current.includes(index),\n      handleOpen: index => handleCurrent(index)\n    });\n  }) : data.map((item, index) => renderItem(item, index, current, handleCurrent)));\n};\nconst StyledAccordion = styled.div.withConfig({\n  displayName: \"accordion__StyledAccordion\",\n  componentId: \"nb6pvb-0\"\n})([\"border:1px solid rgba(0,0,0,0.125);border-radius:0.25rem;\"]);\nAccordion.propTypes = {\n  children: node,\n  className: string,\n  closeOthersOnOpen: bool,\n  data: array,\n  style: object\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/accordion/components/accordion.js"],"names":["React","useState","Children","cloneElement","array","node","object","string","bool","styled","AccordionItem","renderItem","body","context","title","index","current","handleCurrent","includes","Accordion","children","className","data","style","closeOthersOnOpen","initialOpen","findIndex","_","props","open","setCurrent","prev","temp","filter","map","child","handleOpen","item","StyledAccordion","div","propTypes"],"mappings":"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","sourcesContent":["/**\n * Accordion\n */\n\nimport React, { useState, Children, cloneElement } from 'react'\n\nimport { array, node, object, string, bool } from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { AccordionItem } from '../../'\n\nconst renderItem = ({ body, context, title }, index, current, handleCurrent) => {\n  return (\n    <AccordionItem\n      key={index}\n      context={context}\n      open={current.includes(index)}\n      title={title}\n      handleOpen={() => handleCurrent(index)}\n    >\n      {body}\n    </AccordionItem>\n  )\n}\n\nexport const Accordion = ({ children, className, data, style, closeOthersOnOpen }) => {\n  const initialOpen = children ? children.findIndex(_ => _.props.open) : data.findIndex(_ => _.open)\n  const [current, setCurrent] = useState(initialOpen > -1 ? [initialOpen] : [])\n\n  const handleCurrent = index => {\n    setCurrent(prev => {\n      let temp = []\n      if (closeOthersOnOpen && !prev.includes(index)) {\n        temp = [index]\n      } else {\n        if (prev.includes(index)) temp = prev.filter(_ => _ !== index)\n        else temp = [...prev, index]\n      }\n      return temp\n    })\n  }\n\n  return (\n    <StyledAccordion className={className} style={style}>\n      {children\n        ? Children.map(children, (child, index) => {\n            return cloneElement(child, {\n              index,\n              open: current.includes(index),\n              handleOpen: index => handleCurrent(index)\n            })\n          })\n        : data.map((item, index) => renderItem(item, index, current, handleCurrent))}\n    </StyledAccordion>\n  )\n}\n\nconst StyledAccordion = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 0.25rem;\n`\n\nAccordion.propTypes = {\n  children: node,\n  className: string,\n  closeOthersOnOpen: bool,\n  data: array,\n  style: object\n}\n"]},"metadata":{},"sourceType":"module"}