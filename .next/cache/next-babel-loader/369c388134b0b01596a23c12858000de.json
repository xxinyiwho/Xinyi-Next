{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/navbar/navbar.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: none;\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    flex-flow: row nowrap;\\n    height: \", \";\\n    justify-content: flex-start;\\n    padding: 0 3rem;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Navbar - Navbar\n */\n// React\nimport React, { useState } from 'react';\nimport { bool, object, objectOf, oneOfType, number, string } from 'prop-types'; // UI\n\nimport { Brand, Contained, Toggler, Widgets } from \"../internal\";\nimport { MEDIA_QUERY } from \"../../../../\"; // Style\n\nimport styled from 'styled-components';\nexport var Navbar = function Navbar(_ref) {\n  var brand = _ref.brand,\n      contained = _ref.contained,\n      type = _ref.type,\n      style = _ref.style,\n      widgets = _ref.widgets;\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var handleClick = function handleClick() {\n    setVisible(!visible);\n  };\n\n  var Content = function Content() {\n    return __jsx(React.Fragment, null, brand && __jsx(Brand, {\n      brand: brand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), __jsx(Toggler, {\n      handleMenuClick: handleClick,\n      visible: visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), widgets && __jsx(Widgets, {\n      brand: brand,\n      closeMenu: handleClick,\n      type: type,\n      visible: visible,\n      widgets: widgets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(StyledNav, {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, contained ? __jsx(Contained, {\n    content: Content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(StyledOverlay, {\n    hidden: !visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\nvar StyledNav = styled.nav.withConfig({\n  displayName: \"navbar__StyledNav\",\n  componentId: \"sc-14j5bwx-0\"\n})([\"background-color:\", \";border-top:0.25rem solid \", \";display:flex;flex-wrap:wrap;justify-content:space-between;padding:0;position:relative;z-index:200;\", \"\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.NAVBAR.background;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.COLOUR.primary;\n}, MEDIA_QUERY.desktop(_templateObject(), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.NAVBAR.height;\n}));\nvar StyledOverlay = styled.div.withConfig({\n  displayName: \"navbar__StyledOverlay\",\n  componentId: \"sc-14j5bwx-1\"\n})([\"background-color:rgba(255,255,255,0.85);bottom:0;cursor:pointer;height:100%;position:fixed;left:0;right:0;top:0;transition-property:width;transition-duration:0.2s;width:100%;z-index:99;\", \"\"], MEDIA_QUERY.desktop(_templateObject2()));\nNavbar.propTypes = {\n  brand: string,\n  contained: bool,\n  links: object,\n  notifications: object,\n  user: object,\n  style: objectOf(oneOfType([number, string])),\n  type: string\n};\nNavbar.defaultProps = {\n  brand: '',\n  links: {}\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/molecules/navbar/components/navbar/navbar.js"],"names":["React","useState","bool","object","objectOf","oneOfType","number","string","Brand","Contained","Toggler","Widgets","MEDIA_QUERY","styled","Navbar","brand","contained","type","style","widgets","visible","setVisible","handleClick","Content","StyledNav","nav","theme","NAVBAR","background","COLOUR","primary","desktop","height","StyledOverlay","div","propTypes","links","notifications","user","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Navbar - Navbar\n */\n\n// React\nimport React, { useState } from 'react'\nimport { bool, object, objectOf, oneOfType, number, string } from 'prop-types'\n\n// UI\nimport { Brand, Contained, Toggler, Widgets } from '../internal'\nimport { MEDIA_QUERY } from '../../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const Navbar = ({ brand, contained, type, style, widgets }) => {\n  const [visible, setVisible] = useState(false)\n\n  const handleClick = () => {\n    setVisible(!visible)\n  }\n\n  const Content = () => {\n    return (\n      <>\n        {brand && <Brand brand={brand} />}\n\n        <Toggler handleMenuClick={handleClick} visible={visible} />\n\n        {widgets && (\n          <Widgets\n            brand={brand}\n            closeMenu={handleClick}\n            type={type}\n            visible={visible}\n            widgets={widgets}\n          />\n        )}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <StyledNav style={style}>\n        {contained ? <Contained content={Content} /> : <Content />}\n      </StyledNav>\n\n      <StyledOverlay hidden={!visible} />\n    </>\n  )\n}\n\nconst StyledNav = styled.nav`\n  background-color: ${({ theme }) => theme.NAVBAR.background};\n  border-top: 0.25rem solid ${({ theme }) => theme.COLOUR.primary};\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 0;\n  position: relative;\n  z-index: 200;\n  ${MEDIA_QUERY.desktop`\n    flex-flow: row nowrap;\n    height: ${({ theme }) => theme.NAVBAR.height};\n    justify-content: flex-start;\n    padding: 0 3rem;\n  `}\n`\n\nconst StyledOverlay = styled.div`\n  background-color: rgba(255, 255, 255, 0.85);\n  bottom: 0;\n  cursor: pointer;\n  height: 100%;\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  transition-property: width;\n  transition-duration: 0.2s;\n  width: 100%;\n  z-index: 99;\n  ${MEDIA_QUERY.desktop`\n    display: none;\n  `}\n`\n\nNavbar.propTypes = {\n  brand: string,\n  contained: bool,\n  links: object,\n  notifications: object,\n  user: object,\n  style: objectOf(oneOfType([number, string])),\n  type: string\n}\n\nNavbar.defaultProps = {\n  brand: '',\n  links: {}\n}\n"]},"metadata":{},"sourceType":"module"}