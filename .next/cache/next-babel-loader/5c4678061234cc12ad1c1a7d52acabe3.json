{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/image/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Image\n */\n// React\nimport { any, bool, func, number, objectOf, oneOfType, string } from 'prop-types'; // Style\n\nimport styled from 'styled-components';\nexport const Image = (_ref) => {\n  let props = _Object$assign({}, _ref);\n\n  const addDefaultSrc = ev => {\n    ev.target.src = '/static/placeholder/placeholder.svg';\n  };\n\n  return __jsx(StyledImg, _extends({\n    itemProp: \"contentUrl\",\n    onError: addDefaultSrc\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\nconst StyledImg = styled.img.withConfig({\n  displayName: \"image__StyledImg\",\n  componentId: \"sc-1e14ori-0\"\n})([\"\", \" \", \" \", \" \", \" \", \"\"], ({\n  cover\n}) => cover && `\n    height: 150px;\n    object-fit: fill;\n    width: 100%;\n  `, ({\n  fluid\n}) => fluid && `\n    height: auto;\n    max-width: 100%;\n  `, ({\n  rounded\n}) => rounded && `\n    border-radius: .25rem;\n  `, ({\n  roundedCircle\n}) => roundedCircle && `\n    border-radius: 50%;\n  `, ({\n  thumbnail,\n  theme\n}) => thumbnail && `\n    background-color: ${theme.COLOUR.light};\n    border: 1px solid ${theme.COLOUR.dark};\n    border-radius: .25rem;\n    height: auto;\n    max-width: 100%;\n    padding: .65rem;\n  `);\nImage.propTypes = {\n  alt: string.isRequired,\n  className: any,\n  click: func,\n  cover: bool,\n  fluid: bool,\n  rounded: bool,\n  roundedCircle: bool,\n  src: string.isRequired,\n  style: objectOf(oneOfType([number, string])),\n  thumbnail: bool\n};\nImage.defaultProps = {\n  fluid: true,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/image/index.js"],"names":["any","bool","func","number","objectOf","oneOfType","string","styled","Image","props","addDefaultSrc","ev","target","src","StyledImg","img","cover","fluid","rounded","roundedCircle","thumbnail","theme","COLOUR","light","dark","propTypes","alt","isRequired","className","click","style","defaultProps"],"mappings":";;;;;;AAAA;;;AAIA;AACA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,MAAvD,QAAqE,YAArE,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,KAAK,GAAG,UAAkB;AAAA,MAAZC,KAAY;;AACrC,QAAMC,aAAa,GAAGC,EAAE,IAAI;AAC1BA,IAAAA,EAAE,CAACC,MAAH,CAAUC,GAAV,GAAgB,qCAAhB;AACD,GAFD;;AAIA,SAAO,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,YAApB;AAAiC,IAAA,OAAO,EAAEH;AAA1C,KAA6DD,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CANM;AAQP,MAAMK,SAAS,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,iCACX,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,KAAK,IACJ;;;;GAHU,EASX,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,KAAK,IACJ;;;GAXU,EAgBX,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,OAAO,IACN;;GAlBU,EAsBX,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,aAAa,IACZ;;GAxBU,EA4BX,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACAD,SAAS,IACR;wBACmBC,KAAK,CAACC,MAAN,CAAaC,KAAM;wBACnBF,KAAK,CAACC,MAAN,CAAaE,IAAK;;;;;GAhC3B,CAAf;AAwCAhB,KAAK,CAACiB,SAAN,GAAkB;AAChBC,EAAAA,GAAG,EAAEpB,MAAM,CAACqB,UADI;AAEhBC,EAAAA,SAAS,EAAE5B,GAFK;AAGhB6B,EAAAA,KAAK,EAAE3B,IAHS;AAIhBc,EAAAA,KAAK,EAAEf,IAJS;AAKhBgB,EAAAA,KAAK,EAAEhB,IALS;AAMhBiB,EAAAA,OAAO,EAAEjB,IANO;AAOhBkB,EAAAA,aAAa,EAAElB,IAPC;AAQhBY,EAAAA,GAAG,EAAEP,MAAM,CAACqB,UARI;AAShBG,EAAAA,KAAK,EAAE1B,QAAQ,CAACC,SAAS,CAAC,CAACF,MAAD,EAASG,MAAT,CAAD,CAAV,CATC;AAUhBc,EAAAA,SAAS,EAAEnB;AAVK,CAAlB;AAaAO,KAAK,CAACuB,YAAN,GAAqB;AACnBd,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,aAAa,EAAE,KAHI;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB","sourcesContent":["/**\n * Image\n */\n\n// React\nimport { any, bool, func, number, objectOf, oneOfType, string } from 'prop-types'\n\n// Style\nimport styled from 'styled-components'\n\nexport const Image = ({ ...props }) => {\n  const addDefaultSrc = ev => {\n    ev.target.src = '/static/placeholder/placeholder.svg'\n  }\n\n  return <StyledImg itemProp='contentUrl' onError={addDefaultSrc} {...props} />\n}\n\nconst StyledImg = styled.img`\n  ${({ cover }) =>\n    cover &&\n    `\n    height: 150px;\n    object-fit: fill;\n    width: 100%;\n  `}\n\n  ${({ fluid }) =>\n    fluid &&\n    `\n    height: auto;\n    max-width: 100%;\n  `}\n\n  ${({ rounded }) =>\n    rounded &&\n    `\n    border-radius: .25rem;\n  `}\n\n  ${({ roundedCircle }) =>\n    roundedCircle &&\n    `\n    border-radius: 50%;\n  `}\n\n  ${({ thumbnail, theme }) =>\n    thumbnail &&\n    `\n    background-color: ${theme.COLOUR.light};\n    border: 1px solid ${theme.COLOUR.dark};\n    border-radius: .25rem;\n    height: auto;\n    max-width: 100%;\n    padding: .65rem;\n  `}\n`\n\nImage.propTypes = {\n  alt: string.isRequired,\n  className: any,\n  click: func,\n  cover: bool,\n  fluid: bool,\n  rounded: bool,\n  roundedCircle: bool,\n  src: string.isRequired,\n  style: objectOf(oneOfType([number, string])),\n  thumbnail: bool\n}\n\nImage.defaultProps = {\n  fluid: true,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n}\n"]},"metadata":{},"sourceType":"module"}