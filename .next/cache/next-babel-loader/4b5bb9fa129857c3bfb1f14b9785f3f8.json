{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/organisms/passwordChange/index.js\";\nvar __jsx = React.createElement;\n\n/**\n * Password Change\n */\n// React\nimport React, { useState } from 'react';\nimport { bool } from 'prop-types'; // useForm\n\nimport useForm from 'react-hook-form'; // UI\n\nimport { Alert, Button, FormField, FormForm, PageHeading } from \"../../\";\nexport var PasswordChange = function PasswordChange(_ref) {\n  var showPlaceholder = _ref.showPlaceholder;\n\n  var _useForm = useForm({\n    mode: 'onChange'\n  }),\n      errors = _useForm.errors,\n      formState = _useForm.formState,\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      watch = _useForm.watch;\n\n  var _useState = useState(false),\n      error = _useState[0];\n\n  var submit = function submit(data) {\n    var email = data.email;\n    console.log(email);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(PageHeading, {\n    center: true,\n    heading: \"Password Change\",\n    divider: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), error && __jsx(Alert, {\n    content: error.message,\n    context: \"warning\",\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(FormForm, {\n    handleSubmit: handleSubmit(submit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(FormField, {\n    errors: errors,\n    name: \"passwordOld\",\n    placeholder: showPlaceholder ? 'Old Password' : '',\n    register: register,\n    required: \"This is required\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(FormField, {\n    errors: errors,\n    name: \"password\",\n    placeholder: showPlaceholder ? 'New Password' : '',\n    register: register,\n    required: \"This is required\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(FormField, {\n    errors: errors,\n    name: \"passwordConfirm\",\n    placeholder: showPlaceholder ? 'Confirm Password' : '',\n    register: register,\n    required: \"This is required\",\n    type: \"password\",\n    validate: function validate(v) {\n      return v === watch('password');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(Button, {\n    block: true,\n    content: \"Submit\",\n    context: \"primary\",\n    disabled: !formState.isValid,\n    size: \"lg\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\nPasswordChange.propTypes = {\n  showPlaceholder: bool\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/organisms/passwordChange/index.js"],"names":["React","useState","bool","useForm","Alert","Button","FormField","FormForm","PageHeading","PasswordChange","showPlaceholder","mode","errors","formState","handleSubmit","register","watch","error","submit","data","email","console","log","message","color","v","isValid","propTypes"],"mappings":"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","sourcesContent":["/**\n * Password Change\n */\n\n// React\nimport React, { useState } from 'react'\nimport { bool } from 'prop-types'\n\n// useForm\nimport useForm from 'react-hook-form'\n\n// UI\nimport { Alert, Button, FormField, FormForm, PageHeading } from '../../'\n\nexport const PasswordChange = ({ showPlaceholder }) => {\n  const { errors, formState, handleSubmit, register, watch } = useForm({ mode: 'onChange' })\n  const [error] = useState(false)\n\n  const submit = data => {\n    const { email } = data\n    console.log(email)\n  }\n\n  return (\n    <>\n      <PageHeading center heading='Password Change' divider={false} />\n\n      {error && <Alert content={error.message} context='warning' style={{ color: '#fff' }} />}\n\n      <FormForm handleSubmit={handleSubmit(submit)}>\n        <FormField\n          errors={errors}\n          name='passwordOld'\n          placeholder={showPlaceholder ? 'Old Password' : ''}\n          register={register}\n          required='This is required'\n          type='password'\n        />\n\n        <FormField\n          errors={errors}\n          name='password'\n          placeholder={showPlaceholder ? 'New Password' : ''}\n          register={register}\n          required='This is required'\n          type='password'\n        />\n\n        <FormField\n          errors={errors}\n          name='passwordConfirm'\n          placeholder={showPlaceholder ? 'Confirm Password' : ''}\n          register={register}\n          required='This is required'\n          type='password'\n          validate={v => v === watch('password')}\n        />\n\n        <Button\n          block\n          content='Submit'\n          context='primary'\n          disabled={!formState.isValid}\n          size='lg'\n          type='submit'\n        />\n      </FormForm>\n    </>\n  )\n}\n\nPasswordChange.propTypes = {\n  showPlaceholder: bool\n}\n"]},"metadata":{},"sourceType":"module"}