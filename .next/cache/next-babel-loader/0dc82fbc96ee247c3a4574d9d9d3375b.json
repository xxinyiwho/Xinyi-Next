{"ast":null,"code":"var _jsxFileName = \"/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/form/checkbox/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Checkbox\n */\n// React\nimport { array, bool, func, string } from 'prop-types'; // Style\n\nimport styled, { css } from 'styled-components';\nexport const Checkbox = ({\n  change,\n  data,\n  legend,\n  stacked\n}) => {\n  const renderCheckbox = () => {\n    return data.map(({\n      disabled,\n      id,\n      isChecked,\n      label,\n      required\n    }, index) => {\n      return __jsx(StyledLabel, {\n        key: index,\n        stacked: stacked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, __jsx(StyledCheckbox, {\n        checked: isChecked,\n        className: \"Form-control\",\n        disabled: disabled,\n        id: id,\n        name: id,\n        onChange: change,\n        required: required,\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), label, __jsx(\"div\", {\n        className: \"Form-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, legend && __jsx(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, legend), renderCheckbox());\n};\nconst stackedStyles = css([\"display:block;margin:0.5rem 0;\"]);\nconst StyledLabel = styled.label.withConfig({\n  displayName: \"checkbox__StyledLabel\",\n  componentId: \"u4tvhe-0\"\n})([\"\", \" position:relative;padding-left:1.25rem;cursor:pointer;\"], stacked => stacked && stackedStyles);\nconst StyledCheckbox = styled.input.withConfig({\n  displayName: \"checkbox__StyledCheckbox\",\n  componentId: \"u4tvhe-1\"\n})([\"position:absolute;margin-top:0.05rem;margin-left:-1.25rem;cursor:pointer;\"]);\nCheckbox.propTypes = {\n  change: func.isRequired,\n  data: array.isRequired,\n  legend: string,\n  stacked: bool\n};\nCheckbox.defaultProps = {\n  legend: '',\n  stacked: false\n};","map":{"version":3,"sources":["/Users/xxinyi/code/Next/Portfolio with Next/Xinyi-Next/node_modules/industry-ui/components/atoms/form/checkbox/index.js"],"names":["array","bool","func","string","styled","css","Checkbox","change","data","legend","stacked","renderCheckbox","map","disabled","id","isChecked","label","required","index","stackedStyles","StyledLabel","StyledCheckbox","input","propTypes","isRequired","defaultProps"],"mappings":";;;;AAAA;;;AAIA;AACA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,MAA5B,QAA0C,YAA1C,C,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA;AAAxB,CAAD,KAAuC;AAC7D,QAAMC,cAAc,GAAG,MAAM;AAC3B,WAAOH,IAAI,CAACI,GAAL,CAAS,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,EAAZ;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA;AAAlC,KAAD,EAA+CC,KAA/C,KAAyD;AACvE,aACE,MAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,KAAlB;AAAyB,QAAA,OAAO,EAAER,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,cAAD;AACE,QAAA,OAAO,EAAEK,SADX;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,QAAQ,EAAEF,QAHZ;AAIE,QAAA,EAAE,EAAEC,EAJN;AAKE,QAAA,IAAI,EAAEA,EALR;AAME,QAAA,QAAQ,EAAEP,MANZ;AAOE,QAAA,QAAQ,EAAEU,QAPZ;AAQE,QAAA,IAAI,EAAC,UARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAYGD,KAZH,EAcE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD,KAnBM,CAAP;AAoBD,GArBD;;AAuBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,MAAT,CADb,EAEGE,cAAc,EAFjB,CADF;AAMD,CA9BM;AAgCP,MAAMQ,aAAa,GAAGd,GAAH,oCAAnB;AAKA,MAAMe,WAAW,GAAGhB,MAAM,CAACY,KAAV;AAAA;AAAA;AAAA,oEACbN,OAAO,IAAIA,OAAO,IAAIS,aADT,CAAjB;AAOA,MAAME,cAAc,GAAGjB,MAAM,CAACkB,KAAV;AAAA;AAAA;AAAA,iFAApB;AAOAhB,QAAQ,CAACiB,SAAT,GAAqB;AACnBhB,EAAAA,MAAM,EAAEL,IAAI,CAACsB,UADM;AAEnBhB,EAAAA,IAAI,EAAER,KAAK,CAACwB,UAFO;AAGnBf,EAAAA,MAAM,EAAEN,MAHW;AAInBO,EAAAA,OAAO,EAAET;AAJU,CAArB;AAOAK,QAAQ,CAACmB,YAAT,GAAwB;AACtBhB,EAAAA,MAAM,EAAE,EADc;AAEtBC,EAAAA,OAAO,EAAE;AAFa,CAAxB","sourcesContent":["/**\n * Checkbox\n */\n\n// React\nimport { array, bool, func, string } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const Checkbox = ({ change, data, legend, stacked }) => {\n  const renderCheckbox = () => {\n    return data.map(({ disabled, id, isChecked, label, required }, index) => {\n      return (\n        <StyledLabel key={index} stacked={stacked}>\n          <StyledCheckbox\n            checked={isChecked}\n            className='Form-control'\n            disabled={disabled}\n            id={id}\n            name={id}\n            onChange={change}\n            required={required}\n            type='checkbox'\n          />\n\n          {label}\n\n          <div className='Form-feedback' />\n        </StyledLabel>\n      )\n    })\n  }\n\n  return (\n    <fieldset>\n      {legend && <legend>{legend}</legend>}\n      {renderCheckbox()}\n    </fieldset>\n  )\n}\n\nconst stackedStyles = css`\n  display: block;\n  margin: 0.5rem 0;\n`\n\nconst StyledLabel = styled.label`\n  ${stacked => stacked && stackedStyles}\n  position: relative;\n  padding-left: 1.25rem;\n  cursor: pointer;\n`\n\nconst StyledCheckbox = styled.input`\n  position: absolute;\n  margin-top: 0.05rem;\n  margin-left: -1.25rem;\n  cursor: pointer;\n`\n\nCheckbox.propTypes = {\n  change: func.isRequired,\n  data: array.isRequired,\n  legend: string,\n  stacked: bool\n}\n\nCheckbox.defaultProps = {\n  legend: '',\n  stacked: false\n}\n"]},"metadata":{},"sourceType":"module"}